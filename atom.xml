<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2025-06-12T13:09:44.847Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ESP8266使用Mongoose-os初体验</title>
    <link href="https://zml3589110.github.io/posts/4236902251.html"/>
    <id>https://zml3589110.github.io/posts/4236902251.html</id>
    <published>2025-06-12T12:52:20.000Z</published>
    <updated>2025-06-12T13:09:44.847Z</updated>
    
    <content type="html"><![CDATA[<p>随着ESP8266的流行，基于ESP8266的FW发展也愈发兴旺，除了乐鑫原厂的AT、RTOS固件外，为促进IoT开发的效率，尤其是原型开发，基于各种脚本、动态语言的固件越来越受到欢迎。比如，nodemcu支持lua，各种micro python的固件，各种javascript固件等。</p><p>Mongoose-os是一个基于javascript的固件和IDE环境，其支持ESP8266、ESP32、以及CC3200。<br>Mongoose-os的官方站点是：<a href="https://mongoose-os.com/">https://mongoose-os.com/</a><br>其github地址是：<a href="https://github.com/cesanta/mongoose-os">https://github.com/cesanta/mongoose-os</a><br>镜像：<a href="https://gitcode.com/gh_mirrors/mo/mongoose-os?utm_source=csdn_blog_hover&amp;isLogin=1">https://gitcode.com/gh_mirrors/mo/mongoose-os?utm_source=csdn_blog_hover&amp;isLogin=1</a></p><h3 id="一、-Mongoose-os的下载和运行"><a href="#一、-Mongoose-os的下载和运行" class="headerlink" title="一、 Mongoose-os的下载和运行"></a>一、 Mongoose-os的下载和运行</h3><p>Mongoose-os的框架go语言写的（固件本身当然还是C），最简单的办法是用官方提供的二进制包，只有一个mos.exe文件（windows环境），也没有安装，直接运行即可。</p><p>Mongoose-os使用界面是web，这一点不太寻常。不过考虑到Mongoose本身是个嵌入式的webserver，那么基于其的Mongoose-os使用web界面管理也就显得颇有道理了。Mongoose的功能相当多，感觉比lighthttp之类的要好，其收费版本功能更强，但价格实惠，商用也是不错的。</p><h3 id="二、Mongoose-os的使用"><a href="#二、Mongoose-os的使用" class="headerlink" title="二、Mongoose-os的使用"></a>二、Mongoose-os的使用</h3><p>执行mos.exe后，在浏览器中访问如下URL: <a href="http://localhost:1992/">http://localhost:1992</a><br>即可看到如下界面：（新版本长得不一样，需要根据官方文档设置即可）</p><img src="/posts/undefined/20170705224330622" class="" title="这里写图片描述"><p>硬件这里使用nodemcu，依次选择和填入串口、esp8266、和wifi信息，wifi信息可以选填。注意第一次使用时，必须要更新固件，且因固件需要在线获取的，要确保网络正常。</p><p>更新完固件，点击【start coding】，就进入主界面了。</p><img src="/posts/undefined/20170705224749910" class="" title="这里写图片描述"><p>首先点击左侧的【device config】，进行系统设置，log level默认是1，调试时建议改为3，调试JS时颇有帮助。如果有MQTT Broker，可以设置MQTT的相关信息。</p><img src="/posts/undefined/20170705224356707" class="" title="这里写图片描述"><p>点击上方的【Expert View】即可直接编辑设定文件本身，能设置很多高级选项，</p><img src="/posts/undefined/20170705224817591" class="" title="这里写图片描述"><p>这里我们主要关注I2C部分,如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;i2c&quot;: &#123;</span><br><span class="line">    &quot;enable&quot;: true,</span><br><span class="line">    &quot;freq&quot;: 100000,</span><br><span class="line">    &quot;debug&quot;: false,</span><br><span class="line">    &quot;sda_gpio&quot;: 12,</span><br><span class="line">    &quot;scl_gpio&quot;: 14</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>可以看到，I2C的默认SDA pin是12，SCL pin是14，对应着nodeMCU的D6和D5。<br>接线的时候，会发现这2个默认pin是经过精心挑选的。</p><h3 id="三、bh1750驱动"><a href="#三、bh1750驱动" class="headerlink" title="三、bh1750驱动"></a>三、bh1750驱动</h3><p>Mongoose-os内置的传感器驱动较少，不支持bh1750，但是Mongoose-os提供了js接口的I2C库，<br>可利用其写一个简单的bh1750驱动。（bh1750的I2C协议比较简单）</p><p>1）I2C.scan<br>Mongoose-os还有一个颇为有趣的功能，称之为【Device Service】，其把常用的功能通过service的形式提供出来，其中有一个I2C.scan，可以用来测试I2C总线上挂的设备，如下图，bh1750接线后，显示有一个设备的地址是35，正是bh1750的默认I2C地址0x23。</p><img src="/posts/undefined/20170706095739957" class="" title="这里写图片描述"><p>2） init.js的修改<br>回到【Device file】，可以看到nodeMCU上的所有文件。和nodeMCU的默认lua固件一样，Mongoose-os也具备文件系统，同样类似于user.lua，也有一个名为init.js的初始执行文件。<br>默认情况下，这个init.js的功能是闪烁板载led灯，简单起见，直接修改这个文件如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">load(<span class="string">&#x27;api_config.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_gpio.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_mqtt.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_sys.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_timer.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_i2c.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Helper C function get_led_gpio_pin() in src/main.c </span></span><br><span class="line"><span class="comment">// returns built-in LED GPIO</span></span><br><span class="line"><span class="comment">// Blink built-in LED by timer</span></span><br><span class="line"><span class="keyword">let</span> led = ffi(<span class="string">&#x27;int get_led_gpio_pin()&#x27;</span>)();</span><br><span class="line">GPIO.set_mode(led, GPIO.MODE_OUTPUT);</span><br><span class="line"></span><br><span class="line"><span class="comment">// bh1750 H mode </span></span><br><span class="line"><span class="keyword">let</span> i2cbus = I2C.get();</span><br><span class="line"><span class="keyword">let</span> ret = I2C.write(i2cbus, <span class="number">0x23</span>, <span class="string">&#x27;\x10&#x27;</span>, <span class="number">1</span>, <span class="literal">true</span>);</span><br><span class="line">print(<span class="string">&#x27;i2c write result:&#x27;</span>, ret);</span><br><span class="line"></span><br><span class="line">Timer.set(<span class="number">5000</span> <span class="comment">/* 1 sec */</span>, <span class="literal">true</span> <span class="comment">/* repeat */</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> value = GPIO.toggle(led);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// read bh1750 lux data</span></span><br><span class="line">  <span class="keyword">let</span> data = I2C.read(i2cbus, <span class="number">0x23</span>, <span class="number">2</span>, <span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">if</span> (data) &#123;</span><br><span class="line">    <span class="keyword">let</span> lux = (data.at(<span class="number">0</span>)*<span class="number">256</span> + data.at(<span class="number">1</span>))/<span class="number">1.2</span></span><br><span class="line">    print(<span class="string">&quot;lux:&quot;</span>, lux);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> message = <span class="string">&#x27;tp=l&amp;ep=99&amp;l=&#x27;</span> + <span class="built_in">JSON</span>.stringify(lux);</span><br><span class="line">    <span class="keyword">let</span> ok = MQTT.pub(<span class="string">&#x27;l&#x27;</span>, message, <span class="number">0</span>);</span><br><span class="line">    print(<span class="string">&#x27;Published:&#x27;</span>, ok ? <span class="string">&#x27;yes&#x27;</span> : <span class="string">&#x27;no&#x27;</span>, <span class="string">&#x27;topic:&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;message:&#x27;</span>, message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="literal">null</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**需要注意，这里使用的javascript是所谓的mjs，功能有大幅的裁剪，不支持任何js的库，语法的限制更加严格。比如不支持var，只支持let，没有String库等。<br>具体可以参考：</p><p><strong><a href="https://github.com/cesanta/mjs">https://github.com/cesanta/mjs</a></strong></p><p>镜像：<a href="https://gitcode.com/gh_mirrors/mj/mjs?utm_source=csdn_blog_hover&amp;isLogin=1">https://gitcode.com/gh_mirrors/mj/mjs?utm_source=csdn_blog_hover&amp;isLogin=1</a></p><p>另外，考虑到扩展的缘故，mongoose-os利用ffi，可直接调用C函数，大大提高了扩展性，不需要像lua需要写语言包裹层，非常的便利，很有JS与C齐飞，便利共功能一色的感觉。缺点是调用时函数签名太繁琐。</p><p>MQTT的消息的topic和内容都可以根据自身要求修改。<br>点击上方的【Save + Reboot】，就可以看到照度的数据被采集(lux)，<br>如果设置过wifi和MQTT，则启动后会先进行wifi和MQTT的连接，并且将数据送至MQTT Broker.<br>如下图：</p><img src="/posts/undefined/20170705225332053" class="" title="这里写图片描述"><h1 id="ESP8266使用Mongoose-os的体验2"><a href="#ESP8266使用Mongoose-os的体验2" class="headerlink" title="ESP8266使用Mongoose-os的体验2"></a>ESP8266使用Mongoose-os的体验2</h1><p>关于本文<br>在【8. ESP8266使用Mongoose-os初体验（使用bh1750传感器）】一文中，介绍过在mongoose-os中利用javascript(mjs)进行bh1750数据读取的方法。脚本语言的灵活和非编译解释执行的特点表现的很鲜明，代码少，开发便利，这也是nodeMCU和各种脚本iot平台繁荣、大行其道的原因之一。<br>但是作为mongoose-os这样一个iot系统而言，mjs只是为提高效率、原型开发而加入的javascript的语法糖。其核心部分依然是C实现来主导，甚至mjs中的大量接口都是通过直接ffi映射C接口而来。当然，用mjs完全可以做开发（简单），但知其然也要知其所以然，复杂的应用、新设备的支持，用C来进行开发底层，或者功能接口映射到mjs是更自然的做法。这也就是官方所说【Advanced JavaScript】开发。</p><p>举例而言，mongoose-os对传感器的支持有限，官方的只有bme280等寥寥数种，对于不支持、不常见的传感器而言，用户必须自己进行驱动的开发。</p><p>本文以bh1750光度传感器为例（主要还是简单），简单介绍mongoose-os下，<br>开发环境的配置，I2C驱动的开发示例，以及mjs的导出和使用。<br>（bh1750的I2C接口很简单，只有用mjs也足以胜任，本文目的为介绍开发步骤和注意点）</p><h2 id="1-开发环境的配置"><a href="#1-开发环境的配置" class="headerlink" title="1.开发环境的配置"></a>1.开发环境的配置</h2><p>mongoose-os虽说是opensource的，但利益驱动使然，其牢牢控制住了开发中的每一个步骤。</p><p>从空工程建立、依赖库下载，编译、固件刷入，都需要用其mos工具，除下载固件外，都必须在其云端完成。</p><p>环境在linux和windows上均可运行，编译、固件写入的入口均为官方的mos程序。<br>（本文的环境为win+git bash+mos.exe）</p><p><strong>空工程创建</strong><br>从github上下载工程模板，并重新命名为bh1750-app</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/mongoose-os-apps/empty bh1750-app</span><br></pre></td></tr></table></figure><p>文件列表如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">./build</span><br><span class="line">./fs               -&gt;文件系统（可视为mos中看到的device Files），后面做成的mjs文件将置于此目录</span><br><span class="line">./fs/index.html</span><br><span class="line">./LICENSE</span><br><span class="line">./mos.yml   -&gt;配置文件</span><br><span class="line">./README.md</span><br><span class="line">./src</span><br><span class="line">./src/main.c  -&gt;C实现代码</span><br></pre></td></tr></table></figure><h2 id="2-代码实现介绍"><a href="#2-代码实现介绍" class="headerlink" title="2.代码实现介绍"></a>2.代码实现介绍</h2><p>bh1750使用I2C接口，因此需要根据bh1750的datesheet，增加数据访问接口（即驱动实现）。<br>另外bh1750支持1次测量、连续测量 + L分辨率和2种H分辨率等多种组合模式，</p><p>这里简便起见，驱动部分只实现了 连续 H 分辨率模式，并直接实现于src&#x2F;main.c。如果实现完整的、标准的驱动，应当与main.c分离实现。</p><ul><li>修改src&#x2F;main.c文件实现驱动</li></ul><p><strong>src&#x2F;main.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mgos.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mgos_i2c.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mgos_system.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int32_t</span> <span class="title">bh1750_init</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 获取i2c总线实例</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">mgos_i2c</span>* <span class="title">i2c</span> =</span> mgos_i2c_get_global();</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == i2c) &#123;</span><br><span class="line">            LOG(LL_INFO, (<span class="string">&quot;Could not get i2c global instance&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 通电</span></span><br><span class="line">        <span class="keyword">int8_t</span> cmd = <span class="number">0x01</span>;</span><br><span class="line">        <span class="keyword">bool</span> ok = mgos_i2c_write(i2c, <span class="number">0x23</span>, &amp;cmd, <span class="number">1</span>, <span class="literal">true</span>); <span class="comment">// dh1750默认地址为0x23（没有寄存器）</span></span><br><span class="line">        <span class="keyword">if</span>( !ok ) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置连续 H 分辨率模式</span></span><br><span class="line">        cmd = <span class="number">0x10</span>;</span><br><span class="line">        ok = mgos_i2c_write(i2c, <span class="number">0x23</span>, &amp;cmd, <span class="number">1</span>, <span class="literal">true</span>);  <span class="comment">// dh1750默认地址为0x23（没有寄存器）</span></span><br><span class="line">   <span class="keyword">return</span> ok ? <span class="number">0</span> : <span class="number">-3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int32_t</span> <span class="title">bh1750_read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 获取i2c总线实例</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">mgos_i2c</span>* <span class="title">i2c</span> =</span> mgos_i2c_get_global();</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == i2c) &#123;</span><br><span class="line">            LOG(LL_INFO, (<span class="string">&quot;Could not get i2c global instance&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">uint16_t</span> data = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">uint16_t</span> lux = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">      <span class="comment">// 连续 H 分辨率的数据读取</span></span><br><span class="line">      <span class="comment">// bh1750默认地址为0x23，没有寄存器，直接从总线上读</span></span><br><span class="line">        <span class="keyword">bool</span> ok = mgos_i2c_read(i2c, <span class="number">0x23</span>, &amp;data, <span class="number">2</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>( ok ) &#123;</span><br><span class="line">        <span class="comment">// 数据为2字节，收到的第1字节为高位，第2字节为低位</span></span><br><span class="line">        <span class="comment">// 变换后按datesheet计算要求除1.2</span></span><br><span class="line">                ((<span class="keyword">uint8_t</span>*)(&amp;lux))[<span class="number">0</span>] = ((<span class="keyword">uint8_t</span>*)(&amp;data))[<span class="number">1</span>];</span><br><span class="line">                ((<span class="keyword">uint8_t</span>*)(&amp;lux))[<span class="number">1</span>] = ((<span class="keyword">uint8_t</span>*)(&amp;data))[<span class="number">0</span>];</span><br><span class="line">                lux /= <span class="number">1.2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">   <span class="keyword">return</span> ok ? lux : <span class="number">-2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app默认初始化，如果希望没有bh1750不启动可在此检测</span></span><br><span class="line"><span class="function"><span class="keyword">enum</span> mgos_app_init_result <span class="title">mgos_app_init</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123; </span><br><span class="line">  LOG(LL_INFO, (<span class="string">&quot;Hi there&quot;</span>));</span><br><span class="line">  <span class="keyword">return</span> MGOS_APP_INIT_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>增加fs&#x2F;api_bh1750.js文件，导出mjs接口</li></ul><p>内容如下：声明ffi接口，并导出无状态的全局对象BH1750。<br>如果驱动支持多种模式并且能切换模式，就需要在持有状态数据。<br><strong>fs&#x2F;api_bh1750.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> BH1750 = &#123;</span><br><span class="line">    init : ffi(<span class="string">&#x27;int bh1750_init()&#x27;</span>),</span><br><span class="line">    lux : ffi(<span class="string">&#x27;int bh1750_read()&#x27;</span>),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>增加初始脚本文件fs&#x2F;init.js，在其中使用定时器打印传感器采集的流明数据<br><strong>fs&#x2F;init.js</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">load(<span class="string">&#x27;api_config.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_rpc.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_timer.js&#x27;</span>);</span><br><span class="line">load(<span class="string">&#x27;api_bh1750.js&#x27;</span>); <span class="comment">// 加载bh1750驱动</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> ret = BH1750.init(); <span class="comment">// bh1750初始化</span></span><br><span class="line">print(<span class="string">&#x27;init result:&#x27;</span>, ret);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连续 H 分辨率模式要求120ms以上间隔</span></span><br><span class="line">Timer.set(<span class="number">1000</span>, <span class="literal">true</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">  <span class="keyword">let</span> lux = BH1750.lux(); <span class="comment">// 获取流明数据</span></span><br><span class="line">  print(<span class="string">&#x27;lux:&#x27;</span>, lux);</span><br><span class="line">&#125;, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册mongoose-os的RPC服务</span></span><br><span class="line">RPC.addHandler(<span class="string">&#x27;Lux.Read&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">args</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">value</span>: BH1750.lux() &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-编译配置修改"><a href="#3-编译配置修改" class="headerlink" title="3.编译配置修改"></a>3.编译配置修改</h2><p>修改mos.yml文件，其为标准的YAML格式，具体格式、注意点可搜索。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span> <span class="string">mongoose-os</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">A</span> <span class="string">Mongoose</span> <span class="string">OS</span> <span class="string">app</span> <span class="string">skeleton</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">libs_version:</span> <span class="string">$&#123;mos.version&#125;</span></span><br><span class="line"><span class="attr">modules_version:</span> <span class="string">$&#123;mos.version&#125;</span></span><br><span class="line"><span class="attr">mongoose_os_version:</span> <span class="string">$&#123;mos.version&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Optional. List of tags for online search.</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">c</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># List of files / directories with C sources. No slashes at the end of dir names.</span></span><br><span class="line"><span class="attr">sources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">src</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># List of dirs. Files from these dirs will be copied to the device filesystem</span></span><br><span class="line"><span class="attr">filesystem:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">fs</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#驱动的配置信息可以加入config</span></span><br><span class="line"><span class="comment"># config_schema:</span></span><br><span class="line"><span class="comment">#  - [&quot;my_app&quot;, &quot;o&quot;, &#123;title: &quot;My app custom settings&quot;&#125;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认使用i2c总线</span></span><br><span class="line"><span class="attr">config_schema:</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="string">&quot;i2c.enable&quot;</span>, <span class="literal">true</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">libs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/boards</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/ca-bundle</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/rpc-service-config</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/rpc-service-fs</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/rpc-uart</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/i2c</span>   <span class="string">（增加i2c库依赖）</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/rpc-service-i2c</span> <span class="string">（增加rpc依赖，不加也可，目的是用scan接口调试）</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">origin:</span> <span class="string">https://github.com/mongoose-os-libs/mjs（增加mjs依赖）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Used by the mos tool to catch mos binaries incompatible with this file format</span></span><br><span class="line"><span class="comment"># 貌似日期实为框架版本，不可随意变更</span></span><br><span class="line"><span class="attr">manifest_version:</span> <span class="number">2017-09-29</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-编译"><a href="#3-编译" class="headerlink" title="3.编译"></a>3.编译</h2><p>在bh1750-app目录下执行编译命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e:/mos.exe --verbose build --arch esp8266</span><br></pre></td></tr></table></figure><p>建议打开-verbose选项，可看到详细的日志，基本流程如下：</p><ol><li>连接到<a href="https://mongoose.cloud,上传代码,构筑临时环境/">https://mongoose.cloud，上传代码，构筑临时环境</a></li><li>在云端从github上checkout各种核心库和依赖库</li><li>在云端环境，各种mount配置好文件环境</li><li>用docker容器进行真正编译（语法错误会在此阶段提示）</li><li>编译后的用户固件、fs固件、ESP8266的初始配置固件等打包为zip文件置于build目录下</li></ol><p>优点显而易见：一键编译，依赖处理，云端可以统一维护、调整编译环境，<br>缺点也是鲜明：所有代码上传，毫无秘密可言；编译细节无法得知（甚至不知道具体编译器是什么）；必须联网、速度很慢、访问繁忙时无法编译。</p><p>成功后日志的最后会有如下消息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Success, built bh1750-app/esp8266 version 1.0 (20181007-145007).</span><br><span class="line">Firmware saved to build/fw.zip</span><br></pre></td></tr></table></figure><p>打包的Zip文件内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">624K 10月  7 14:50 bh1750-app.bin</span><br><span class="line"> 128 10月  7 14:50 esp_init_data_default_v08.bin</span><br><span class="line">256K 10月  7 14:50 fs.bin</span><br><span class="line">1.2K 10月  7 14:50 manifest.json</span><br><span class="line">2.3K 10月  7 14:50 rboot.bin</span><br></pre></td></tr></table></figure><p>其中，bh1750-app.bin为C语言的固件，fs.bin为存放mjs（包括依赖的底层mjs)的固件，manifest为刷入配置，其余为乐鑫官方提供的初始固件。</p><h2 id="4-固件刷新"><a href="#4-固件刷新" class="headerlink" title="4.固件刷新"></a>4.固件刷新</h2><p>在bh1750-app目录下执行命令行如下（无须指定串口号，这点还没有调查是如何实现的）：</p><p>e:&#x2F;mos.exe –verbose flash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ e:/mos --verbose flash</span><br><span class="line">    Loaded bh1750-app/esp8266 version 1.0 (20181007-145007)</span><br><span class="line">    Using port COM3</span><br><span class="line">    Opening COM3 @ 115200...</span><br><span class="line">    Connecting to ESP8266 ROM, attempt 1 of 10...</span><br><span class="line">      Connected, chip: ESP8266EX</span><br><span class="line">    Running flasher @ 0...</span><br><span class="line">      Flasher is running</span><br><span class="line">    Flash size: 4194304, params: 0x0240 (dio,32m,40m)</span><br><span class="line">    Deduping...</span><br><span class="line">         2320 @ 0x0 -&gt; 0</span><br><span class="line">       262144 @ 0x8000 -&gt; 65536</span><br><span class="line">       638560 @ 0x100000 -&gt; 474720</span><br><span class="line">          128 @ 0x3fc000 -&gt; 0</span><br><span class="line">    Writing...</span><br><span class="line">         4096 @ 0x7000</span><br><span class="line">        65536 @ 0x11000</span><br><span class="line">        77824 @ 0x101000</span><br><span class="line">      ...</span><br><span class="line">       200704 @ 0x163000</span><br><span class="line">        16384 @ 0x195000</span><br><span class="line">         8192 @ 0x19a000</span><br><span class="line">         4096 @ 0x3fb000</span><br><span class="line">    Wrote 548448 bytes <span class="keyword">in</span> 32.90 seconds (130.23 KBit/sec)</span><br><span class="line">    Verifying...</span><br><span class="line">         2320 @ 0x0</span><br><span class="line">         4096 @ 0x7000</span><br><span class="line">       262144 @ 0x8000</span><br><span class="line">       638560 @ 0x100000</span><br><span class="line">         4096 @ 0x3fb000</span><br><span class="line">          128 @ 0x3fc000</span><br><span class="line">    Booting firmware...</span><br><span class="line">    All <span class="keyword">done</span>!</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-接线"><a href="#5-接线" class="headerlink" title="5.接线"></a>5.接线</h2><p>ESP8266是安信可的NodeMCU板(ESP12系列的话，接线相同）</p><table><thead><tr><th>BH1750(GY-302)</th><th>ESP8266(NodeMCU)</th></tr></thead><tbody><tr><td>VCC</td><td>3V3</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>SCL</td><td>D5(Pin14)</td></tr><tr><td>SDA</td><td>D6(Pin12)</td></tr></tbody></table><p>Mongoose-os上的I2C的SCL和SDA的管脚是可配置的。<br>因为ESP8266没有硬件I2C，其I2C是软件模拟的。</p><p><strong>注意：可以本地编译 mos build –local –platform esp8266</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/ydogg/article/details/74505742">ESP8266使用Mongoose-os初体验（使用bh1750传感器）</a></li><li><a href="https://blog.csdn.net/ydogg/article/details/82962210">ESP8266使用Mongoose-os的体验2 - 【Advanced JavaScript】开发</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP8266使用Mongoose-os初体验</summary>
    
    
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="Mongoose-os" scheme="https://zml3589110.github.io/categories/Mongoose-os/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="Mongoose-os" scheme="https://zml3589110.github.io/tags/Mongoose-os/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="bh1750传感器" scheme="https://zml3589110.github.io/tags/bh1750%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>ESP8266通过OTA更新固件(OPEN-RTOS)</title>
    <link href="https://zml3589110.github.io/posts/4103456400.html"/>
    <id>https://zml3589110.github.io/posts/4103456400.html</id>
    <published>2025-06-12T09:21:20.000Z</published>
    <updated>2025-06-12T09:40:13.386Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. OTA是什么</strong><br>OTA（Over The Air），通常也称为FOTA(Firmware Over The Air)，意思是硬件中的固件通过无线升级版本。众所周知，硬件固件的部署，以及固件版本升级颇为繁琐，很多时候得通过人工完成，成本很高。所以OTA是一个颇为实用、也是很实惠的功能。<br>手环等设备，其实也有这类问题，一般都是通过APP升级-&gt; -&gt;蓝牙固件升级的方式。</p><p><strong>2. 乐鑫对OTA的支持</strong><br>ESP8266的厂商乐鑫提供了FOTA的功能，AT固件和NONSDK的都支持。<br>根据官方资料，乐鑫的FOTA是通过HTTP协议实现，且支持自建FOTA下载服务（WEB服务器）。<br>但乐鑫对常用功能和传感器的支持力度较少，需要不停造轮子、找轮子，效率相对较低。<br>在乐鑫以外，esp-open-rtos等也可以支持OTA功能，该有的功能都已经具备。<br>加之对mqtt、传感器的驱动支持更好，因此esp-open-rtos是个不错的选择，<br>本文基于esp-open-rtos的OTA实现了在线升级的简单例子，并对原理进行说明。<br>关于esp-open-rtos详细，可参照前文<a href="http://blog.csdn.net/ydogg/article/details/75194902">http://blog.csdn.net/ydogg/article/details/75194902</a></p><p><strong>3. Esp-open-rtos的OTA简介</strong><br>Esp-open-rtos的OTA实现也很简洁：<br>通过tftp协议在线下载固件，利用rboot进行新旧固件的切换和硬件重启。</p><p>其中固件下载支持client和server两种模式，可根据具体情况选择一种，也可同时使用。<br>Client模式下，是从tftp服务器中下载固件；<br>Server模式下，是esp8266作为tftp服务，接收tftp客户端发送的新固件。</p><p>总的来说，Client模式更加灵活些，可以通过各种事件进行触发（如mqtt通知），且硬件侧的负载更轻。<br>本文基于Client模式进行说明。</p><p><strong>4. OTA环境准备</strong></p><p>主要是tftp的安装，下面命令以CentOS为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install tftp-server tftp</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">默认情况下tftp是托管给xinit，其配置文件位于/etc/xinit.d/tftp，内容如下：</span><br><span class="line"></span><br><span class="line">service tftp</span><br><span class="line">&#123;</span><br><span class="line">    socket_type     = dgram</span><br><span class="line">    protocol        = udp</span><br><span class="line">    wait            = yes</span><br><span class="line">    user            = root</span><br><span class="line">    server          = /usr/sbin/in.tftpd</span><br><span class="line">    server_args     = -s /var/lib/tftpboot -c</span><br><span class="line">    disable         = yes</span><br><span class="line">    per_source      = <span class="number">11</span></span><br><span class="line">    cps         = <span class="number">100</span> <span class="number">2</span></span><br><span class="line">    flags           = IPv4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>server_args中 –s指明了tftp服务所使用的磁盘路径；如果需要上传，需要增加-c选项。<br>在OTA只需要下载，因此可以不开启-c。（直接复制新固件到&#x2F;var&#x2F;lib&#x2F;tftpboot下即可）</p><p>测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp mybin/xxx.bin /var/lib/tftpboot</span></span><br><span class="line"><span class="comment"># tftp -m binary &lt;yourip&gt; -c get xxx.bin</span></span><br></pre></td></tr></table></figure><p>如果能成功取得xxx.bin，说明tftp服务正常。<br>另外， tftp的端口为69，如有防火墙，注意相关设置需要放开。</p><p><strong>5. OTA代码准备</strong></p><p>在esp-open-rtos&#x2F;examples&#x2F;ota_basic下，有OTA的示例代码，<br>但因为有固件验证等功能，略复杂，理解方便起见，精简为如下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;espressif/esp_common.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp/uart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp8266.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ssid_config.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ota-tftp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;rboot-api.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* TFTP client will request this image filenames from this server */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFTP_IMAGE_SERVER <span class="meta-string">&quot;192.168.31.192&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFTP_IMAGE_FILENAME1 <span class="meta-string">&quot;fm1.bin&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFTP_IMAGE_FILENAME2 <span class="meta-string">&quot;fm2.bin&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">download_and_restart</span><span class="params">(<span class="keyword">char</span>* filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( !filename ) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前固件的slot序号</span></span><br><span class="line">    rboot_config conf = rboot_get_config();</span><br><span class="line">    <span class="keyword">int</span> slot = (conf.current_rom + <span class="number">1</span>) % conf.count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只有1个slot时不能进行OTA</span></span><br><span class="line">    <span class="comment">// 2个的情况下（一般有2个），新固件会被放到非当前(空闲)的那个slot下</span></span><br><span class="line">    <span class="keyword">if</span>(slot == conf.current_rom) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;FATAL ERROR: Only one OTA slot is configured!¥n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下载指定的固件文件到非当前(空闲)slot</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Downloading %s to slot %d...¥n&quot;</span>, filename, slot);</span><br><span class="line">    <span class="keyword">int</span> res = ota_tftp_download(TFTP_IMAGE_SERVER, TFTP_PORT, filename, <span class="number">1000</span>, slot, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ota_tftp_download %s result %d¥n&quot;</span>, filename, res);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( res != <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// vertify固件，检查基本参数，不做也可以</span></span><br><span class="line">    <span class="keyword">uint32_t</span> length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> valid = rboot_verify_image(conf.roms[slot], &amp;length, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span>( !valid ) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Not valid after all :(¥n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Rebooting into slot %d...¥n&quot;</span>, slot);</span><br><span class="line">    <span class="comment">// 设置新的当前slot</span></span><br><span class="line">    rboot_set_current_rom(slot);</span><br><span class="line">    <span class="comment">// 重启</span></span><br><span class="line">    sdk_system_restart();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_fm_task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;update task starting...¥n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 模拟触发，task在delay 20秒后开始更新固件（默认网络正常）</span></span><br><span class="line">        <span class="comment">// 根据业务，可以通过mqtt通知或者http调用等方式进行触发</span></span><br><span class="line">        vTaskDelay(<span class="number">20000</span> / portTICK_PERIOD_MS);</span><br><span class="line">        download_and_restart(TFTP_IMAGE_FILENAME2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">user_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 设置波特率为</span></span><br><span class="line">    uart_set_baud(<span class="number">0</span>, <span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印当前固件的slot号</span></span><br><span class="line">    rboot_config conf = rboot_get_config();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;¥r¥n¥r¥nOTA Basic demo.¥r¥nCurrently running on flash slot %d / %d.¥r¥n¥r¥n&quot;</span>,</span><br><span class="line">           conf.current_rom, conf.count);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印当前固件的地址信息</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Image addresses in flash:¥r¥n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;conf.count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%d: offset 0x%08x¥r¥n&quot;</span>, i == conf.current_rom ? <span class="string">&#x27;*&#x27;</span>:<span class="string">&#x27; &#x27;</span>, i, conf.roms[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前fm信息（现在是fm1的代码）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;fm1 is runnning!¥n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// wifi设定，</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sdk_station_config</span> <span class="title">config</span> =</span> &#123;</span><br><span class="line">        .ssid = <span class="string">&quot;your_wifi_ssid&quot;</span>,</span><br><span class="line">        .password = <span class="string">&quot;your_pass&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    sdk_wifi_set_opmode(STATION_MODE);</span><br><span class="line">    sdk_wifi_station_set_config(&amp;config);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动下载task</span></span><br><span class="line">    xTaskCreate(&amp;update_fm_task, <span class="string">&quot;update_fm _task&quot;</span>, <span class="number">2048</span>, <span class="literal">NULL</span>, <span class="number">2</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Makefile内容如下:</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM=otatest</span><br><span class="line">EXTRA_COMPONENTS=extras/rboot-ota</span><br><span class="line"><span class="keyword">include</span> ../../common.mk</span><br></pre></td></tr></table></figure><p>执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">cp ./firmware/otatest.bin /var/lib/tftpboot/fm1.bin</span><br></pre></td></tr></table></figure><p>另外需要做成固件2，变更上面的第37行和第84行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">download_and_restart(TFTP_IMAGE_FILENAME2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fm1 is runnning!¥n&quot;</span>);</span><br><span class="line">---&gt;</span><br><span class="line">download_and_restart(TFTP_IMAGE_FILENAME1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fm2 is runnning!¥n&quot;</span>);</span><br></pre></td></tr></table></figure><p>执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">cp ./firmware/otatest.bin /var/lib/tftpboot/fm2.bin</span><br></pre></td></tr></table></figure><p><strong>6 固件下载</strong></p><p>将fm1.bin下载到esp8266（具体硬件是nodemcu dev1.0），<br>注意nodemcu的SPI Mode是DIO。</p><p>写入成功后，首先是fm1运行，20s后，如果网络正常，会被更新为fm2。<br>Fm2运行后20s再次更新成fm1，如此循环往复。fm1-&gt;fm2-&gt;fm1…<br>如果首先下载的是fm2，则上述过程则会反过来。fm2-&gt;fm1-&gt;fm2…</p><p><strong>通过串口，可看到如下日志如下</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">SP-Open-SDK ver: 0.0.1 compiled @ Jul 26 2017 12:56:25</span><br><span class="line">phy ver: 273, pp ver: 8.3</span><br><span class="line"></span><br><span class="line">OTA Basic demo.</span><br><span class="line">Currently running on flash slot 0 / 2. &gt;&gt;&gt;&gt;&gt;&gt;&gt;2个slot，当前是0（写入地址是0x2000）</span><br><span class="line"></span><br><span class="line">Image addresses <span class="keyword">in</span> flash:</span><br><span class="line">*0: offset 0x00002000</span><br><span class="line"> 1: offset 0x00202000</span><br><span class="line">fm1 is runnning!                      &gt;&gt;&gt;&gt;&gt;&gt;&gt;第一次是fm1运行   </span><br><span class="line">… </span><br><span class="line">mode : sta(5c:cf:7f:a3:13:83)</span><br><span class="line">add if0</span><br><span class="line">TFTP client task starting...         &gt;&gt;&gt;&gt;&gt;&gt;&gt;下载线程   </span><br><span class="line">… </span><br><span class="line"></span><br><span class="line">connected with iotwifi, channel 7</span><br><span class="line">dhcp client start...</span><br><span class="line">ip:192.168.31.170,mask:255.255.255.0,gw:192.168.31.1 &gt;&gt;&gt;下载线程</span><br><span class="line">Downloading fm2.bin to slot 1...       &gt;&gt;&gt;&gt;&gt;&gt;&gt;fm2被下载到slot1        </span><br><span class="line">ota_tftp_download fm2.bin result 0</span><br><span class="line"></span><br><span class="line">Rebooting into slot 1... &gt;&gt;&gt;&gt;&gt;&gt;&gt;从slot1重启，切换为fm2</span><br><span class="line">… </span><br><span class="line"></span><br><span class="line">rBoot v1.4.0 - richardaburton@gmail.com</span><br><span class="line">Flash Size:   32 Mbit</span><br><span class="line">Flash Mode:   DIO</span><br><span class="line">Flash Speed:  40 MHz</span><br><span class="line">rBoot Option: Big flash</span><br><span class="line">rBoot Option: RTC data</span><br><span class="line"></span><br><span class="line">Booting rom 1.</span><br><span class="line">system param error </span><br><span class="line"></span><br><span class="line">ESP-Open-SDK ver: 0.0.1 compiled @ Jul 26 2017 12:56:25</span><br><span class="line">phy ver: 273, pp ver: 8.3</span><br><span class="line"></span><br><span class="line">OTA Basic demo.</span><br><span class="line">Currently running on flash slot 1 / 2. &gt;&gt;&gt;&gt;&gt;&gt;&gt;2个slot，当前是1  </span><br><span class="line"></span><br><span class="line">Image addresses <span class="keyword">in</span> flash:</span><br><span class="line"> 0: offset 0x00002000</span><br><span class="line">*1: offset 0x00202000</span><br><span class="line">fm2 is runnning!                     &gt;&gt;&gt;&gt;&gt;&gt;&gt;fm2运行！固件更新成功。</span><br><span class="line">mode : sta(5c:cf:7f:a3:13:83)</span><br><span class="line">add if0</span><br><span class="line">TFTP client task starting...</span><br><span class="line">scandone</span><br><span class="line">add 0</span><br><span class="line">aid 2</span><br><span class="line">cnt </span><br><span class="line"></span><br><span class="line">connected with iotwifi, channel 7</span><br><span class="line">dhcp client start...</span><br><span class="line">ip:192.168.31.170,mask:255.255.255.0,gw:192.168.31.1</span><br><span class="line">Downloading fm1.bin to slot 0...       &gt;&gt;&gt;&gt;&gt;&gt;&gt;fm1被下载到slot0</span><br><span class="line">ota_tftp_download fm1.bin result 0</span><br><span class="line">----</span><br><span class="line">Rebooting into slot 0...               &gt;&gt;&gt;&gt;&gt;&gt;&gt;从slot0重启,重新切换为fm1</span><br></pre></td></tr></table></figure><p>目前切换slot时，启动会提示system param error，并dump信息。<br>经过确认esp-open-rtos的代码后，原因是启动时checksum，导致打印警告信息，<br>具体原因还没有查清，但固件本身的功能没有受到影响。</p><p>如要使用Server模式更新固件，在wifi连接成功并取得IP后，调用如下代码即可：<br>ota_tftp_init_server(YOUR_TFTP_PORT);</p><p>参考url:<br>乐鑫：<a href="http://espressif.com/zh-hans/support/download/documents">http://espressif.com/zh-hans/support/download/documents</a><br>esp-open-rtos:<a href="https://github.com/SuperHouse/esp-open-rtos/wiki/OTA-Update-Configuration">https://github.com/SuperHouse/esp-open-rtos/wiki/OTA-Update-Configuration</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/ydogg/article/details/76145388">ESP8266通过OTA更新固件的实践</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP8266通过OTA更新固件(OPEN-RTOS)</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="OTA" scheme="https://zml3589110.github.io/categories/OTA/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP01S" scheme="https://zml3589110.github.io/tags/ESP01S/"/>
    
    <category term="OTA" scheme="https://zml3589110.github.io/tags/OTA/"/>
    
    <category term="OPEN-RTOS" scheme="https://zml3589110.github.io/tags/OPEN-RTOS/"/>
    
  </entry>
  
  <entry>
    <title>ESP-OPEN-SDK环境搭建及homekit测试</title>
    <link href="https://zml3589110.github.io/posts/325084904.html"/>
    <id>https://zml3589110.github.io/posts/325084904.html</id>
    <published>2025-06-12T02:53:20.000Z</published>
    <updated>2025-06-12T08:51:14.382Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>最近在想重新处理一下ESP8266下的Homekit使用，开始只记得使用的是ESP-OPEN-SDK，所以就重新找之前完成过的工具来使用，谁知一直不成功，全新安装各种编译错误，后来就重新找了以前编译好的环境来试，果然就可以了！后来经历好几次设置后总算能编译烧录运行！技术还需经常复习！</p><h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><h3 id="1、编译时报错找不到各种文件"><a href="#1、编译时报错找不到各种文件" class="headerlink" title="1、编译时报错找不到各种文件"></a>1、编译时报错找不到各种文件</h3><p>那是因为环境没有搭建成功！环境搭建成功后一般都是能够编译成功。</p><h3 id="2、esptool相关报错"><a href="#2、esptool相关报错" class="headerlink" title="2、esptool相关报错"></a>2、esptool相关报错</h3><p>如果使用的是python3以上版本，但使用open-sdk下的xtensa-lx106-elf内esptool工具匹配的python2，会报错，解决办法是将esptool改成高版本，或者将python改成2版本，最终为了兼容ESP32等IDF功能，就直接将环境改成ESP32的esptool，也就是升级了esptool</p><img src="/posts/undefined/image-20250612114352804.png" class="" title="image-20250612114352804"><p>因为python2的print函数能直接打印，而在python3后就需要加括号</p><h3 id="3、esptool下载程序"><a href="#3、esptool下载程序" class="headerlink" title="3、esptool下载程序"></a>3、esptool下载程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p /dev/ttyUSB0 -b 115200 write_flash -fs 1MB -fm dout -ff 40m 0x0 firmware.bak/rboot.bin 0x1000 firmware.bak/blank_config.bin 0x2000 firmware/switch.bin</span><br></pre></td></tr></table></figure><p>后续只下载主要程序即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py write_flash 0x2000 firmware/switch.bin</span><br></pre></td></tr></table></figure><p>串口查看软件命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen /dev/ttyUSB0 115200</span><br></pre></td></tr></table></figure><p><strong>ESP-01模块（Flash容量为1M，4Mbit） ESP-12系列（Flash容量为8M，32Mbit）</strong><br><strong>如果是Nodemcu，则注意SPI选择DIO模式，而非QIO</strong></p><p>SPI Mode一般选择QIO，但是nodemcu需要选择DIO。<br>因为固件都比较大，COM口的波特率可以选择高些，如921600之类的，提高效率。</p><p>下载后，将GPIO0和GPIO15拉高或悬空，重新上电即可进入到新固件。</p><p>固件下载工具有很多，有nodemcu提供的flasher，也有pytools，不过使用乐鑫官方的FLASH_DOWNLOAD_TOOLS感觉是比较好用的。</p><p>可以在乐鑫官方网站找到它，当前的最新版本是<a href="http://www.espressif.com/sites/default/files/tools/flash_download_tools_v3.4.8.zip">flash_download_tools_v3.4.8.zip</a></p><p><strong>1、 UART串口转接</strong><br>Nodemcu自带usb转串口的芯片（CP2102），可以直接PC。<br>安信可模组如ESP01，ESP12E&#x2F;F等等，需要TTL转USB的转接板才能下载固件。<br>可以选择一般CP2102，CH340或者是FT232芯片的转接板都可以。</p><p>如果ESP8266芯片模组，接法都是一样的，包括乐鑫自己的ESP-WROOM-02模组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TX（esp8266）  -----  RX（usb转接板）</span><br><span class="line">RX（esp8266）  -----  TX（usb转接板）</span><br><span class="line">GND（esp8266）-----  GND（usb转接板）  共地</span><br><span class="line">VCC（esp8266）  ----- 外接3.3V，不可用usb自带的3.3V</span><br><span class="line">CH_PD(esp8266A) ----- 3.3V (高电平有效)</span><br></pre></td></tr></table></figure><p>如果正常连接，PC中即可看到虚拟出的串口，通过各种串口工具访问原有的固件。 </p><p><strong>2、固件下载模式的接线</strong><br>固件下载时，在以上接线的基础上，将GPIO0和GPIO15拉低。<br>NodeMCU因为具有自动下载功能，通过USB即可完成拉低重启等工作，无需另外接线。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GPIO0（esp8266）  -----  GND（下拉为UART下载模式，上拉为工作模式）</span><br><span class="line">GPIO15（esp8266）----- GND</span><br><span class="line"></span><br><span class="line">TX（esp8266）  -----  RX（usb转接板）</span><br><span class="line">RX（esp8266）  -----  TX（usb转接板）</span><br><span class="line">GND（esp8266）-----  GND（usb转接板）  需要和ESP8266共地</span><br><span class="line">VCC（esp8266）  ----- 外接3.3V，不可用usb自带的3.3V</span><br><span class="line">CH_PD(esp8266A) ----- 3.3V (高电平有效)</span><br></pre></td></tr></table></figure><p>接线后，模组重新上电后，即进入下载模式。</p><h1 id="ESP8266-RTOS-SDK与esp-open-sdk的区别"><a href="#ESP8266-RTOS-SDK与esp-open-sdk的区别" class="headerlink" title="ESP8266_RTOS_SDK与esp-open-sdk的区别"></a>ESP8266_RTOS_SDK与esp-open-sdk的区别</h1><p>ESP8266_RTOS_SDK与esp-open-sdk是针对ESP8266芯片的两个开发工具包，它们有以下区别：</p><ol><li>ESP8266_RTOS_SDK是一个基于FreeRTOS的软件开发框架，用于开发ESP8266芯片的应用程序。它提供了丰富的API和组件，包括WiFi、TCP&#x2F;IP、文件系统、多线程等，使开发者可以方便地构建功能强大的应用程序。</li><li>esp-open-sdk是一个开源的ESP8266开发工具链，用于编译和调试ESP8266的固件。它包含了编译器、调试器、库文件等工具，可以帮助开发者进行底层的系统级开发和调试。</li></ol><p>具体区别如下：</p><ul><li>功能不同：ESP8266_RTOS_SDK主要提供了丰富的应用程序开发框架，而esp-open-sdk则提供了编译和调试ESP8266固件的工具链。</li><li>使用方式不同：ESP8266_RTOS_SDK需要在其提供的开发环境中进行开发，使用其提供的API和组件进行应用程序开发。而esp-open-sdk可以与其他开发环境（如Arduino IDE）结合使用，通过命令行进行编译和调试。</li><li>技术层次不同：ESP8266_RTOS_SDK更加高级和抽象，提供了更多的应用程序开发接口和功能。而esp-open-sdk更加底层，主要用于系统级开发和调试。</li><li>社区支持不同：ESP8266_RTOS_SDK有一个活跃的开发者社区，提供了丰富的文档和示例代码，可以帮助开发者解决问题。而esp-open-sdk的社区相对较小，文档和示例代码相对较少。</li></ul><h2 id="类型说明"><a href="#类型说明" class="headerlink" title="类型说明"></a>类型说明</h2><p><strong>一、SDK类型</strong><br>ESP8266 SDK的基础平台按照是否基于操作系统可分为：<br>non-OS 和 RTOS 两种版本。<br>Non-OS SDK 是不基于操作系统的 SDK，提供 IOT_Demo 和 AT 的编译。<br>Non-OS SDK 主要使用定时器和回调函数的方式实现各个功能事件的嵌套，达到特定条件下触发特定功能函数的目的。Non-OS SDK 使用 espconn 接口实现网络操作，用户需要按照 espconn 接口的使用规则进行软件开发。</p><p>2）RTOS SDK 基于 FreeRTOS，在 Github 上开源。<br>• RTOS 版本 SDK 使用 FreeRTOS 系统，引⼊ OS 多任务处理的机制，用户可以使用<br>FreeRTOS 的标准接口实现资源管理、循环操作、任务内延时、任务间信息传递和<br>同步等⾯向任务流程的设计方式。具体接口使用方法参考 FreeRTOS 官方网站。</p><p>• RTOS 版本 SDK 的网络操作接口是标准 lwIP API，同时提供了 BSD Socket API 接<br>口的封装实现，用户可以直接按照 Socket API 的使用方式来开发软件应用，也可以<br>直接编译运行其他平台的标准 Socket 应用，有效降低平台切换的学习成本。</p><p>• RTOS 版本 SDK 引⼊了 cJSON 库，使用该库函数可以更加方便的实现对 JSON 数<br>据包的解析。</p><p>• RTOS 版本兼容 non-OS SDK 中的 Wi-Fi 接口、SmartConfig 接口、Sniffer 相关接<br>口、系统接口、定时器接口、FOTA 接口和外围驱动接口，不⽀持 AT 实现。</p><p><a href="http://espressif.com/sites/default/files/documentation/2a-esp8266-sdk_getting_started_guide_cn.pdf">具体可参考如下文档</a></p><p><strong>二、固件说明</strong><br>乐鑫可以支持在线固件升级，称为Firmware Over The Air（FOTA）。<br>与此相对的是传统固件类型，称为Non-FOTA。<br>固件有如下类型：</p><img src="/posts/undefined/20170521153946992" class="" title="固件类型"><p>地址映射图如下：</p><img src="/posts/undefined/20170521154026982" class="" title="地址映射"><h1 id="ESP8266使用esp-open-rtos的实践"><a href="#ESP8266使用esp-open-rtos的实践" class="headerlink" title="ESP8266使用esp-open-rtos的实践"></a>ESP8266使用esp-open-rtos的实践</h1><h2 id="一、esp-open-rtos概要"><a href="#一、esp-open-rtos概要" class="headerlink" title="一、esp-open-rtos概要"></a>一、esp-open-rtos概要</h2><p>Esp-open-rtos是开源的、基于freertos的、用于ESP8266固件的开发支持环境。最早是从乐鑫官方的ESP8266_RTOS_SDK基础上fork而来，但是目前的代码、框架已经和原SDK相去甚远，有了大幅的变化。从代码结构、编译方法、支撑库等均有不同，而且内置了更多的常见传感器驱动，以及MQTT、TLS、甚至OTA等常用的功能模块。相比官方同样的RTOS SDK、感觉更好用、更便利、开发应用速度更快。<br>目前，esp-open-rtos在github上获得了550多个STAR，足以证明其被认可的程度。</p><p>Github地址：<a href="https://github.com/SuperHouse/esp-open-rtos">https://github.com/SuperHouse/esp-open-rtos</a><br>Gitcode镜像：<a href="https://gitcode.com/gh_mirrors/es/esp-open-rtos">https://gitcode.com/gh_mirrors/es/esp-open-rtos</a></p><p>Esp8266的项目较多，容易混淆，总结如下：</p><ul><li><ol><li>esp-open-sdk esp8266编译工具链</li></ol></li><li><ol start="2"><li>esp-open-rtos 基于FreeRTOS的esp8266固件</li></ol></li><li><ol start="3"><li>ESP8266_NONOS_SDK 乐鑫官方非OS版本固件、带AT固件</li></ol></li><li><ol start="4"><li>ESP8266_RTOS_SDK 乐鑫官方RTOS固件（基于FreeRTOS）</li></ol></li><li><ol start="5"><li>nodemcu-firmware NodeMCU的lua固件</li></ol></li><li>2~5均使用同样的编译工具链1。</li></ul><h2 id="二、esp-open-rtos安装"><a href="#二、esp-open-rtos安装" class="headerlink" title="二、esp-open-rtos安装"></a>二、esp-open-rtos安装</h2><p><strong>1、编译工具链的建立（toolchain）</strong><br>交叉编译工具链和乐鑫官方SDK相同，均使用esp-open-sdk。<br>安装方法可参照前面文章：【ESP8266固件的编译1（交叉编译工具链的建立）】。<br>简便起见，推荐使用【make STANDALONE&#x3D;y】。</p><h3 id="交叉编译环境代码下载"><a href="#交叉编译环境代码下载" class="headerlink" title="交叉编译环境代码下载"></a>交叉编译环境代码下载</h3><p>ESP8266 内部有一个完整的 32bit MCU 核心，主频 80&#x2F;160MHz，其体系结构为 Xtensa lx106。Xtensa 是专为嵌入式单芯片系统而设计的微处理器，由Tensilica 公司开发。Tensilica 也是发展极为迅猛的一家公司，主要是在专业性应用程序微处理器上为高容量嵌入式系统提供解决方案。</p><p>Esp8266使用Tensilica</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pfalcon/esp-open-sdk.git</span><br></pre></td></tr></table></figure><p>根据Readme的说明，代码主要包含如下部分：<br>1） 交叉编译器自身</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jcmvbkbc/crosstool-NG</span><br><span class="line">https://github.com/jcmvbkbc/gcc-xtensa</span><br><span class="line">https://github.com/jcmvbkbc/newlib-xtensa</span><br><span class="line">https://github.com/tommie/lx106-hal</span><br></pre></td></tr></table></figure><p>2） 乐鑫官方提供的IoT SDK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://bbs.espressif.com/viewforum.php?f=46</span><br></pre></td></tr></table></figure><p>3） 其他第三方依赖代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lwIP, http://savannah.nongnu.org/projects/lwip/</span><br><span class="line">Contiki, http://www.contiki-os.org/</span><br><span class="line">axTLS, http://axtls.sourceforge.net/</span><br><span class="line">wpa_supplicant, http://w1.fi/wpa_supplicant/ (<span class="built_in">source</span> withheld by Espressif)</span><br><span class="line">net80211/ieee80211 (FreeBSD WiFi stack)</span><br></pre></td></tr></table></figure><p>如果是桌面安装，一般以下依赖包都需要安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo yum  -y install autoconf</span><br><span class="line">sudo yum  -y install autoconf</span><br><span class="line">sudo yum  -y install gcc</span><br><span class="line">sudo yum  -y install gcc.g++</span><br><span class="line">sudo yum  -y install gperf</span><br><span class="line">sudo yum  -y install bison</span><br><span class="line">sudo yum  -y install flex</span><br><span class="line">sudo yum  -y install makeinfo</span><br><span class="line">sudo yum  -y install texinfo</span><br><span class="line">sudo yum  -y install help2man</span><br><span class="line">sudo yum  -y install gpatch patch</span><br><span class="line">sudo yum  -y install libtool</span><br><span class="line">sudo yum  -y install curses</span><br><span class="line">sudo yum  -y install curses-lib</span><br><span class="line">sudo yum  -y install ncurses-libs.x86_64</span><br><span class="line">sudo yum  -y install ncurses-devel.x86_64</span><br><span class="line">sudo yum -y install gcc-c++</span><br><span class="line">sudo yum -y install expat</span><br></pre></td></tr></table></figure><p>另外，还要安装pip以及esptool(固件打包必须用)所依赖的seriral库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install epel-release</span><br><span class="line">sudo pip install esptool</span><br><span class="line">sudo pip install pyserial</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>有两种模式可供选择：<br>1） 分离模式<br>在此模式下，生成交叉编译工具链和乐鑫的IoT SDK没有依赖关系，<br>也就是说需要主动设置IoT SDK的头文件路径和库路径。<br>用官方的话来说，就是License更clear，也更容易配合乐鑫官方的SDK升级。<br>执行make STANDALONE&#x3D;n</p><p>2） StandAlone模式<br>和某版的乐鑫SDK绑定，从而无需单独指定IoT SDK路径，方便一些。<br>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make STANDALONE=y</span><br><span class="line">或者 make</span><br></pre></td></tr></table></figure><p>执行make命令后，会自动git各种所需组件，会花费相当长的一段时间。<br>作为参考，在海外阿里云主机上花费了约40min。</p><p>编译成功后，需要将路径添加到PATH中，并添加别名xgcc。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH= 安装路径/esp-open-sdk/xtensa-lx106-elf/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">alias</span> xgcc=<span class="string">&quot;xtensa-lx106-elf-gcc&quot;</span></span><br></pre></td></tr></table></figure><p>编译后，在esp-open-sdk目录下，可以看到各依赖包和乐鑫SDK的目录已经被生成。Sdk目录其实是一个符号链接，指向被下载的ESP8266_NONOS_SDK_V2.0.0_16_08_10。</p><p>参考链接：<br><a href="http://www.esp8266.com/wiki/doku.php?id=toolchain#how_to_setup_a_vm_to_host_your_toolchain">http://www.esp8266.com/wiki/doku.php?id=toolchain#how_to_setup_a_vm_to_host_your_toolchain</a></p><p><strong>2. 代码下载</strong><br>如下命令从github上下载代码。</p><p><code>git clone --recursive https://github.com/Superhouse/esp-open-rtos.git</code></p><p>使用recursive，可以将依赖的第三方代码一起获取。</p><h2 id="三、代码编译"><a href="#三、代码编译" class="headerlink" title="三、代码编译"></a>三、代码编译</h2><p>乐鑫官方的RTOS SDK是先编译底层支撑代码，以库的形式提供。<br>应用层通过连接库的的方式和底层代码链接在一起，build为bin，存在两个阶段。</p><p>具体可参照前文：<br>【ESP8266固件的编译5（RTOS SDK固件）】<br>但eps-open-rtos采用了另外一种方式，它没有底层代码编译库的过程。<br>而是以应用为中心，每个应用都会将所有底层代码复制一份<br>（从FreeRTOS到lwip，再到各种依赖库和应用层代码）每个应用都会复制并编译属于自己的这份，<br>并和自身的应用层代码一起编译。（其实最终也会通过库的形式，但是编译过程是一体化的）</p><p>另外Esp-open-rtos的编译采用make，摆脱了cmake，感觉清爽、瘦身很多。<br>编译时可通过make help来看到编译相关的帮助，尤其是make flash。</p><p>非常重要的是，<br>Esp-open-rtos在examples目录下提供了很多例子（很赞），上手可以很快。</p><p><strong>1、编译准备</strong><br>在编译之前，需要在include目录下，创建private_ssid_config.h文件，<br>来预定义系统默认wifi参数，内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIFI_SSID <span class="meta-string">&quot;mywifissid&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIFI_PASS <span class="meta-string">&quot;my secret password&quot;</span></span></span><br></pre></td></tr></table></figure><p><strong>2. mqtt_client的编译</strong></p><p>上面已经说明过，esp-open-rtos以应用为中心编译，<br>下面以mqtt_client为例进行说明</p><p>编译方法1，在esp-open-rtos根目录下，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -C examples/mqtt_client/</span><br></pre></td></tr></table></figure><p>编译方法2，进入到examples&#x2F;mqtt_client目录下，直接执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p><strong>3. esp8266的相关参数设定</strong><br>系统默认的esp8266相关的参数，如SPI类型、Flash大小等，定义在根目录下的parameters.mk中，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FLASH_SIZE ?= 16</span><br><span class="line">FLASH_MODE ?= qio</span><br><span class="line">FLASH_SPEED ?= 40</span><br></pre></td></tr></table></figure><p>?&#x3D; 是make的语法，意为如果没有定义，就使用&#x3D;后的值做赋值，相当于默认参数。<br>如果目标硬件(ESP8266模组)固定，可以直接修改此文件。<br>若目标硬件经常变化，如经常切换ESP01和ESP12，也可以修改应用目录下的Makefile文件进行配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM=mqtt_client</span><br><span class="line">FLASH_SIZE ?= 32</span><br><span class="line">FLASH_MODE ?= qio</span><br><span class="line"></span><br><span class="line">EXTRA_COMPONENTS = extras/paho_mqtt_c</span><br><span class="line">include ../../common.mk</span><br></pre></td></tr></table></figure><p>因使用安信可的ESP12F模块，所以将FLASH_SIZE修改为32，<br>如使用nodeMCU，除FLASH_SIZE外，还要将FLASH_MODE改为dio。</p><p>注意EXTRA_COMPONENTS宏，是esp-open-rtos的Make体系中指明依赖组件的宏，<br>所有需要依赖的扩展都要定义在该宏中（空格分隔）<br>这里可以看出，mqtt的协议是使用的Apache Paho(根据esp8266移植过）</p><p>MQTT本身的参数设定，可在在mqtt_client.c中修改。</p><p>编译成功后，在examples&#x2F;mqtt_client&#x2F; firmware目录下，<br>会生成名为mqtt_client.bin的固件文件。</p><p><strong>4. mqtt_client代码解析</strong><br>mqtt_client的代码简单且结构清晰：<br>主函数启动3个task，分别是：</p><ul><li>wifi管理task</li><li>mqtt管理task</li><li>以及mqtt连接成功后定时pub的测试task</li></ul><p>wifi_alive是一个信号灯(semaphore)，用于协调wifi task和 mqtt task，以保证网络正常后再进行mqtt处理。<br>publish_queue是一个消息队列，用于beat_task和mqtt task间的数据传递，用于定时向【&#x2F;beat】主题发布。<br>另外，mqtt task中在mqtt连接建立后，会订阅【esptopic】主题，并显示收到的消息。<br>下面是入口函数user_init的实现。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">user_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uart_set_baud(<span class="number">0</span>, <span class="number">115200</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;SDK version:%s¥n&quot;</span>, sdk_system_get_sdk_version());</span><br><span class="line"></span><br><span class="line">    vSemaphoreCreateBinary(wifi_alive);</span><br><span class="line">    publish_queue = xQueueCreate(<span class="number">3</span>, PUB_MSG_LEN);</span><br><span class="line">    xTaskCreate(&amp;wifi_task, <span class="string">&quot;wifi_task&quot;</span>,  <span class="number">256</span>, <span class="literal">NULL</span>, <span class="number">2</span>, <span class="literal">NULL</span>);</span><br><span class="line">    xTaskCreate(&amp;beat_task, <span class="string">&quot;beat_task&quot;</span>, <span class="number">256</span>, <span class="literal">NULL</span>, <span class="number">3</span>, <span class="literal">NULL</span>);</span><br><span class="line">    xTaskCreate(&amp;mqtt_task, <span class="string">&quot;mqtt_task&quot;</span>, <span class="number">1024</span>, <span class="literal">NULL</span>, <span class="number">4</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、固件下载（刷写）"><a href="#四、固件下载（刷写）" class="headerlink" title="四、固件下载（刷写）"></a>四、固件下载（刷写）</h2><p>因为esp-open-rtos内置了esptool.py，可用make flash进行直接做固件刷新。<br>但在windows上，还是使用官方的下载工具更加方便。<br>关于固件下载工具的使用，可参照前文【ESP8266固件的编译5（RTOS SDK固件）】。<br>和其他固件的刷新方法一样，但写入地址方面，和乐鑫官方、nodemcu差别较大。</p><p>观察make flash的命令输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p /dev/ttyUSB0 --baud 115200 write_flash -fs 32m -fm qio -ff 40m</span><br><span class="line">0x0 ../../bootloader/firmware_prebuilt/rboot.bin 0x1000 ../../bootloader/firmware_prebuilt/blank_config.bin 0x2000 ./firmware/mqtt_client.bin</span><br></pre></td></tr></table></figure><p>可以看到，出mqtt_client.bin外，还要刷入预置的，<br>存放于bootloader&#x2F;firmware_prebuilt目录下rboot.bin和blank_config.bin。</p><p>其写入地址为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rboot.bin               0x0000</span><br><span class="line">blank_config.bin        0x1000</span><br><span class="line">mqtt_client.bin         0x2000</span><br></pre></td></tr></table></figure><p>如下图：</p><img src="/posts/undefined/20170715233924362" class="" title="这里写图片描述"><p>刷入后，如网络征程，即可以看到wifi连接成功后，mqtt的通信状况。<br>ESP8266侧如图：</p><img src="/posts/undefined/20170715234017660" class="" title="这里写图片描述"><p>框内内容分别是，wifi接入，mqtt接入，和收到mqtt消息。</p><p>服务端可用如下命令测试（mosquitto）:</p><p>发布：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -u <span class="built_in">test</span> -P <span class="built_in">test</span> -t /esptopic -m <span class="string">&quot;hello world&quot;</span></span><br></pre></td></tr></table></figure><p>接收：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -u <span class="built_in">test</span> -P <span class="built_in">test</span> -t /beat</span><br></pre></td></tr></table></figure><p>可以看到收到连续的beat消息。</p><img src="/posts/undefined/20170715234030619" class="" title="这里写图片描述"><p>如上，mqtt在esp8266上非常容易的便可被实现，而且还有多task的支持。<br>增加传感器，将读取数据通过mqtt送出，即可实现简单的IoT系统。<br>而且，esp-open-rtos对常见传感器（温度、光线 etc.）的驱动支持也相当不错。<br>examples目录下有例子，extras目录下有协议实现。</p><h1 id="ESP-OPEN-SDK开发之环境搭建参考"><a href="#ESP-OPEN-SDK开发之环境搭建参考" class="headerlink" title="ESP-OPEN-SDK开发之环境搭建参考"></a>ESP-OPEN-SDK开发之环境搭建参考</h1><p>最近在弄这个WiFi模块，发现网上SDK开发方面的资料很少，发现了一套视频教程，不过主讲人的讲课方式实在受不了。对基于SDK开发感兴趣的同学可以通过本帖在Ubuntu系统上通过Eclipes搭建开发环境。</p><p>过程可以分为两步：<br>1、下载、编译SDK<br>2、配置Eclipes</p><p><strong>一、下载、编译SDK</strong></p><p>esp8266的sdk有两种，分别是ESP8266_RTOS_SDK和ESP8266_NONOS_SDK，这两者的区别在于RTOS_SDK有一个叫做RTOS的操作系统，采用了NONOS_SDK部分接口，不支持AT指令。<br>详见：<a href="http://bbs.espressif.com/viewtopic.php?t=838">Q: What is the difference between RTOS and the non-OS SDK?</a></p><p>这里我们使用NONOS_SDK，下载地址：<a href="https://github.com/pfalcon/esp-open-sdk">esp-open-sdk</a></p><p>里边集成了NONOS_SDK的编译器和烧录工具等，也可用此编译器编译ESP_RTOS_SDK中的项目。</p><p>我们直接在命令行进行操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装一些依赖工具</span></span><br><span class="line">$ sudo apt-get install make unrar-free autoconf automake libtool gcc g++ gperf \</span><br><span class="line">    flex bison texinfo gawk ncurses-dev libexpat-dev python-dev python python-serial \</span><br><span class="line">    sed git unzip bash help2man wget bzip2</span><br><span class="line"><span class="comment">#如果ubuntu版本高于14.04可能还需要此工具</span></span><br><span class="line">$ sudo apt-get install libtool-bin</span><br><span class="line">＃使用git克隆项目到本地,这里假设项目克隆到了/home/mmmmar/esp-open-sdk</span><br><span class="line">$ git <span class="built_in">clone</span> --recursive https://github.com/pfalcon/esp-open-sdk.git</span><br><span class="line"><span class="comment">#进入项目文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> /home/mmmmar/esp-open-sdk</span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">$ make STANDALONE=y</span><br></pre></td></tr></table></figure><p>注意：在SDK的编译过程中需要联网下载一些依赖库并编译，而且下载过程很容易失败，我在下载时挂代理才成功的。<br>如果编译失败可以查看<strong>esp-open-sdk&#x2F;crosstool-NG&#x2F;build.log</strong> 查看崩溃信息，一般都是下载失败。</p><p>编译成功后会在esp-open-sdk文件夹出现<strong>xtensa-lx106-elf esptool ESP8266_NONOS_SDK</strong>三个文件夹，分别是编译器，烧录工具，NONOS_SDK最新版。<br>这时需要把编译器路径加入到系统路径中，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此命令只作用于当前控制台</span></span><br><span class="line"><span class="built_in">export</span> PATH=/home/mmmmar/esp-open-sdk/xtensa-lx106-elf/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>这时就可以编译<strong>esp-open-sdk&#x2F;</strong><strong><em>*ESP8266_NONOS_SDK*</em>&#x2F;examples</strong>中的示例工程了。<br>需要注意，要把<strong>ESP8266_NONOS_SDK</strong>文件夹复制到<strong>esp-open-sdk</strong>文件夹的外部，假如我们要编译<strong>examples</strong>文件夹中的<strong>at</strong>项目，我们需要把<strong>at</strong>文件夹复制到<strong>ESP8266_NONOS_SDK</strong>目录下，不然编译会失败。<br>复制完之后路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/home/mmmmar</span><br><span class="line">├── ESP8266_NONOS_SDK</span><br><span class="line">│   ├── at</span><br><span class="line">│   ├── examples</span><br><span class="line">└── esp-open-sdk</span><br></pre></td></tr></table></figure><p>复制完之后就可以编译at(我们最初用的AT指令就是这个项目，不过我们只能添加新的AT命令）项目了。<br>执行<strong>at</strong>文件夹下的<strong>gen_misc.sh</strong>，这里需要输入一些参数。<br>对于那些参数我也不是特别清楚，我的esp-01(黑色）选择的是：<br><strong>boot version　   &#x3D;　none<br>spi size and map &#x3D;  1024KB( 512KB+ 512KB)</strong><br>其余默认。黑色的版的esp-01有1MB的存储空间，而蓝色版只有512KB，不能使用最新版的AT固件。</p><p>编译完成后有如下输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">!!!</span><br><span class="line">No boot needed.</span><br><span class="line">Generate eagle.flash.bin and eagle.irom0text.bin successully <span class="keyword">in</span> folder bin.</span><br><span class="line">eagle.flash.bin--------&gt;0x00000</span><br><span class="line">eagle.irom0text.bin----&gt;0x10000</span><br><span class="line">!!!</span><br></pre></td></tr></table></figure><p>现在可以把<strong>ESP8266_NONOS_SDK&#x2F;bin</strong>目录中生成的固件烧录到开发板中去了，可以使用<strong>esp-open-sdk&#x2F;esptool&#x2F;esptool.py</strong>。<br>不过我用的是windows上的一键烧录工具，大家百度一下就能搜到。</p><img src="/posts/undefined/933137-20170206152510432-369781169.png" class="" title="img"><p>在配置一栏里需要填写各个二进制文件的烧录地址，这里附上官方文档里说明：</p><img src="/posts/undefined/933137-20170206152602994-876598937.png" class="" title="img"><img src="/posts/undefined/933137-20170206152620697-1065067198.png" class="" title="img"><p>详见：<a href="http://espressif.com/sites/default/files/documentation/2a-esp8266-sdk_getting_started_guide_en.pdf">2a-esp8266-sdk_getting_started_guide_en.pdf</a><br>至此，整套编译工具烧录工具就可以使用了，接下来介绍如何配置Eclipes</p><p><strong>二、配置Eclipes</strong>(这部分用不到就不记录)</p><p>ubuntu上烧录方法:</p><p>使用<strong>esp-open-sdk&#x2F;esptool&#x2F;esptool.py</strong>，执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这里的参数需要根据自己的需求改变，详见esp-open-sdk/esptool/README.md</span></span><br><span class="line">sudo ./esptool.py --port /dev/ttyUSB1 write_flash 0x00000 eagle.flash.bin 0x10000 eagle.irom0text.bin</span><br></pre></td></tr></table></figure><p>烧录时要确保接线牢固，不然可能传输过程中会出现数据丢失或更改导致固件验证失败</p><p>参考：<br><a href="http://espressif.com/en/products/hardware/esp8266ex/resources">官网文档</a><br><a href="https://github.com/pfalcon/esp-open-sdk">Free and open (as much as possible) integrated SDK for ESP8266&#x2F;ESP8285 chips</a><br><a href="https://github.com/espressif/ESP8266_RTOS_SDK">Latest ESP8266 SDK based on FreeRTOS</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://cloud.tencent.com/developer/information/ESP8266_RTOS_SDK%E4%B8%8Eesp-open-sdk%E7%9A%84%E5%8C%BA%E5%88%AB">ESP8266_RTOS_SDK与esp-open-sdk的区别</a></li><li><a href="https://blog.csdn.net/ydogg/article/details/75194902">ESP8266使用esp-open-rtos的实践</a></li><li><a href="https://www.cnblogs.com/mmmmar/p/6370549.html">esp8266 SDK开发之环境搭建</a></li><li><a href="https://blog.csdn.net/ydogg/article/details/72598581">ESP8266固件的编译（交叉编译工具链的建立）</a></li><li><a href="https://blog.csdn.net/ydogg/article/details/72598752">ESP8266固件的编译（乐鑫原厂SDK）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-OPEN-SDK环境搭建及homekit家庭测试</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-OPEN-SDK" scheme="https://zml3589110.github.io/categories/ESP-OPEN-SDK/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="环境搭建" scheme="https://zml3589110.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="homekit" scheme="https://zml3589110.github.io/tags/homekit/"/>
    
    <category term="ESP-OPEN-SDK" scheme="https://zml3589110.github.io/tags/ESP-OPEN-SDK/"/>
    
    <category term="Tensilica" scheme="https://zml3589110.github.io/tags/Tensilica/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF在虚拟机ubuntu下搭建开发环境（详细）</title>
    <link href="https://zml3589110.github.io/posts/2491004820.html"/>
    <id>https://zml3589110.github.io/posts/2491004820.html</id>
    <published>2025-06-09T09:00:20.000Z</published>
    <updated>2025-06-09T09:19:15.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu安装"><a href="#Ubuntu安装" class="headerlink" title="Ubuntu安装"></a>Ubuntu安装</h1><p>在Linux下编译速度比windows快很多，一般推荐优先使用linux开发。Ubuntu是非常常见Linux操作系统。网上已经有非常多的ubuntu安装教程。</p><h3 id="二、-安装ESP-IDF-环境"><a href="#二、-安装ESP-IDF-环境" class="headerlink" title="二、 安装ESP-IDF 环境"></a>二、 安装ESP-IDF 环境</h3><p><strong>2.1 安装常见的软件</strong><br>我们需要安装几个常用的软件 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim </span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><p>先查看一下你的python版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python –version</span><br></pre></td></tr></table></figure><p>如果输出结果是 Python 2.7.17，则代表您的默认解析器是 Python2.7。这时需要您运行以下命令检查电脑上是否已经安装过Python 3:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 –version</span><br></pre></td></tr></table></figure><p>如果运行上述命令出现错误，则代表电脑上没有安装 Python 3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python3.7</span><br></pre></td></tr></table></figure><p>（博主选择的是安装python3.7,命令为：sudo apt-get install python3.7<br>安装完成之后，你在终端中输入python，输出的信息里面会提示是2.7版本的，也就是说默认打开的并不是刚才安装好的3.7，所以还需要我们重新修改一下链接。方法如下:<br>删除原来默认指向python2.7版本的链接。在ternimal下输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /usr/bin/python</span><br></pre></td></tr></table></figure><p>第三步：重新指定新的链接给python3.7版本。输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/bin/python3.7/usr/bin/python</span><br></pre></td></tr></table></figure><p>至此，python版本更新已经完成。<br>另：python2.7和3.7版本之间随意切换（这里3.7切换回2.7版本）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /usr/bin/python </span><br><span class="line">sudo ln -s /usr/bin/python2.7 /usr/bin/python</span><br></pre></td></tr></table></figure><p><strong>2.2 开始一堆依赖安装：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git wget flex bisongperf python3 python3-pip python3-setuptools cmake ninja-build ccachelibffi-dev libssl-dev dfu-util libusb-1.0-0</span><br></pre></td></tr></table></figure><p><strong>2.3获取 ESP-IDF</strong><br>用git命令来拉取下来，这就可以可以同步最新的框架版本！不能直接一个downLoad 下载，发现会有错误，切记！</p><p>【方式一】用笔者提供的方式拉取最新代码</p><p>下载重定向脚本 esp-gitee-tools，运行以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/EspressifSystems/esp-gitee-tools.git</span><br></pre></td></tr></table></figure><p>下载SDK：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/EspressifSystems/esp-idf.git -b release/v4.4</span><br></pre></td></tr></table></figure><p><strong>3.使用 esp-gitee-tools 拉取子模块</strong><br>方法一：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> esp-idf</span><br><span class="line">../esp-gitee-tools/submodule-update.sh</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> esp-gitee-tools </span><br><span class="line"><span class="built_in">export</span> EGT_PATH=$(<span class="built_in">pwd</span>) </span><br><span class="line"><span class="built_in">cd</span> .. </span><br><span class="line"><span class="built_in">cd</span> esp-idf </span><br><span class="line"><span class="variable">$EGT_PATH</span>/submodule-update.sh</span><br></pre></td></tr></table></figure><p><strong>4、安装编译工具链</strong><br>除了 ESP-IDF 本身，您还需要安装 ESP-IDF 使用的各种工具，比如编译器、调试器、Python 包等!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>出现这个 , 表示 安装成功!</p><img src="/posts/undefined/8e7968801841caf52c3f79902a9fedb8.png" class="" title="在这里插入图片描述"><p>再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. ./export.sh</span><br></pre></td></tr></table></figure><p>注：会遇到的问题<br>1、如果出现出现UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe2…<br>解决办法：</p><img src="/posts/undefined/cd4cab8bd9c66068f99dd48565a87b9c.png" class="" title="请添加图片描述"><p>可以看出系统默认语言为en_US.UTF-8</p><p>对于Python设定语言可以在site-packages中创建sitecustomize.py，Python会自动加载</p><img src="/posts/undefined/e6d12cf2d4f0b4df961d039ecfa237c8.png" class="" title="请添加图片描述"><img src="/posts/undefined/98085486e745009e7db6761d8b9e628a.png" class="" title="请添加图片描述"><p>在sitecustomize.py 文件最后加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果涉及到中文只需将utf-8修改为gb2312 即可。</p><img src="/posts/undefined/38ab2e582da13aa0ddefd52562926e40.png" class="" title="请添加图片描述"><p>2、</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/python: No module named pip</span><br></pre></td></tr></table></figure><img src="/posts/undefined/5a8588c9f7033cd606417746adab1925.png" class="" title="请添加图片描述"><p>解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install pip</span><br></pre></td></tr></table></figure><p>3、“cmake” must be available on the PATH to use idf.py</p><img src="/posts/undefined/3a25f7f81069f7f529c94b1133c51e6b.png" class="" title="请添加图片描述"><p>解决办法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install cmake</span><br></pre></td></tr></table></figure><p>4、如果make menuconfig 时候遇到make[1]: *** [Makefile:343：zconf.xx.c] 错误 127 ，关注点是&#x2F;bin&#x2F;sh: 1: gperf: not found 是 gperf 没找到，那就去下载它</p><img src="/posts/undefined/eb685d17170461ce26b30729766ce06d.png" class="" title="请添加图片描述"><p>解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gperf</span><br></pre></td></tr></table></figure><p>5</p><img src="/posts/undefined/e1680c4a9ba09f0216e7b84289a80233.png" class="" title="请添加图片描述"><p>解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3.8-venv</span><br><span class="line">rm -rf /home/liu/.espressif/python_env/idf5.0_py3.7_env <span class="comment">#删除原来的环境</span></span><br></pre></td></tr></table></figure><p>6</p><img src="/posts/undefined/e82f45769486331c88a7426b7168ab3f.png" class="" title="请添加图片描述"><p>解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rm -rf /home/liu/.espressif/python_env/idf5.4_py3.8_env <span class="comment">#删除原来的环境</span></span><br><span class="line">find . -name <span class="string">&quot;*.pyc&quot;</span> | xargs rm -f <span class="comment">#同上</span></span><br><span class="line">sudo apt-get install python3.8-venv</span><br></pre></td></tr></table></figure><p>6</p><img src="/posts/undefined/84c4e72ac34b42e09d4e1e4c4f3e0aea.png" class="" title="请添加图片描述"><p>解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install bison -y</span><br></pre></td></tr></table></figure><p>7</p><img src="/posts/undefined/ac17222b77ab46fbb5a333485bf9ba5c.png" class="" title="在这里插入图片描述"><p>解决“</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install flex</span><br></pre></td></tr></table></figure><p><strong>2.4设置工具</strong><br>除了 ESP-IDF 本身，您还需要为支持ESP32 的项目安装 ESP-IDF使用的各种工具，比如编译器、调试器、Python 包等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/esp/esp-idf</span><br><span class="line">./install.sh esp32</span><br></pre></td></tr></table></figure><p>上述命令仅仅为 esp32 安装所需工具。如果需要为多个目标芯片开发项目，则可以一次性指定多个目标，如下所示:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/esp/esp-idf</span><br><span class="line">./install.fish esp32,esp32s2</span><br></pre></td></tr></table></figure><p>如果需要一次性为所有支持的目标芯片安装工具，可以运行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/esp/esp-idf</span><br><span class="line">./install.sh all</span><br></pre></td></tr></table></figure><p><strong>设置环境变量</strong><br>这里就简单很多，就设置SDK路径即为IDF路径！ 以我的环境为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/.bashrc</span><br></pre></td></tr></table></figure><p>在文件最后加入我安装SDK的路径 ： export IDF_PATH&#x3D;&#x2F;home&#x2F;esp32&#x2F;esp-idf<br>保存后可以查看 IDF_PATH 路径测试是否设置成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$IDF_PATH</span></span><br></pre></td></tr></table></figure><p><strong>设置编译环境的变量</strong><br>此时，您刚刚安装的工具尚未添加至 PATH 环境变量，无法通过“命令窗口”使用这些工具。因此，必须设置一些环境变量，这可以通过 ESP-IDF 提供的另一个脚本完成。</p><p>. &#x2F;home&#x2F;esp32&#x2F;esp-idf&#x2F;export.sh<br>或通过以下这个命令 ：注意下面命令2个小数点中间有一个空格!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. ./export.sh</span><br></pre></td></tr></table></figure><p>成功后,便这样提示:</p><p><strong>开始编译工程<br>连接设备</strong></p><p>现在，您可以开始准备开发 ESP32 应用程序了。您可以从 ESP-IDF 中 examples 目录下的 get-started&#x2F;hello_world 工程开始。<br>先请将您的 ESP32 开发板连接到 PC，并查看开发板使用的串口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /dev/ttyUSB*</span><br></pre></td></tr></table></figure><p>Linux 操作系统： 以 &#x2F;dev&#x2F;tty 开始<br>【常见问题】权限问题 &#x2F;dev&#x2F;ttyUSB0<br>使用某些 Linux 版本向 ESP32 烧写固件时，可能会出现 Failed to open port &#x2F;dev&#x2F;ttyUSB0 错误消息。此时，可以将当前用户增加至 :ref:Linux Dialout 组 。<br>因为默认情况下，只有root用户和属于dialout组的用户会有读写权限，因此直接把自己的用户加入到dialout组就可以了。操作完命令后要重启一下，就永久生效了。<br>0<br>配置工程<br>请进入 hello_world 目录打开终端，在首次编译工程前先运行环境设置命令：. &#x2F;home&#x2F;esp32&#x2F;esp-idf&#x2F;export.sh<br>配置编译芯片:<br>esp32系列模组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py set-target esp32</span><br></pre></td></tr></table></figure><p>打开一个新工程后，应首先使用 idf.py set-target esp32 设置“目标”芯片。注意，此操作将清除并初始化项目之前的编译和配置。<br>如果之前的步骤都正确，则会显示下面的菜单：</p><p>您可以通过此菜单设置项目的具体变量，包括 Wi-Fi 网络名称、密码和处理器速度等。hello_world 示例项目会以默认配置运行，因此可以跳过使用 menuconfig 进行项目配置这一步骤。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py menuconfig</span><br></pre></td></tr></table></figure><p><strong>编译工程</strong><br>请使用以下命令，编译烧录工程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py build</span><br></pre></td></tr></table></figure><p>运行以上命令可以编译应用程序和所有 ESP-IDF 组件，接着生成引导加载程序、分区表和应用程序二进制文件。</p><p>如果一切正常，编译完成后将生成 .bin 文件。</p><p><strong>烧录到设备</strong><br>请使用以下命令，将刚刚生成的二进制文件 (bootloader.bin、partition-table.bin 和 hello_world.bin) 烧录至您的 ESP32 开发板：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p PORT [-b BAUD] flash</span><br></pre></td></tr></table></figure><p>请将 PORT 替换为 ESP32 开发板的串口名称。您还可以将 BAUD 替换为您希望的烧录波特率。默认波特率为 460800。<br><strong>监视输出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p PORT monitor</span><br></pre></td></tr></table></figure><p>注意，不要忘记将 PORT 替换为您的串口名称。运行该命令后，IDF 监视器 应用程序将启动：:<br>您可使用快捷键 Ctrl+]，退出 IDF 监视器。<br>您也可以运行以下命令，一次性执行构建、烧录和监视过程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p PORT flash monitor</span><br></pre></td></tr></table></figure><p><strong>安装VSCode</strong><br>安装vscode方法有多种，笔者刚接触 ubuntu的学者来说先直接用ubuntu自带的浏览器下载安装包把学习环境搭建起来再说，打开ubuntu自带的浏览器，进入到vscode的官网，然后选择vscode进行下载，下载的时候注意选择linux的版本，要选择deb格式的文件，这样才可以装在Ubuntu上，不要下载错了</p><img src="/posts/undefined/7d7a98827f2b82462aa8c8613900f398.png" class="" title="在这里插入图片描述"><p>打开下载好的安装包，自动弹出安装的界面，只需要点击上面的安装按钮就可以了</p><img src="/posts/undefined/52c37a369a293383a9682ce518ca6d0f.png" class="" title="在这里插入图片描述"><p>安装完成后对于root用户用户下无法打开 “ Visual Studio Code 开发环境 “ ，点击了很多次 VSCode 图标 都无法启动软件 ，因为官方不推荐在 root 用户下打开 VSCode ;<br>在 终端输入如下命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit  ~/.bashrc</span><br></pre></td></tr></table></figure><p>在 ~&#x2F;.bashrc 文件最后添加</p><p>重启虚拟机才能生效，最后在root下在命令行中 执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code </span><br></pre></td></tr></table></figure><p>命令 , 即可启动 Visual Studio Code 开发环境 ;</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/chenbenzhen/article/details/124523241">【ESP32】虚拟机ubuntu下搭建 ESP-IDF 开发环境（详细）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF在虚拟机ubuntu下搭建开发环境（详细）</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="环境搭建" scheme="https://zml3589110.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Cshap界面刷新闪烁问题</title>
    <link href="https://zml3589110.github.io/posts/9727705.html"/>
    <id>https://zml3589110.github.io/posts/9727705.html</id>
    <published>2025-06-03T00:53:20.000Z</published>
    <updated>2025-06-06T01:51:36.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一：设置初始化启用默认双缓冲并提供无闪烁的图形呈现"><a href="#第一：设置初始化启用默认双缓冲并提供无闪烁的图形呈现" class="headerlink" title="第一：设置初始化启用默认双缓冲并提供无闪烁的图形呈现"></a>第一：设置初始化启用默认双缓冲并提供无闪烁的图形呈现</h1><p>**实际测试:**开启 DoubleBuffered 后就登录界面在刷新电脑桌面的时候就没有闪烁了</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.DoubleBuffered = <span class="literal">true</span>;<span class="comment">//设置本窗体</span></span><br><span class="line">SetStyle(ControlStyles.UserPaint, <span class="literal">true</span>);</span><br><span class="line">SetStyle(ControlStyles.AllPaintingInWmPaint, <span class="literal">true</span>); <span class="comment">// 禁止擦除背景.</span></span><br><span class="line">SetStyle(ControlStyles.DoubleBuffer, <span class="literal">true</span>); <span class="comment">// 双缓冲</span></span><br></pre></td></tr></table></figure><h1 id="禁掉重载消息发送函数操作"><a href="#禁掉重载消息发送函数操作" class="headerlink" title="禁掉重载消息发送函数操作"></a>禁掉重载消息发送函数操作</h1><p>底层重绘每次会清除画布，然后再全部重新绘制，这才是导致闪烁最主要的原因。于是重载消息发送函数操作，禁掉这条消息。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 捕捉窗体事件 </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;m&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WndProc</span>(<span class="params"><span class="keyword">ref</span> Message m</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m.Msg == <span class="number">0x0014</span>) <span class="comment">// 禁掉清除背景消息</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h1 id="防止闪屏代码"><a href="#防止闪屏代码" class="headerlink" title="防止闪屏代码"></a>防止闪屏代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">override</span> CreateParams CreateParams</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span></span><br><span class="line">    &#123;</span><br><span class="line">        CreateParams cp = <span class="keyword">base</span>.CreateParams;</span><br><span class="line">        cp.ExStyle |= <span class="number">0x02000000</span>;</span><br><span class="line">        <span class="keyword">return</span> cp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://chencblog.top/?p=133">解决winform界面刷新闪烁问题的多种方案</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">解决winform界面刷新闪烁问题</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="界面" scheme="https://zml3589110.github.io/categories/%E7%95%8C%E9%9D%A2/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="问题汇总" scheme="https://zml3589110.github.io/tags/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    <category term="界面" scheme="https://zml3589110.github.io/tags/%E7%95%8C%E9%9D%A2/"/>
    
    <category term="闪烁" scheme="https://zml3589110.github.io/tags/%E9%97%AA%E7%83%81/"/>
    
  </entry>
  
  <entry>
    <title>Cshap逆向破解-doSpy软件</title>
    <link href="https://zml3589110.github.io/posts/396317277.html"/>
    <id>https://zml3589110.github.io/posts/396317277.html</id>
    <published>2025-03-17T06:14:20.000Z</published>
    <updated>2025-03-17T06:52:55.587Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作用缘由"><a href="#作用缘由" class="headerlink" title="作用缘由"></a>作用缘由</h1><p>最近想重新使用滴答清单来做计划，打开以前下载的版本已经登录不了，所幸就去52pj看看有没有合适的软件，后来发现这个软件。<br>尝试了一下确实能破解，也就是修改了会员标志位跟结束日期，效果很好！</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h2><p>新人第一次发帖，已经阅读版规，有违规的地方希望各位指出，我会及时改正<br>想要使用windows平台的滴答清单，但是只发现了在github上的ticktick的crack.</p><blockquote><p><a href="https://github.com/yazdipour/unlimited-ticktick-windows">https://github.com/yazdipour/unlimited-ticktick-windows</a><br>个人猜测滴答的破解方法类似，但是approach2的修改不知道为什么没法编译。误打误撞破解成功，下面给出我的步骤。</p></blockquote><h2 id="1-下载软件和工具"><a href="#1-下载软件和工具" class="headerlink" title="1.下载软件和工具"></a>1.下载软件和工具</h2><p>软件是滴答清单最新官方5.0.5.0</p><blockquote><p><a href="https://www.dida365.com/down/getApp/download?type=win64">https://www.dida365.com/down/getApp/download?type=win64</a><br>工具是doSpy，我使用的是这个版本<br><a href="https://github.com/kkwpsv/dnSpy/releases/tag/6.1.9">https://github.com/kkwpsv/dnSpy/releases/tag/6.1.9</a></p></blockquote><h2 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h2><p>** 安装滴答清单，使用dnSpy到安装目录下打开ticktick.exe，打开ticktick_WPF.Models.UserModel **</p><h3 id="1-修改public-DateTime"><a href="#1-修改public-DateTime" class="headerlink" title="1.修改public DateTime"></a>1.修改public DateTime</h3><ul><li>修改如下所示</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码<span class="comment">// Token: 0x17001375 RID: 4981</span></span><br><span class="line"><span class="comment">// (get) Token: 0x06009423 RID: 37923 RVA: 0x00051E59 File Offset: 0x00050059</span></span><br><span class="line"><span class="keyword">public</span> DateTime? proEndDate</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">get</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DateTime?(<span class="keyword">new</span> DateTime(<span class="number">2030</span>, <span class="number">12</span>, <span class="number">25</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-修改public-bool-pro"><a href="#2-修改public-bool-pro" class="headerlink" title="2.修改public bool pro"></a>2.修改public bool pro</h3><ul><li>修改如下所示</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment">// Token: 0x1700137A RID: 4986</span></span><br><span class="line"><span class="comment">// (get) Token: 0x0600942C RID: 37932 RVA: 0x00012168 File Offset: 0x00010368</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">bool</span> pro</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">get</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-保存模块并退出，就能正常使用会员功能了"><a href="#3-保存模块并退出，就能正常使用会员功能了" class="headerlink" title="3.保存模块并退出，就能正常使用会员功能了"></a>3.保存模块并退出，就能正常使用会员功能了</h3><img src="/posts/396317277/image-20250317142250478.png" class="" title="image-20250317142250478"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.52pojie.cn/thread-1881288-1-1.html">滴答清单&#x2F;ticktick crack for windows</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用doSpy对Windows滴答清单的C#完成本地会员破解</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="crack" scheme="https://zml3589110.github.io/categories/crack/"/>
    
    <category term="doSpy" scheme="https://zml3589110.github.io/categories/doSpy/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="doSpy" scheme="https://zml3589110.github.io/tags/doSpy/"/>
    
    <category term="逆向破解" scheme="https://zml3589110.github.io/tags/%E9%80%86%E5%90%91%E7%A0%B4%E8%A7%A3/"/>
    
    <category term="滴答清单" scheme="https://zml3589110.github.io/tags/%E6%BB%B4%E7%AD%94%E6%B8%85%E5%8D%95/"/>
    
    <category term="ticktick" scheme="https://zml3589110.github.io/tags/ticktick/"/>
    
    <category term="crack" scheme="https://zml3589110.github.io/tags/crack/"/>
    
    <category term="wpf" scheme="https://zml3589110.github.io/tags/wpf/"/>
    
  </entry>
  
  <entry>
    <title>navidrome安装和使用</title>
    <link href="https://zml3589110.github.io/posts/870218609.html"/>
    <id>https://zml3589110.github.io/posts/870218609.html</id>
    <published>2025-02-20T07:55:20.000Z</published>
    <updated>2025-02-20T09:25:05.067Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>Navidrome 是一款可以在 macOS、Linux、Windows以及 Docker 等平台上运行的跨平台开源音乐服务器应用，它支持传输常见的 MP3、FLAC、WAV等音频格式。<br>允许用户通过 Web 界面或 API 进行音乐库的管理和访问</p><p>Navidrome 是一款基于网络的开源音乐收藏服务器和流媒体，它是一开源的音乐播放器软件，可以用来自建云端音乐播放器，它兼容 Subsonic、Aironic 播放器，你可以将Navidrome打造成个人音乐流媒体服务平台。Navidrome 支持各大平台，包括：Windows 、macOS 、Linux。它几乎可播放任何音频格式，支持多用户，每个用户都有自己的播放次数、播放列表、收藏夹等。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Navidrome适用于所有主要平台的即用型二进制文件，包括 Raspberry Pi ，可以自动监控你的库的变化，导入新文件和重新加载新的元数据，还可以在传输中进行转码，可按用户&#x2F;播放器设置，支持 Opus 编码 。</p><ul><li>处理超大音乐收藏</li><li>几乎可串流任何音频格式</li><li>读取并使用所有精心策划的元数据</li><li>对合集（Various Artists 专辑）和盒装（多碟专辑）的强大支持</li><li>多用户，每个用户都有自己的播放次数、播放列表、收藏夹等。</li><li>资源使用率极低</li><li>多平台，可在 macOS、Linux 和 Windows 上运行。还提供 Docker 映像</li><li>所有主要平台（包括 Raspberry Pi）的二进制文件均可随时使用</li><li>自动监控资料库变化，导入新文件并重新加载新元数据</li><li>基于 Material UI 的可主题化、现代化和响应式网络界面</li><li>与所有 Subsonic&#x2F;Madsonic&#x2F;Airsonic 客户端兼容</li><li>即时转码可按用户&#x2F;播放器设置。支持 Opus 编码</li><li>翻译成各种语言</li></ul><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a><strong>展示</strong></h2><img src="/posts/870218609/image-32-1024x500.png" class="" title="img"><img src="/posts/870218609/image-33-1024x482.png" class="" title="img"><h2 id="相关地址"><a href="#相关地址" class="headerlink" title="相关地址"></a>相关地址</h2><p>官方地址：<a href="https://www.navidrome.org/demo/">https://www.navidrome.org/demo/</a></p><p>官方文档：<a href="https://www.navidrome.org/docs/">https://www.navidrome.org/docs/</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>网上有各种安装教程，docker安装是最方便</p><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>拉取镜像： docker pull deluan&#x2F;navidrome<br><strong>报错的话根据【docker下载pull镜像失败报错】方法解决</strong></p><p>创建并启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name=navidrome \</span><br><span class="line">  -e ND_SCANINTERVAL_HOURS=24 \</span><br><span class="line">  -e ND_LOGLEVEL=info \</span><br><span class="line">  -v /mnt/share/navidrome/music:/music \</span><br><span class="line">  -v /mnt/share/navidrome/data:/data \</span><br><span class="line">  -p 4533:4533 \</span><br><span class="line">  deluan/navidrome:latest</span><br><span class="line"></span><br><span class="line">这里是一些参数的解释：</span><br><span class="line">-d：在后台运行容器。</span><br><span class="line">--name=navidrome：给容器命名为 navidrome。</span><br><span class="line">-e ND_SCANINTERVAL_HOURS=24：设置音乐库扫描间隔为24小时。</span><br><span class="line">-e ND_LOGLEVEL=info：设置日志级别为 info。</span><br><span class="line">-v /path/to/navidrome/music:/music：挂载你的音乐文件夹到容器内的 /music 目录。</span><br><span class="line">-v /path/to/navidrome/data:/data：挂载数据文件夹到容器内的 /data 目录，用于存储配置和数据库。</span><br><span class="line">-p 4533:4533：将容器的 4533 端口映射到宿主机的 4533 端口。</span><br><span class="line"></span><br><span class="line">navidrome添加多个目录</span><br><span class="line">docker run -d \</span><br><span class="line">  --name navidrome \</span><br><span class="line">  -e ND_SCANSCHEDULE=1h \</span><br><span class="line">  -e ND_MUSICFOLDER=<span class="string">&quot;/path/to/music1:/path/to/music2&quot;</span> \</span><br><span class="line">  -v /path/to/navidrome/data:/data \</span><br><span class="line">  -v /path/to/music1:/path/to/music1 \</span><br><span class="line">  -v /path/to/music2:/path/to/music2 \</span><br><span class="line">  -p 4533:4533 \</span><br><span class="line">  deluan/navidrome:latest</span><br><span class="line">  </span><br><span class="line">  D_MUSICFOLDER 环境变量用于指定多个音乐目录，目录之间用冒号（:）分隔。确保将/path/to/music1和/path/to/music2替换为你的实际音乐目录路径。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先使用 sudo docker ps -a 查看 Navidrome 是否已经启动了，如果没有启动可以使用 docker start id 进行启动。服务的默认端口是 4533。</p><p><strong>启动成功后，在浏览器中输入 localhost:4533 或者本地ip:4533，可以看到进入到了 Navidrome 的登录界面，设置一个用户名和密码就可以了。</strong></p><img src="/posts/870218609/1-8.png" class="" title="img"><p><strong>登录后，点击界面右上角的头像图标进入个性化，设置语言为简体中文。</strong></p><img src="/posts/870218609/2-2.png" class="" title="img"><p><strong>如果你在真实存储路径中有存放的音乐， Navidrome 会自动扫描进来，并自动将歌曲分类为各个专辑的形式展现。</strong></p><img src="/posts/870218609/3-2.png" class="" title="img"><p><strong>外网访问本地 Navidrome：花生壳&#x2F;路由侠&#x2F;ddns&#x2F;cpolar都行</strong></p><h1 id="上传音乐文件"><a href="#上传音乐文件" class="headerlink" title="上传音乐文件"></a>上传音乐文件</h1><p>接下来给大家做一个简单的示例上传自己的音乐文件</p><p>将音乐文件上传到<code>/opt/navidrome/music</code></p><p>我们使用FinalShell连接服务器示例，找到<code>/opt/navidrome/music</code>文件路径，这个路径已您在docker-compose.yml镜像中的路径保持一致</p><img src="/posts/870218609/image-36.png" class="" title="img"><p>把音乐文件上传至这个文件夹即可</p><img src="/posts/870218609/image-38-1024x242.png" class="" title="img"><p>可以用管理员账号创建其他账号，分享给其他人使用</p><p>也可以手机端使用，Navidrome提供Subsonic API</p><p>兼容的APP可以到官网查看:<a href="https://www.navidrome.org/docs/overview/#apps">https://www.navidrome.org/docs/overview/#apps</a></p><p>歌曲的来源这里不细说，本人百度云盘收藏n多音乐资源。部分整理已分享，请自取。 更多请加qq407737980，获取<br>链接: <a href="https://pan.baidu.com/s/124fGXC44QjTnJfubXf8CmA">https://pan.baidu.com/s/124fGXC44QjTnJfubXf8CmA</a> 提取码: jppg 复制这段内容后打开百度网盘手机App，操作更方便哦</p><p>这里直接使用 scp 命令进行上传，需要在歌曲所在文件夹下运行。</p><p>• .&#x2F;* 表示上传当前目录所有文件。<br>• <a href="mailto:&#x72;&#x6f;&#111;&#x74;&#64;&#x31;&#57;&#50;&#x2e;&#49;&#54;&#56;&#46;&#48;&#46;&#55;">&#x72;&#x6f;&#111;&#x74;&#64;&#x31;&#57;&#50;&#x2e;&#49;&#54;&#56;&#46;&#48;&#46;&#55;</a> 为服务器用户名和 IP.<br>• :&#x2F;home&#x2F;index&#x2F;music&#x2F;folder 为上传到的路径。</p><h2 id="使用miserver上传"><a href="#使用miserver上传" class="headerlink" title="使用miserver上传"></a>使用miserver上传</h2><p>打开浏览器，输入ip:4534，输入docker-compose.yaml文件末尾预先设置的用户名和密码（如果你没有改动的话，用户名dujin，密码<a href="http://www.dujin.org),就可以进入音乐上传页面了./">www.dujin.org），就可以进入音乐上传页面了。</a></p><p>个人感觉宝塔的可视化上传更加方便，这也意味着还可以配置宝塔 FTP，甚至挂载网盘来进行扩容、保存、备份你的音乐文件。<br>注意： 上传完毕，在浏览器navidrome刷新</p><h1 id="App推荐"><a href="#App推荐" class="headerlink" title="App推荐"></a>App推荐</h1><p>为了能让 Navidrome 变得稍微好用一点点，我的建议是使用第三方客户端。Navidrome 目前支持 Sub­sonic&#x2F;Mad­sonic&#x2F;Air­sonic 协议，市面上（iOS App Store）已经有许多 Sub­sonic&#x2F;Mad­sonic&#x2F;Air­sonic 的客户端，但它们都<strong>没有中文</strong>。「音流」的出现，让中文用户多了一种选择。</p><h2 id="音流"><a href="#音流" class="headerlink" title="音流"></a>音流</h2><p>「音流」是一款国人开发的音乐播放器，支持 Sub­sonic&#x2F;Navidrome&#x2F;Jel­lyfin&#x2F;Emby&#x2F;Au­dio­Sta­tion，现已登录 An­droid、iOS，未来可能支持 Win­dows 和 tvOS 平台。采用 Flut­ter 开发，界面简洁美观，整体以透明和高斯模糊为主，布局类似于网易云音乐，上手基本没有门槛。</p><p>我最满意的是这个收藏功能，手机只下载喜欢的，如果还能加一个不喜欢标签就更好了，1万多首歌做歌单有点扛不住。</p><p>另外还有离线模式，音乐缓存也可以设置最大128G，减少断网带来的尴尬。</p><p>作者修bug挺勤快的。</p><p><strong>歌词封面API：</strong></p><p>支持第三方API：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://api.lrc.cx/lyrics</span><br><span class="line">https://api.lrc.cx/cover</span><br></pre></td></tr></table></figure><h1 id="准备音乐资源"><a href="#准备音乐资源" class="headerlink" title="准备音乐资源"></a>准备音乐资源</h1><h2 id="Last-fm"><a href="#Last-fm" class="headerlink" title="Last.fm"></a>Last.fm</h2><p>Last·fm是 Audioscrobbler 音乐引擎设计团队的旗舰产品，以英国为总部的网络电台和音乐社区。有遍布232个国家超过1500万的活跃听众。据说有6亿音乐资源。<br>docker-compose.yml 配置 Navidrome 可以从 Last.fm 和 Spotify 获取专辑信息和图像。<br>Last.fm。首先需要一个Last.fm 免费帐户，其次你要能访问Last.fm。转到 <a href="https://www.last.fm/api/account/create">https://www.last.fm/api/account/create</a> 并创建一个 API 帐户。只有 应用程序名称 字段是强制性的。<br>账号信息</p><h2 id="Spotify"><a href="#Spotify" class="headerlink" title="Spotify"></a>Spotify</h2><p>Spotify，中文名称声田或声破天，是一个全球范围的正版音乐服务平台，于2008年10月在瑞典首都斯德哥尔摩正式上线。Spotify是目前是全球最大的流音乐服务商之一，与环球音乐集团、索尼音乐娱乐、华纳音乐集团三大唱片公司及其它唱片公司合作授权、由数字版权管理保护的音乐。</p><h1 id="Alist环境安装使用"><a href="#Alist环境安装使用" class="headerlink" title="Alist环境安装使用"></a>Alist环境安装使用</h1><p>最近萌生了自己搭建音乐库的想法，网易云歌曲下载已经有很多了，但是音乐库该用什么仍没有想法，但是前几天刷公众号找到了一个名为Navidrome的“音乐服务器”，他是一个基于 Web 的开源音乐收集服务器和流媒体。它让您可以自由地从任何浏览器或移动设备收听您的音乐收藏。</p><p>但是他仅能读取本地的音乐，而我手头上正好没有NAS，只有一台50G存储的服务器，那我是否可以这样实现：</p><img src="/posts/870218609/image.4ejaaqhcr820.webp" class="" title="img"><p>理论存在，实践开始。</p><h2 id="安装Alist"><a href="#安装Alist" class="headerlink" title="安装Alist"></a>安装Alist</h2><p>此处不在赘述，查阅<a href="https://alist.nn.ci/zh">Alist Docs</a>安装Alist即可。</p><h2 id="安装并配置davfs2"><a href="#安装并配置davfs2" class="headerlink" title="安装并配置davfs2"></a>安装并配置davfs2</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install davfs2 -y</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/davfs2/davfs2.conf</span><br></pre></td></tr></table></figure><p>按<code>i</code>进入编辑模式，在配置文件中分别找到<code>ignore_dav_header</code> <code>follow_redirect</code> ，把他们前面的注释删掉，后面的<code>0</code>改为<code>1</code>；找到<code>use_locks</code>，将前面的注释删掉，后面的<code>1</code>改为<code>0</code>。最后按<code>esc</code>，输入<code>:wq</code>保存。</p><h3 id="挂载Alist-WebDav"><a href="#挂载Alist-WebDav" class="headerlink" title="挂载Alist WebDav"></a>挂载Alist WebDav</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t davfs http://&lt;YourIP&gt;:&lt;Port&gt;/dav /root/alist</span><br></pre></td></tr></table></figure><p>改为你的Alist地址，后面的目录看你自己想挂载在哪里。</p><h3 id="设置系统启动时自动挂载"><a href="#设置系统启动时自动挂载" class="headerlink" title="设置系统启动时自动挂载"></a>设置系统启动时自动挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;http://&lt;YourIP&gt;:&lt;Port&gt;/dav &lt;user&gt; &lt;password&gt;&quot;</span> &gt; /etc/davfs2/secretsvim /etc/davfs2/davfs2.conf</span><br></pre></td></tr></table></figure><p>改为你的Alist地址，修改为你的Alist账号密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><p>在文件末尾添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://&lt;YourIP&gt;:&lt;Port&gt;/dav /root/alist davfs _netdev,auto 0 0</span><br></pre></td></tr></table></figure><p>还是一样，改为你的Alist地址，修改后面的挂载目录，最后<code>:wq</code>保存即可。</p><p>这样设置后，每次系统启动时，都会自动尝试挂载Alist WebDav到 <code>/root/alist</code>。</p><h2 id="安装Navidrome"><a href="#安装Navidrome" class="headerlink" title="安装Navidrome"></a>安装Navidrome</h2><p>使用Docker运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   --name navidrome \</span><br><span class="line">   --restart=unless-stopped \</span><br><span class="line">   --user $(id -u):$(id -g) \</span><br><span class="line">   -v /root/alist/music:/music \</span><br><span class="line">   -v /root/navidrome_data/data:/data \</span><br><span class="line">   -p 4533:4533 \</span><br><span class="line">   -e ND_LOGLEVEL=info \</span><br><span class="line">   deluan/navidrome:latest</span><br></pre></td></tr></table></figure><p>更多的环境变量配置可查看<a href="https://www.navidrome.org/docs/usage/configuration-options/">官方文档</a>。我个人建议设置Last.fm和Spotify，这样可以获取专辑图片、简介和歌手图片、简介。使用<code>docker ps</code>查看运行状态，然后打开<code>http://&lt;YourIP&gt;:4533</code>，注册你的管理员账号，前往<code>/app/#/personal</code>更改语言、主题。</p><p>更多的环境变量配置可查看官方文档。我个人建议设置Last.fm和Spotify，这样可以获取专辑图片、简介和歌手图片、简介。使用docker ps查看运行状态，然后打开http:&#x2F;&#x2F;<YourIP>:4533，注册你的管理员账号，前往&#x2F;app&#x2F;#&#x2F;personal更改语言、主题。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><p><a href="https://help.luyouxia.com/navidrome.html">本地 Docker 部署 Navidrome 以及外网远程访问详细教程</a></p></li><li><p><a href="https://blog.lcayun.com/3265.html">使用Docker搭建属于自己的开源音乐服务器——Navidrome</a></p></li><li><p><a href="https://hcnote.cn/2024/07/17/11225.html">使用Navidrome配合音流软件自建音乐库并通过alist挂载网盘使用</a></p></li><li><p><a href="https://blog.csdn.net/qq_43149632/article/details/140735933">Navidrome音乐服务器 + 音流APP &#x3D; 释放你的手机空间</a></p></li><li><p><a href="https://www.navidrome.org/docs/installation/docker/">Installing with Docker官网</a></p></li><li><p><a href="https://blog.csdn.net/qiufo/article/details/132647157">自建音乐服务器Navidrome之二</a></p></li><li><p><a href="https://rong6.cn/archives/alist-and-navidromeda-create-music-library">(很有用)Alist+Navidrome搭建自己的音乐库，从此听歌不求人！</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">navidrome各环境中安装和使用建议</summary>
    
    
    
    <category term="Docker" scheme="https://zml3589110.github.io/categories/Docker/"/>
    
    <category term="影音娱乐" scheme="https://zml3589110.github.io/categories/%E5%BD%B1%E9%9F%B3%E5%A8%B1%E4%B9%90/"/>
    
    <category term="navidrome" scheme="https://zml3589110.github.io/categories/navidrome/"/>
    
    
    <category term="navidrome" scheme="https://zml3589110.github.io/tags/navidrome/"/>
    
    <category term="音乐软件" scheme="https://zml3589110.github.io/tags/%E9%9F%B3%E4%B9%90%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="影音娱乐" scheme="https://zml3589110.github.io/tags/%E5%BD%B1%E9%9F%B3%E5%A8%B1%E4%B9%90/"/>
    
    <category term="Docker" scheme="https://zml3589110.github.io/tags/Docker/"/>
    
    <category term="音流" scheme="https://zml3589110.github.io/tags/%E9%9F%B3%E6%B5%81/"/>
    
    <category term="Alist" scheme="https://zml3589110.github.io/tags/Alist/"/>
    
  </entry>
  
  <entry>
    <title>docker下载pull镜像失败报错</title>
    <link href="https://zml3589110.github.io/posts/2162805115.html"/>
    <id>https://zml3589110.github.io/posts/2162805115.html</id>
    <published>2025-02-20T07:36:20.000Z</published>
    <updated>2025-02-20T08:39:25.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载镜像时报错-Get-“https-registry-1-docker-io-v2-“"><a href="#下载镜像时报错-Get-“https-registry-1-docker-io-v2-“" class="headerlink" title="下载镜像时报错 Get “https://registry-1.docker.io/v2/“"></a>下载镜像时报错 Get “<a href="https://registry-1.docker.io/v2/%E2%80%9C">https://registry-1.docker.io/v2/“</a></h1><p>根本原因是docker仓库被墙了</p><h1 id="一、问题："><a href="#一、问题：" class="headerlink" title="一、问题："></a>一、问题：</h1><p>docker: Error response from daemon: Get “<a href="https://registry-1.docker.io/v2/&quot;">https://registry-1.docker.io/v2/&quot;</a>: net&#x2F;http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).</p><h1 id="二、描述"><a href="#二、描述" class="headerlink" title="二、描述"></a>二、描述</h1><p>在使用docker进行镜像拉取的时候，存在拉取不下来，或者超市的问题，就会报<br>docker: Error response from daemon: Get “<a href="https://registry-1.docker.io/v2/%E2%80%9C">https://registry-1.docker.io/v2/“</a>: net&#x2F;http: request canc的错误，导致无法开心的使用docker。</p><h1 id="三、解决"><a href="#三、解决" class="headerlink" title="三、解决"></a>三、解决</h1><p>具体解决方法如下：</p><p>1.备份原来的配置文件</p><p>cp &#x2F;etc&#x2F;docker&#x2F;daemon.json{,.bak}</p><p>2.删除或修改daemon.json 文件，我这里因为是测试环境就直接删除原来的配置文件了，并添加如下配置</p><p>rm -rf &#x2F;etc&#x2F;docker&#x2F;daemon.json </p><p>sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-‘EOF’<br>{<br>   “registry-mirrors”: [<br>     “<a href="https://docker.1ms.run&quot;/">https://docker.1ms.run&quot;</a>,<br>     “<a href="https://docker.1panel.live/&quot;">https://docker.1panel.live/&quot;</a><br>   ]<br> }<br> EOF</p><p>3.重新加载配置文件和重启docker</p><p> sudo systemctl daemon-reload<br> sudo systemctl restart docker</p><p>4.再次拉取进行进行测试</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/wufaqidong1/article/details/144476399">docker: Error response from daemon: Get “https://registry-1.docker.io/v2/“: net/http: request c</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">docker下载pull镜像链接时报错失败处理方法</summary>
    
    
    
    <category term="Docker" scheme="https://zml3589110.github.io/categories/Docker/"/>
    
    <category term="镜像" scheme="https://zml3589110.github.io/categories/%E9%95%9C%E5%83%8F/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="navidrome" scheme="https://zml3589110.github.io/tags/navidrome/"/>
    
    <category term="Docker" scheme="https://zml3589110.github.io/tags/Docker/"/>
    
    <category term="debain" scheme="https://zml3589110.github.io/tags/debain/"/>
    
    <category term="pull" scheme="https://zml3589110.github.io/tags/pull/"/>
    
    <category term="镜像" scheme="https://zml3589110.github.io/tags/%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>我想做一个与380V半桥8KW电磁板配套的平板线圈盘,电感200,直径600MM,有人做吗</title>
    <link href="https://zml3589110.github.io/posts/56459246.html"/>
    <id>https://zml3589110.github.io/posts/56459246.html</id>
    <published>2025-01-21T06:06:20.000Z</published>
    <updated>2025-01-21T06:21:31.986Z</updated>
    
    <content type="html"><![CDATA[<p>anyiker<br>LV.2</p><ul><li>关注+ 私信<br>我想做一个与380V半桥8KW电磁板配套的平板线圈盘，电感200，直径600MM,有人做吗？</li></ul><hr><p>fsrhc<br>LV.4<br>2<br>2011-08-24 21:36<br>看你的电容配置。</p><p>4205250873<br>LV.5<br>3<br>2011-08-25 09:20</p><blockquote><p>@fsrhc<br>看你的电容配置。</p></blockquote><p>用漆包线扁起来绕的话容易做出来的，人家做全桥的电感量有3白多的，4白多的都做出来了，你这个太容易了</p><p>4205250873<br>LV.5<br>4<br>2011-08-25 09:23</p><blockquote><p>@4205250873<br>用漆包线扁起来绕的话容易做出来的，人家做全桥的电感量有3白多的，4白多的都做出来了，你这个太容易了</p></blockquote><p>我不是做线盘的，你应该知道做线盘的供应商吧</p><p>igbtsy<br>LV.9<br>5<br>2011-08-25 13:28</p><blockquote><p>@4205250873<br>用漆包线扁起来绕的话容易做出来的，人家做全桥的电感量有3白多的，4白多的都做出来了，你这个太容易了</p></blockquote><p>按楼主的要求绕出来的线盘是绕得很稀的，加热不均匀的线盘。密绕的线盘比稀绕的好做，光用耐高温胶就可以定型，安装运输也方便。而绕得稀的线盘还要托架之类的固定物，运输安装都不方便。</p><p>如果密绕的话200电感量8KW半桥，线盘外径大约在290到320之间，要看用线的粗细了。</p><p>电源网-源源<br>LV.10<br>6<br>2011-08-25 15:03</p><blockquote><p>@igbtsy<br>按楼主的要求绕出来的线盘是绕得很稀的，加热不均匀的线盘。密绕的线盘比稀绕的好做，光用耐高温胶就可以定型，安装运输也方便。而绕得稀的线盘还要托架之类的固定物，运输安装都不方便。如果密绕的话200电感量8KW半桥，线盘外径大约在290到320之间，要看用线的粗细了。</p></blockquote><p>igbtsy 请看您的站内信 我给您发了封站内信</p><p>fsrhc<br>LV.4<br>7<br>2011-08-26 15:42</p><blockquote><p>@igbtsy<br>按楼主的要求绕出来的线盘是绕得很稀的，加热不均匀的线盘。密绕的线盘比稀绕的好做，光用耐高温胶就可以定型，安装运输也方便。而绕得稀的线盘还要托架之类的固定物，运输安装都不方便。如果密绕的话200电感量8KW半桥，线盘外径大约在290到320之间，要看用线的粗细了。</p></blockquote><p>感量 大了，所需配的谐振电容就小多了。</p><p>igbtsy<br>LV.9<br>8<br>2011-08-26 16:29</p><blockquote><p>@fsrhc<br>感量大了，所需配的谐振电容就小多了。</p></blockquote><p>配电容是为了凑谐振频率，线圈匝数才是决定功率的主要男因素。</p><p>4205250873<br>LV.5<br>9<br>2011-08-27 22:46</p><blockquote><p>@igbtsy<br>配电容是为了凑谐振频率，线圈匝数才是决定功率的主要男因素。</p></blockquote><p>我不太明白IGBTSY兄的意思，不知道他说的匝数是指加热线盘绕多少圈还是加热线圈线直径（即多少股线）？个人拙见：线直径主要影响线盘温度和Q值，钱盘圈数主要影响电感量和加热面积。影响功率的主要因素应该是靠LC的参数共同决定的吧，</p><p>igbtsy<br>LV.9<br>10<br>2011-08-28 08:07</p><blockquote><p>@4205250873<br>我不太明白IGBTSY兄的意思，不知道他说的匝数是指加热线盘绕多少圈还是加热线圈线直径（即多少股线）？个人拙见：线直径主要影响线盘温度和Q值，钱盘圈数主要影响电感量和加热面积。影响功率的主要因素应该是靠LC的参数共同决定的吧，</p></blockquote><p>是指加热线盘绕多少圈，用电感量表述就有误区，电感量受到被加热物件的导磁率，线圈与被加热物件的距离等因素而各不相同。线圈的绕法，形状不同，电感量也不同，但圈数却实际地反映了被加热物件的环行电流的路径及长度，一个很复杂的功率问题就变成象电炉盘中的电热丝的长短对功率的影响了，当然这样的理解是忽略了一些次要的问题，抓住了主要的问题。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.dianyuan.com/bbs/715462.html">我想做一个与380V半桥8KW电磁板配套的平板线圈盘，电感200，直径600MM,有人做吗？</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">380V半桥8KW电磁板配套的平板线圈盘探讨</summary>
    
    
    
    <category term="电磁炉" scheme="https://zml3589110.github.io/categories/%E7%94%B5%E7%A3%81%E7%82%89/"/>
    
    <category term="半桥" scheme="https://zml3589110.github.io/categories/%E5%8D%8A%E6%A1%A5/"/>
    
    
    <category term="电磁炉" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E7%A3%81%E7%82%89/"/>
    
    <category term="半桥" scheme="https://zml3589110.github.io/tags/%E5%8D%8A%E6%A1%A5/"/>
    
    <category term="CE波形" scheme="https://zml3589110.github.io/tags/CE%E6%B3%A2%E5%BD%A2/"/>
    
    <category term="波形查看" scheme="https://zml3589110.github.io/tags/%E6%B3%A2%E5%BD%A2%E6%9F%A5%E7%9C%8B/"/>
    
    <category term="IGBT" scheme="https://zml3589110.github.io/tags/IGBT/"/>
    
    <category term="igbtsy" scheme="https://zml3589110.github.io/tags/igbtsy/"/>
    
    <category term="线盘" scheme="https://zml3589110.github.io/tags/%E7%BA%BF%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF使用example_disconnect报错</title>
    <link href="https://zml3589110.github.io/posts/1392348728.html"/>
    <id>https://zml3589110.github.io/posts/1392348728.html</id>
    <published>2025-01-16T00:35:20.000Z</published>
    <updated>2025-01-21T06:21:31.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题发现"><a href="#问题发现" class="headerlink" title="问题发现"></a>问题发现</h1><p>使用example_connect函数连接网络后在使用 example_disconnect 函数断开网络时会出现段错误复位</p><img src="/posts/1392348728/image-20250116083847034.png" class="" title="image-20250116083847034"><p>报故障如下：</p><img src="/posts/1392348728/image-20250116083949502.png" class="" title="image-20250116083949502"><h1 id="分析及问题处理"><a href="#分析及问题处理" class="headerlink" title="分析及问题处理"></a>分析及问题处理</h1><p>错误位置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0x4021b3e5: scan_parse_beacon at ??:?</span><br><span class="line"></span><br><span class="line">0x4021c426: sta_input at ??:?</span><br><span class="line"></span><br><span class="line">0x40269615: ppTask at ??:?</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以使用函数定位：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xtensa-esp32-elf-addr2line -pfiaC -e meizu_light.elf <span class="number">0x40090ace</span>:<span class="number">0x3ffbbe80</span> <span class="number">0x4009063d</span>:<span class="number">0x3ffbbea0</span></span><br></pre></td></tr></table></figure><p>查找不到这三个地方。根据各个位置尝试，最后发现是在关闭WIFI后会产生重连动作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I (6657) example_connect: Wi-Fi disconnected, trying to reconnect...</span><br></pre></td></tr></table></figure><p>也就是说，在关闭WIFI连接之前应该先取消重连功能，将注册函数取消即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ESP_ERROR_CHECK(esp_event_handler_unregister(WIFI_EVENT, WIFI_EVENT_STA_DISCONNECTED, &amp;on_wifi_disconnect));</span><br><span class="line">ESP_ERROR_CHECK(esp_event_handler_unregister(IP_EVENT, IP_EVENT_STA_GOT_IP, &amp;on_got_ip));</span><br></pre></td></tr></table></figure><img src="/posts/1392348728/image-20250116085311272.png" class="" title="image-20250116085311272"><p>这样就能正常关闭WIFI连接，重新编译即可</p><img src="/posts/1392348728/image-20250116085930045.png" class="" title="image-20250116085930045"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/lipanpan1030/article/details/139462281">ESP32-严重错误-崩溃分析系列-01</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF使用example_disconnect报错复位</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="Disconnect" scheme="https://zml3589110.github.io/tags/Disconnect/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/tags/ESP-IDF/"/>
    
    <category term="网络连接" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>ESP一键配网实现</title>
    <link href="https://zml3589110.github.io/posts/2222175314.html"/>
    <id>https://zml3589110.github.io/posts/2222175314.html</id>
    <published>2025-01-15T02:14:20.000Z</published>
    <updated>2025-01-21T06:21:31.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="手动实现-WIFI-SmartConfig-一键配网功能"><a href="#手动实现-WIFI-SmartConfig-一键配网功能" class="headerlink" title="手动实现 WIFI SmartConfig 一键配网功能"></a>手动实现 WIFI SmartConfig 一键配网功能</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>之前有尝试过乐鑫官方提供的smartconfig，效果并不是很理想，后来也使用巴法云的一键配网功能，想重新学习原理并实现这个功能，但发现网上关于UDP组播的方式文章很好，很多都是使用广播方式发送WIFI信息，因此就重新自己做了程序并记录一下。<br>目前实现的效果为:使ESP8266进入混杂模式，然后使用UDP程序发送组播信息，得到并解析出路由器的SSID和PWD信息！后续就能使用这个账号密码来连接WIFI了</p><p>最后实现的是组播方式发送信息，且每一个数据包带上校验和。第一个数据包为数据总长度，第二个为SSID长度，后边为SSID和PWD数据。</p><blockquote><p><strong>网上有很多文章已经很完整解释了一键配网的基本原理，这里就简单记录用到的内容。</strong></p></blockquote><h2 id="常用的配网方式"><a href="#常用的配网方式" class="headerlink" title="常用的配网方式"></a>常用的配网方式</h2><p>常用的配网方式：<br>1、AP配网：ESP等WIFI芯片开启AP模式，然后手机连接上这个AP并通过TCP等发送路由器SSID和PWD信息到芯片，WIFI芯片接收到后切换到STA模式并连接到对应WIFI，这个方式的缺点是步骤麻烦，不过也相对稳定！可以通过强制门户功能使手机在连接上AP之后直接打开配网网页！</p><p>2、一键配网：用户直接通过已经连接路由器的手机或者其他工具发送UDP广播或多播信息，处于混杂模式(WiFi Promiscuous)的WIFI芯片会接收并解析相应信息后得到了联网SSID和PWD信息，然后进行联网操作。</p><p>3、蓝牙配网等：通过蓝牙或者其他方式将配网信息发送到WIFI芯片并进行联网。</p><h2 id="流程实现"><a href="#流程实现" class="headerlink" title="流程实现"></a>流程实现</h2><p>1、 先复制乐鑫SDK下的 examples&#x2F;wifi&#x2F;sniffer 混杂实验到测试目录，并编译。<br>2、 通过网络工具的UDP功能向 239.0.0.1:18226 发送任意数据，这里就发送一个字符，此时路由器会发送组播信息。<br>3、 使用Wireshark等工具查看当前IP所发送的UDP数据包，发现有个 0x01 0x00 0x05 … 的数据包，这就是组播数据包。<br>4、 对ESP接收到的数据进行解析，截取 0x01 0x00 0x05 … 开头的6组数据，这个其实是 这个 239.0.0.1 对应的MAC地址。<br>5、 后续只要对 UDP地址进行调整即可得到相应的信息。</p><h2 id="编译修改ESP的sniffer工程"><a href="#编译修改ESP的sniffer工程" class="headerlink" title="编译修改ESP的sniffer工程"></a>编译修改ESP的sniffer工程</h2><p>正常ESP环境搭建好的话编译是没有问题的。<br>需要修改的是实现方式。</p><p><strong>注意：开始使用了默认方式老是接收不到有效UDP信息，后来先尝试全开然后发现 CONFIG_FILTER_MASK_DATA 这个模式下才能接收到。</strong></p><blockquote><p>数据格式为：0x01-0x00-0x5e-index-char-checksum</p></blockquote><p>其中： 0x01-0x00-0x5e：组播固定MAC；index：数据编号；char：有效字符；checksum：校验和</p><h2 id="SSID和PWD字符串转换工具"><a href="#SSID和PWD字符串转换工具" class="headerlink" title="SSID和PWD字符串转换工具"></a>SSID和PWD字符串转换工具</h2><p>写了个程序将SSID和PWD转换成IP并通过UDP组播发送出去。</p><p>即只需要根据SSID和PWD字符串中的每个字符来更改IP地址的后3位就能得到不一样的MAC后三位数据，也就是最终对应的char。</p><h2 id="ESP接收解析"><a href="#ESP接收解析" class="headerlink" title="ESP接收解析"></a>ESP接收解析</h2><p>ESP在没接收到一组信息时会一直变换信道，分别从1-12不断变化，直到有一组数据正确后就会停留在当前信道20秒，若20秒内一直没有等到数据则需要重新调整信道来接收数据。</p><p>根据相应信息编码就可得到联网所需的SSID和PWD信息，进一步设置STA即可完成联网！</p><h2 id="效果实现"><a href="#效果实现" class="headerlink" title="效果实现"></a>效果实现</h2><p><strong>下图为信道刷新</strong><br>当一直接收不到信息时，将会每秒调整信道，用以查到信道位置。</p><img src="/posts/2222175314/%E4%BF%A1%E9%81%93%E5%88%B7%E6%96%B0.png" class="" title="信道刷新"><p><strong>下图是ESP打印出接收到的有效SSID和PWD信息</strong><br>发送的信息为 MySSID 和 My877 ,ESP所接收到的也是一样，同时打印出当前为12信道。</p><img src="/posts/2222175314/ESP-UDP%E7%BB%84%E6%92%AD.png" class="" title="ESP-UDP组播"><h1 id="WiFi一键配网（smartconfig）原理介绍"><a href="#WiFi一键配网（smartconfig）原理介绍" class="headerlink" title="WiFi一键配网（smartconfig）原理介绍"></a>WiFi一键配网（smartconfig）原理介绍</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>随着越来越多智能家居设备进入家庭，这些产品大部分都是要连接家庭的WiFi网络的，但WiFi网络的接入需要知道无线路由器的名字（SSID）和密码，绝大多数的智能家居不会设置键盘和屏幕，这样对于智能家居要连接的无线路由器输入无线路由器的名字和密码就成了一个困难。为了克服这个问题，人们使用了多种配网方法，比如智能家居热点配网，手机热点配网，蓝牙辅助配网等等，这些配网方式都存在一定的不方便之处，而smartConfig配网方式是无线配网方式里面比较方便和快捷的配网方式。</p><h2 id="常用的配网方式-1"><a href="#常用的配网方式-1" class="headerlink" title="常用的配网方式"></a>常用的配网方式</h2><p>智能家居设备热点配网：</p><img src="/posts/2222175314/5366d0160924ab18401616d31a11f1ca79890bc0.jpeg@f_auto" class="" title="img"><p>如上图所示，待配网设备首先启动热点功能，手机连接后把待连接的无线路由器SSID和密码告诉设备，然后，设备去连接无线路由器<br><strong>手机热点配网方式：</strong><br>手机热点配网方式和设备配网差不多，仅仅是手机做为热点，流程和上图类似。<br><strong>蓝牙配网方式：</strong><br>蓝牙配网是需要设备同时具有蓝牙功能，先使用蓝牙进行连接，把无线路由器的SSID和密码通过蓝牙发送给待配网设备。这种配网方式要求待配网设备具有蓝牙功能，成本较高，结构复杂，使用较少。<br>这些配网方式都需要实现设置一个网络来辅助配网，配网时间比较长，也比较繁琐，使用上并不便利。</p><h2 id="SmartConfig配网基本原理"><a href="#SmartConfig配网基本原理" class="headerlink" title="SmartConfig配网基本原理"></a>SmartConfig配网基本原理</h2><p>smartconfig的配网基本原理是通过手机直接发送报文到待配网设备。</p><img src="/posts/2222175314/8718367adab44aedcf3962c29df79006a08bfb90.jpeg@f_auto" class="" title="img"><p>手机发送UDP广播报文，待配网设备扫描所有的可用无线信道，找到发送smartConfig的报文，并锁定在这一信道上开始接受数据。</p><h2 id="需要克服的问题"><a href="#需要克服的问题" class="headerlink" title="需要克服的问题"></a>需要克服的问题</h2><p>我们配置的无线路由器绝大多数都是带密码的，我们知道，WiFi设置了密码则数据就是加密的，这时候待配网的设备是不能解密出数据的内容的，那怎么把无线路由器的密码和SSID送给待配网设备呢？</p><img src="/posts/2222175314/962bd40735fae6cd1e4da9f13f58182340a70f92.jpeg@f_auto" class="" title="img"><p>上图就是用抓包软件抓取的数据报文内容，大家可以看到，除了802.11 MAC Header 能看到外，其他都是加密字段，我们能了解到的只有源MAC地址和目的MAC地址和BSSID信息其他有限几个字段，如何把信息告诉待配网设备呢？</p><ol><li>由于配网设备未连接无线路由器，手机无法知道待配网设备的的MAC地址，如何才能让待配网设备接收到信息呢？<br>解决方法：<ol><li>虽然报文的整个数据部分都是加密的，但我们能知道报文的长度和发送MAC和目的MAC，我们要传输信息可以从这几个地方着手。我们可以使用报文长度这个特征来传递数据。</li><li>由于设备没有连接到无线路由器，这时候手机要发送配网信息是不知道设备的地址的，所以使用的地址是广播地址，这样只要在附近的无线WiFi设备处于监听模式都可以接收到这个报文。</li></ol></li></ol><h2 id="报文长度传递信息"><a href="#报文长度传递信息" class="headerlink" title="报文长度传递信息"></a>报文长度传递信息</h2><p>如何使用报文长度传递信息呢？smartconfig使用UDP报文传递信息，UDP的特点是可以发送广播数据，长度从0到最大的MAC报文长度减去前面的报文首部。这个长度可以传递我们需要的信息。SmartConfig有多种实现，我们举一个例子来说明。</p><img src="/posts/2222175314/279759ee3d6d55fb65b259ac40c9584d21a4dd32.jpeg@f_auto" class="" title="img"><p>上图显示的是连续发送三个长度为1248长度的数据报文表示smartconfig的开始，后面接数据帧。数据帧里面可以传递无线路由器的SSID和密码。由于smartconfig使用的是UDP报文传递，在发送的时候是没有顺序的，这时候就需要对发送的数据有索引字段。</p><img src="/posts/2222175314/96dda144ad345982256741b9231f26aacaef841a.jpeg@f_auto" class="" title="img"><p>这样报文的长度等于 packet len &#x3D; 索引 | 数据 ，索引和数据的位数可以自己来设计。</p><h2 id="传递的效率"><a href="#传递的效率" class="headerlink" title="传递的效率"></a>传递的效率</h2><p>由于信息仅能靠长度来传递，而且报文的长度是受限的，则每个报文的信息量是很有限的，传递一个长度是1248长度的数据帧，传递的信息也仅仅是两个字节的数据0X04E0 (0x04e0 &#x3D; 1248), 传递信息的效率是相当低的，1248是UDP报文的长度，加上前面的UDP包头IP包头，MAC包头等可能要超过1300个字节，那传输的效率就是2&#x2F;1300&#x3D;0.0015，情况更糟的是，2个字节传递的信息是0- 0xFFFF，就是0-65535，MAC层的报文长度最大是1500个字节，也就是说即便使用最大的报文长度传递信息连两个字节也传递不了，再去掉索引数据，一般一个报文只能传递一个字节数据。这样传递的效率就更低了。所以smartconfig广播UDP配网的效率普遍较慢，在密码和SSID比较长的情况下，还有配网失败的情况发生。</p><h2 id="多播配网"><a href="#多播配网" class="headerlink" title="多播配网"></a>多播配网</h2><p>为了克服广播配网的缺陷，出现了多播配网的应用。多播和广播一样，都是一种可以被附近配网设备接收到的报文，但由于多播地址有多个，可以使用多播的地址来传递信息。<br>IP多播地址<br>范围从 224.0.0.0 到 239.255.255.255<br>MAC多播地址<br>01-00-5E-00-00-00 到 01-00-5E-7F-FF-FF<br>对于smartconfig配网而言，一般情况下IP地址是加密的字段，我们无法看到，所以只能使用多播MAC地址来传递信息。<br>从上面的地址我们可以看出多播地址有个较大的范围，地址有三个字节是变化的，我们可以使用这三个变化的地址空间来传递信息。同样由于每次只能传递三个字节，我们需要一个顺序字段，一般会占用一个字节，这样还有两个字节来传递信息，如下图是使用多播MAC地址的示意图。</p><img src="/posts/2222175314/b2de9c82d158ccbf9632ea603733ab39b33541d4.jpeg@f_auto" class="" title="img"><p>多播配网的数据部分不需要传递信息，所以传递的数据长度大大降低，传递效率很高，多播配网的效率和速度都远远高于广播长度字段配网效率。</p><h1 id="smartConfig-浅析"><a href="#smartConfig-浅析" class="headerlink" title="smartConfig 浅析"></a>smartConfig 浅析</h1><p>一、背景</p><p>物联网时代技术开始规模化服务于民众，方便快捷显得尤为重要，WIFI 直连便是一个典型案例。</p><p>目前主流的 WIFI 配置模式有以下 2 种:</p><ol><li>智能硬件处于 AP 模式（类似路由器，组成局域网），手机用于 STA 模式<br> 手机连接到处于 AP 模式的智能硬件后组成局域网,手机发送需要连接路由的 SSID 及密码至智能硬件，智能硬件主动去连接指定路由后,完成配网</li><li>一键配网(smartConfig)模式<br> 智能硬件处于混杂模式下,监听网络中的所有报文;手机 APP 将 SSID 和密码编码到 UDP 报文中,通过广播包或组播报发送,智能硬件接收到 UDP 报文后解码,得到正确的 SSID 和密码,然后主动连接指定 SSID 的路由完成连接。</li></ol><p><strong>AP 模式：</strong></p><p>AP 是 (Wireless) Access Point 的缩写，即 (无线) 访问接入点。简单来讲就像是无线路由器一样，设备打开后进入 AP 模式，在手机的网络列表里面，可以搜索到类似 TPLINK_XXX 的名字（SSID）。</p><p>连接步骤：</p><p>1、智能硬件设备初始化并进入 AP 模式<br>2、手机扫描 WIFI 列表：扫描到智能硬件设备后（SSID）连接该智能硬件设备，通过 UDP 发送 经过 AES 加密过的 ssid&#x2F;password&#x2F;token</p><img src="/posts/2222175314/917705-20200109180746048-626612788.png" class="" title="img"><p>** smartConfig 模式：**<br>这种快速连接方式，相对于 AP 模式连接简化操作，更加贴近于市场</p><p>1、手机连上 WiFi，打开智能硬件指定 APP 软件，进入配置界面，输入手机所在 WiFi 密码，请求配网 TOKEN<br>2、智能硬件开启混杂模式监听所有网络数据包<br>3、手机通过广播、组播循环发送 ssid&#x2F;password&#x2F;token<br>4、硬件设备通过 UDP 包（长度）获取配置信息捕捉到 ssid&#x2F;password&#x2F;token，连接路由器（广播根据 UDP 包长度，组播根据 IP 地址信息）</p><img src="/posts/2222175314/917705-20200109180812392-845370729.png" class="" title="img"><p>从原理上讲只要芯片驱动支持开启混杂模式(WiFi Promiscuous),就可以支持一键配网功能</p><p>手机编码发送采用有 UDP 组播或广播，不同的发送方式和编码，对应的解码过程也不一样</p><p>1、广播：</p><p>发送方可通过改变其所需要发送数据包的长度进行控制，因此只要指定出一套利用长度编码的通讯协议，就可利用数据包的 Length 字段进行数据传递</p><p>2、 组播：</p><p>组播地址是保留的 D 类地址从224.0.0.0-239.255.255.255</p><p>IP 地址与 MAC 地址映射关系为：将 MAC 地址的前 25 位设定为 01.00.5e，而 MAC 地址的后 23 位对应 IP 地址位</p><p>故发送端可以将数据编码在组播 IP 的后 23bit 中，通过组播包发送接收端进行解码即可</p><img src="/posts/2222175314/917705-20200109180835935-2003338703.png" class="" title="img"><p>二、smartConfig 原理浅析</p><p>在没有和其他设备(支持 smartConfig 技术)建立任何性质的通讯链路的情况下, 配置该设备接入 WIFI 网络</p><p>普通权限的应用程序是没有能力完全控制和定义传输层及下层所有协议数据的, 唯一可以完全控制的就是应用层数据</p><p>本质上就是将 UDP 包头的数据长度作为 smartConfig 的数据，APP 端和设备端共用一套编码表即可解析数据</p><p>TCP&#x2F;IP 协议栈中的网络层和传输层的数据结构</p><p>常用的网络层协议是 IPv4, IPv4 的头部绝大多数情况下都是定长的20字节</p><p>传输层协议是 UDP, 因为 UDP 协议头部为定长的 8 字节</p><p>明文长度 &#x3D; 20 + 8 + dataLen</p><p>密文长度 &#x3D; 20 + 8 + dataLen + 算法常量</p><p>例子：</p><p>如果需要发出一个密文长度为 500 字节的 802.11 帧,只需要在 UDP 中填充任意(500 – 20 – 8 – 算法常亮)个字节数据即可</p><p>因此，只需要利用可控的密文长度（dataLen）定义一张编码表即可将数据告诉任何知道这张编码表的设备（IoT硬件设备）</p><p>自定义一张编码表，流程如下:</p><p>dataLen –&gt; 映射<br>1234    –&gt; 起始符; 连续的3个起始符, 用于表示数据传输开始<br>1324    –&gt; 结束符; 连续的3个结束符, 用于表示数据传输结束<br>110     –&gt; 间隔符; 连续的2个间隔符, 用于表示数据符之间的间隔<br>1000    –&gt; 数据符; 表示 ASCII 0x00<br>1001    –&gt; 数据符; 表示 ASCII 0x01<br>…<br>1127    –&gt; 数据符; 表示 ASCII 0x7F</p><img src="/posts/2222175314/917705-20200109180859712-1075065612.png" class="" title="img"><p> 假设我们要把字符串”Jay”告诉摄像头, 整个流程大致如下: (假设算法常亮为 16)</p><p>APP 端:</p><p>打开手机 APP, 在输入框中填入要发送的字符串”Jay”, 点击发送：</p><p>1.1、APP 连续发送 3 个 UDP 广播包, 填充数据为 1190 个字节 0x00 数据 ( 1234 – 16 – 20 – 8 &#x3D; 1190 ), 表示传输开始<br>1.2、APP 发送     1 个 UDP 广播包, 填充数据为 1030 个字节 0x00 数据 ( 1074 – 16 -20 – 8 &#x3D; 1030  ), 传输字符 J<br>1.3、APP 连续发送 2 个 UDP 广播包, 填充数据为 66   个字节 0x00 数据 ( 110 – 16 – 20 – 8 &#x3D; 66    ), 表示数据间隔<br>1.4、APP 发送     1 个 UDP 广播包, 填充数据为 1053 个字节 0x00 数据 ( 1097 – 16 -20 – 8 &#x3D; 1053  ), 传输字符 1097 对应 a<br>1.5、APP 连续发送 2 个 UDP 广播包, 填充数据为 66   个字节 0x00 数据 ( 110 – 16 – 20 – 8 &#x3D; 66    ), 表示数据间隔<br>1.6、APP 发送     1 个 UDP 广播包, 填充数据为 1077 个字节 0x00 数据 ( 1121 – 16 -20 – 8 &#x3D; 1077  ), 传输字符 1121 对应 y<br>1.7、APP 连续发送 3 个 UDP 广播包, 填充数据为 1280 个字节 0x00 数据 ( 1324- 16 – 20 – 8 &#x3D; 1280  ), 表示传输结束</p><p>从步骤 1.1 开始循环多次, 直到超时或 IoT 设备成功接入 WIFI</p><p>IoT 设备端:</p><p>设备上电进入混杂模式，开始监听信号覆盖范围内的所有 WIFI 数据帧</p><p>捕获数据帧, 如果连续收到 3 个密文，其数据长度 dataLen 为 1234 字节, 且来自于同一个发射源 channel-A 的数据帧, 则进入下一步, 否则该步骤</p><p>捕获发射源 channel-A 的数据帧, 持续捕获密文数据长度为 110 或 1000-1127 之间的数据帧, 直到捕获到连续 3 个密文数据长度为 1324 的数据帧</p><p>将上述数据帧按照编码表进行映射, 由于手机 APP 并非是独占网络, 所以捕获到的数据可能有噪音, 比如解码出来的结果可能是(&#x2F;表示分隔符): mnJ&#x2F;o@a&#x2F;ymmm</p><p>如果没有噪音, 记为候选数据RC, 重复捕获X, 进行二次验证, 通过则表示接收完成, 没通过也重复捕获 channel-A,</p><p>将这次所得结果同上一次做交集, 循环如此直到得出唯一结果, 即 RC, 之后再重复 5</p><p>由于捕获的数据帧头部信息中已经包含了 WIFI 的 BSSID 信息, 使用 “Jay” 作为密码去尝试连接相应的 WIFI</p><h2 id="四、知识扩展"><a href="#四、知识扩展" class="headerlink" title="四、知识扩展"></a>四、知识扩展</h2><p>在当前网络通信中有三种通信模式：</p><p>单播、广播、组播(又叫多播)，其中多播出现的时间最晚，但同时具备单播和广播的优点，最具有发展前景.</p><p>通信方式分类：</p><pre><code>1.单播：单台主机与单台主机之间的通信；2.广播：单台主机与网络中所有主机的通信；3.组播：单台主机与选定的一组主机的通信；</code></pre><p>单播：</p><pre><code> 单播是网络通信中最常见的，网络节点之间的通信 就好像是人们之间的对话一样，如果一个人对另外一个人说话,那么用网络技术的术语来描述就是“单播”，此时信息的接收和传递只在两个节点之间进行。 1. 单播的优点：     (1)服务器以及响应客户端的请求；     (2)服务器能针对每个客户端的不同请求发送不同的响应，容易显示个性化服务； 2. 单播的缺点：     服务器针对每个客户机发送数据流，服务器流量＝客户机数量×客户机流量；在客户数量大、每个客户机流量大的流媒体应用中服务器不堪重负； 3. 应用场景：    单播在网络中得到了广泛的应用，网络上绝大部分的数据都是以单播的形式传输的，例如：收发电子邮件、游览网页时，必须与邮件服务器、服务器建立连接，此时使用的就是单播通信方式；</code></pre><p>广播：</p><pre><code>广播可以比作为一个人通过广播喇叭对在场的全体说话，换句话说: 广播是一台主机对某一个网络上的所有主机发送数据报包。这个网络可能是网络，也可能时子网，还有可能是所有子网。广播有两类：本地广播和定向广播：        定向广播：将数据报包发送到本网络之外的特定网络的所有主机，互联网上的大部分路由器都不转发定向广播消息；        本地广播：将数据报包发送到本地网络的所有主机，IPv4的本地广播地址为“255.255.255.255”，路由器不会转发此广播；1.广播的优点：   (1)通信的效率高，信息一下子就可以传递到某一个网络上的所有主机。   (2)由于服务器不用向每个客户端单独发送数据，所以服务器流量比较负载低；2.广播的缺点：   (1)非常占用网络的带宽；   (2)缺乏针对性,也不管主机是否真的需要接收该数据, 就强制的接收数据；3.应用场景：   有线电视就是典型的广播型网络</code></pre><p>组播：</p><pre><code> 组播可以比作为你对着大街喊：女士免费领优惠券，那么女士就会过来，男士就不会过来(组播：其中所有的女士就是一个组) 换句话说:  组播是一台主机向指定的一组主机发送数据报包，因为如果采用单播方式，逐个节点传输，有多少个目标节点就会有多少次传送过程，这种方式显然效率极低，是不可取的；  如果采用不区分目标、全部发送的广播方式，虽然一次可以传送完数据，但是显然达不到区分特定数据接收对象的目的，又会占用网络带宽。  采用组播方式，既可以实现一次传送所有目标节点的数据，也可以达到只对特定对象传送数据的目的； IP 网络的组播一般通过组播 IP 地址来实现，组播 IP 地址就是 D 类 IP 地址，即 224.0.0.0 至 239.255.255.255 之间的IP地址。 1.组播的优点：    (1)具备广播所具备的所有优点；    (2)与单播相比，提供了发送数据报包的效率，与广播相比，减少了网络流量； 2.组播的缺点：    与单播协议相比没有纠错机制，发生丢包错包后难以弥补，但可以通过一定的容错机制和QOS加以弥补；</code></pre><p>refer:</p><p><a href="https://wenku.baidu.com/view/ab6bc08a9b6648d7c0c746ac.html">https://wenku.baidu.com/view/ab6bc08a9b6648d7c0c746ac.html</a><br><a href="https://blog.csdn.net/sadshen/article/details/47049129">https://blog.csdn.net/sadshen/article/details/47049129</a></p><p><a href="https://my.oschina.net/u/2396236/blog/1788674">https://my.oschina.net/u/2396236/blog/1788674</a><br><a href="https://blog.csdn.net/li_yangyang_li/article/details/50989220">https://blog.csdn.net/li_yangyang_li/article/details/50989220</a><br><a href="https://blog.csdn.net/flyingcys/article/details/49283273">https://blog.csdn.net/flyingcys/article/details/49283273</a></p><p><a href="https://blog.csdn.net/dabing69221/article/details/17286441#t1">https://blog.csdn.net/dabing69221/article/details/17286441#t1</a></p><h1 id="UDP-单播、广播、多播"><a href="#UDP-单播、广播、多播" class="headerlink" title="UDP 单播、广播、多播"></a>UDP 单播、广播、多播</h1><img src="/posts/2222175314/1603710-20190222112509243-1228048082.png" class="" title="img"><h2 id="一、UDP广播"><a href="#一、UDP广播" class="headerlink" title="一、UDP广播"></a>一、UDP广播</h2><p>广播UDP与单播UDP的区别就是IP地址不同，广播使用广播地址255.255.255.255，将消息发送到在同一广播网络上的每个主机。值得强调的是：本地广播信息是不会被路由器转发。当然这是十分容易理解的，因为如果路由器转发了广播信息，那么势必会引起网络瘫痪。这也是为什么IP协议的设计者故意没有定义互联网范围的广播机制。</p><p>广播地址通常用于在网络游戏中处于同一本地网络的玩家之间交流状态信息等。</p><p>其实广播顾名思义，就是想局域网内所有的人说话，但是广播还是要指明接收者的端口号的，因为不可能接受者的所有端口都来收听广播。</p><h2 id="二、UDP多播"><a href="#二、UDP多播" class="headerlink" title="二、UDP多播"></a>二、UDP多播</h2><h3 id="1、多播（组播）的概念"><a href="#1、多播（组播）的概念" class="headerlink" title="1、多播（组播）的概念"></a>1、多播（组播）的概念</h3><p>多播，也称为“组播”，将网络中同一业务类型主机进行了逻辑上的分组，进行数据收发的时候其数据仅仅在同一分组中进行，其他的主机没有加入此分组不能收发对应的数据。</p><p>　　在广域网上广播的时候，其中的交换机和路由器只向需要获取数据的主机复制并转发数据。主机可以向路由器请求加入或退出某个组，网络中的路由器和交换机有选择地复制并传输数据，将数据仅仅传输给组内的主机。多播的这种功能，可以一次将数据发送到多个主机，又能保证不影响其他不需要（未加入组）的主机的其他通 信。</p><p>相对于传统的一对一的单播，多播具有如下的优点：</p><p>　　1、具有同种业务的主机加入同一数据流，共享同一通道，节省了带宽和服务器的优点，具有广播的优点而又没有广播所需要的带宽。</p><p>　　2、服务器的总带宽不受客户端带宽的限制。由于组播协议由接收者的需求来确定是否进行数据流的转发，所以服务器端的带宽是常量，与客户端的数量无关。</p><p>　　3、与单播一样，多播是允许在广域网即Internet上进行传输的，而广播仅仅在同一局域网上才能进行。</p><p>组播的缺点：</p><p>　　1、多播与单播相比没有纠错机制，当发生错误的时候难以弥补，但是可以在应用层来实现此种功能。</p><p>　　2、多播的网络支持存在缺陷，需要路由器及网络协议栈的支持。</p><p>　　3、多播的应用主要有网上视频、网上会议等。</p><h3 id="2、广域网的多播"><a href="#2、广域网的多播" class="headerlink" title="2、广域网的多播"></a>2、广域网的多播</h3><p>多播的地址是特定的，D类地址用于多播。D类IP地址就是多播IP地址，即224.0.0.0至239.255.255.255之间的IP地址，并被划分为局部连接多播地址、预留多播地址和管理权限多播地址3类：</p><p>　　1、局部多播地址：在224.0.0.0～224.0.0.255之间，这是为路由协议和其他用途保留的地址，路由器并不转发属于此范围的IP包。</p><p>　　2、预留多播地址：在224.0.1.0～238.255.255.255之间，可用于全球范围（如Internet）或网络协议。</p><p>　　3、管理权限多播地址：在239.0.0.0～239.255.255.255之间，可供组织内部使用，类似于私有IP地址，不能用于Internet，可限制多播范围。</p><p>多播的程序设计使用setsockopt()函数和getsockopt()函数来实现，组播的选项是IP层的，其选项值和含义参见11.5所示。</p><p>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　表11.5 多播相关的选项</p><table><thead><tr><th>**getsockopt()&#x2F;setsockopt()**的选项</th><th>含 义</th></tr></thead><tbody><tr><td>IP_MULTICAST_TTL</td><td>设置多播组数据的TTL值</td></tr><tr><td>IP_ADD_MEMBERSHIP</td><td>在指定接口上加入组播组</td></tr><tr><td>IP_DROP_MEMBERSHIP</td><td>退出组播组</td></tr><tr><td>IP_MULTICAST_IF</td><td>获取默认接口或设置接口</td></tr><tr><td>IP_MULTICAST_LOOP</td><td>禁止组播数据回送</td></tr></tbody></table><h3 id="3、多播程序设计的框架"><a href="#3、多播程序设计的框架" class="headerlink" title="3、多播程序设计的框架"></a>3、多播程序设计的框架</h3><p>要进行多播的编程，需要遵从一定的编程框架。多播程序框架主要包含套接字初始化、设置多播超时时间、加入多播组、发送数据、接收数据以及从多播组中离开几个方面。其步骤如下：</p><p>（1）建立一个socket。</p><p>（2）然后设置多播的参数，例如超时时间TTL、本地回环许可LOOP等。</p><p>（3）加入多播组。</p><p>（4）发送和接收数据。</p><p>（5）从多播组离开</p><h2 id="UDP广播与单播"><a href="#UDP广播与单播" class="headerlink" title="UDP广播与单播"></a>UDP广播与单播</h2><p>广播与单播的比较</p><p>广播和单播的处理过程是不同的，单播的数据只是收发数据的特定主机进行处理，而广播的数据整个局域网都进行处理。</p><p>　　例如在一个以太网上有3个主机，主机的配置如表11.4所示。</p><p>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　表11.4 某局域网中主机的配置情况</p><table><thead><tr><th>主 机</th><th><strong>A</strong></th><th><strong>B</strong></th><th><strong>C</strong></th></tr></thead><tbody><tr><td>IP地址</td><td>192.168.1.150</td><td>192.168.1.151</td><td>192.168.1.158</td></tr><tr><td>MAC地址</td><td>00:00:00:00:00:01</td><td>00:00:00:00:00:02</td><td>00:00:00:00:00:03</td></tr></tbody></table><p>　　单播流程：主机A向主机B发送UDP数据报，发送的目的IP为192.168.1.151，端口为 80，目的MAC地址为00:00:00:00:00:02。此数据经过UDP层、IP层，到达数据链路层，数据在整个以太网上传播，在此层中其他主机会 判断目的MAC地址。主机C的MAC地址为00:00:00:00:00:03，与目的MAC地址00:00:00:00:00:02不匹配，数据链路层 不会进行处理，直接丢弃此数据。</p><p>　　主机B的MAC地址为00:00:00:00:00:02，与目的MAC地址00:00:00:00:00:02一致，此数据会经过IP层、UDP层，到达接收数据的应用程序。</p><p>　　广播的流程：主机A向整个网络发送广播数据，发送的目的IP为192.168.1.255，端口为 80，目的MAC地址为FF:FF:FF:FF:FF:FF。此数据经过UDP层、IP层，到达数据链路层，数据在整个以太网上传播，在此层中其他主机会 判断目的MAC地址。由于目的MAC地址为FF:FF:FF:FF:FF:FF，主机C和主机B会忽略MAC地址的比较（当然，如果协议栈不支持广播，则 仍然比较MAC地址），处理接收到的数据。</p><p>　　主机B和主机C的处理过程一致，此数据会经过IP层、UDP层，到达接收数据的应用程序。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://baijiahao.baidu.com/s?id=1674425022615796809&wfr=spider&for=pc">WiFi一键配网（smartconfig）原理介绍</a></li><li><a href="https://www.cnblogs.com/zhangshenghui/p/12172893.html">物联网之 WIFI 一键配网 smartConfig 浅析</a></li><li><a href="https://www.cnblogs.com/yyy1234/p/10417383.html">UDP 单播、广播、多播</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">如何通过路由器UDP组播多播方式在 ESP8266 上实现一键配网</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="抓包" scheme="https://zml3589110.github.io/categories/%E6%8A%93%E5%8C%85/"/>
    
    <category term="网络编程" scheme="https://zml3589110.github.io/categories/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    <category term="UDP" scheme="https://zml3589110.github.io/categories/UDP/"/>
    
    <category term="smartconfig" scheme="https://zml3589110.github.io/categories/smartconfig/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="UDP" scheme="https://zml3589110.github.io/tags/UDP/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="一键配网" scheme="https://zml3589110.github.io/tags/%E4%B8%80%E9%94%AE%E9%85%8D%E7%BD%91/"/>
    
    <category term="广播" scheme="https://zml3589110.github.io/tags/%E5%B9%BF%E6%92%AD/"/>
    
    <category term="组播多播" scheme="https://zml3589110.github.io/tags/%E7%BB%84%E6%92%AD%E5%A4%9A%E6%92%AD/"/>
    
    <category term="Wireshark网络抓包" scheme="https://zml3589110.github.io/tags/Wireshark%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85/"/>
    
    <category term="smartconfig" scheme="https://zml3589110.github.io/tags/smartconfig/"/>
    
  </entry>
  
  <entry>
    <title>ESP8266如何使用UART串口通讯</title>
    <link href="https://zml3589110.github.io/posts/2903904808.html"/>
    <id>https://zml3589110.github.io/posts/2903904808.html</id>
    <published>2024-11-27T12:56:20.000Z</published>
    <updated>2024-12-02T12:57:00.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><p>本来根据demo设置了串口通讯，但总发现无法正确接收，故找了一些方法并尝试之，最后发现，将LOG打印调整且UART管脚做调换才最终实现正常收发，看别人说不用将管脚交换也行，只是自己这边没成功！</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>ESP8266 有两个UART。UART0有TX、RX作为 系统的打印信息输出接口 和 数据收发口，而UART1只有TX，作为 打印信息输出接口（调试用）。</p><img src="/posts/2903904808/ec1a70a225ff97bc1de4633ce6ffdedb.png" class="" title="img"><h2 id="总体介绍"><a href="#总体介绍" class="headerlink" title="总体介绍"></a>总体介绍</h2><p>ESP8266 有 2 组 UART 口，分别为 UART0 和 UART1。<br>默认 UART0 主要是用做固件下载和程序日志输出<br>而 UART1 因为只支持 TX，所以一般在需要 UART 用于通讯时，建议用 UART1 来输出日志信息。<strong>参见<a href="https://www.espressif.com/sites/default/files/documentation/0a-esp8266ex_datasheet_cn.pdf">《ESP8266 技术规格书》</a>说</strong>明。</p><img src="/posts/2903904808/a7e7fdcb279c4085cca5d4086f17488b.png" class="" title="总体介绍"><h1 id="UART0接收"><a href="#UART0接收" class="headerlink" title="UART0接收"></a>UART0接收</h1><img src="/posts/2903904808/f09198008a1ee8f58024a8a8021d67d7.png" class="" title="img"><img src="/posts/2903904808/750c737d6e8e34993877c6ded868572d.png" class="" title="img"><img src="/posts/2903904808/d7d180d3abe4fe1dd393e70442b4fa4a.png" class="" title="img"><h2 id="加入代码"><a href="#加入代码" class="headerlink" title="加入代码"></a>加入代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * INCLUDES</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/queue.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/uart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_log.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;board_uart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">uartEventTask</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * LOCAL VARIABLES</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> QueueHandle_t s_uart0Queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> *TAG = <span class="string">&quot;board_uart&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * PUBLIC FUNCTIONS</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> @brief 串口驱动初始化</span></span><br><span class="line"><span class="comment"> @param 无</span></span><br><span class="line"><span class="comment"> @return 无</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Configure parameters of an UART driver,</span></span><br><span class="line">    <span class="comment">// communication pins and install the driver</span></span><br><span class="line">    <span class="keyword">uart_config_t</span> uart_config = </span><br><span class="line">&#123;</span><br><span class="line">        .baud_rate = <span class="number">115200</span>,</span><br><span class="line">        .data_bits = UART_DATA_8_BITS,</span><br><span class="line">        .parity = UART_PARITY_DISABLE,</span><br><span class="line">        .stop_bits = UART_STOP_BITS_1,</span><br><span class="line">        .flow_ctrl = UART_HW_FLOWCTRL_DISABLE</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    uart_param_config(UART_NUM_0, &amp;uart_config);<span class="comment">// 配置串口0参数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Install UART driver, and get the queue.</span></span><br><span class="line">    uart_driver_install(UART_NUM_0, BUF_SIZE * <span class="number">2</span>, BUF_SIZE * <span class="number">2</span>, <span class="number">100</span>, &amp;s_uart0Queue, <span class="number">0</span>);<span class="comment">// 安装UART驱动程序</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a task to handler UART event from ISR</span></span><br><span class="line">    xTaskCreate(uartEventTask, <span class="string">&quot;uartEventTask&quot;</span>, <span class="number">2048</span>, <span class="literal">NULL</span>, <span class="number">12</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * LOCAL FUNCTIONS</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">uartEventTask</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uart_event_t</span> event;</span><br><span class="line">    <span class="keyword">uint8_t</span> *pTempBuf = (<span class="keyword">uint8_t</span> *)<span class="built_in">malloc</span>(UART_MAX_NUM_RX_BYTES);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(;;)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">// Waiting for UART event.</span></span><br><span class="line">        <span class="keyword">if</span>(xQueueReceive(s_uart0Queue, (<span class="keyword">void</span> *)&amp;event, (portTickType)portMAX_DELAY))</span><br><span class="line">&#123;</span><br><span class="line">            bzero(pTempBuf, UART_MAX_NUM_RX_BYTES);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span>(event.type)</span><br><span class="line">&#123;</span><br><span class="line">                <span class="comment">// Event of UART receving data</span></span><br><span class="line">                <span class="comment">// We&#x27;d better handler data event fast, there would be much more data events than</span></span><br><span class="line">                <span class="comment">// other types of events. If we take too much time on data event, the queue might be full.</span></span><br><span class="line">                <span class="keyword">case</span> UART_DATA:</span><br><span class="line">                    <span class="comment">// ESP_LOGI(TAG, &quot;[UART DATA]: %d&quot;, event.size);</span></span><br><span class="line">                    uart_read_bytes(UART_NUM_0, pTempBuf, event.size, portMAX_DELAY);</span><br><span class="line">                    <span class="comment">// uart_write_bytes(UART_NUM_0, (const char *)pTempBuf, event.size);</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Event of HW FIFO overflow detected</span></span><br><span class="line">                <span class="keyword">case</span> UART_FIFO_OVF:</span><br><span class="line">                    ESP_LOGI(TAG, <span class="string">&quot;hw fifo overflow&quot;</span>);</span><br><span class="line">                    <span class="comment">// If fifo overflow happened, you should consider adding flow control for your application.</span></span><br><span class="line">                    <span class="comment">// The ISR has already reset the rx FIFO,</span></span><br><span class="line">                    <span class="comment">// As an example, we directly flush the rx buffer here in order to read more data.</span></span><br><span class="line">                    uart_flush_input(UART_NUM_0);</span><br><span class="line">                    xQueueReset(s_uart0Queue);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Event of UART ring buffer full</span></span><br><span class="line">                <span class="keyword">case</span> UART_BUFFER_FULL:</span><br><span class="line">                    ESP_LOGI(TAG, <span class="string">&quot;ring buffer full&quot;</span>);</span><br><span class="line">                    <span class="comment">// If buffer full happened, you should consider encreasing your buffer size</span></span><br><span class="line">                    <span class="comment">// As an example, we directly flush the rx buffer here in order to read more data.</span></span><br><span class="line">                    uart_flush_input(UART_NUM_0);</span><br><span class="line">                    xQueueReset(s_uart0Queue);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> UART_PARITY_ERR:</span><br><span class="line">                    ESP_LOGI(TAG, <span class="string">&quot;uart parity error&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Event of UART frame error</span></span><br><span class="line">                <span class="keyword">case</span> UART_FRAME_ERR:</span><br><span class="line">                    ESP_LOGI(TAG, <span class="string">&quot;uart frame error&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Others</span></span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    ESP_LOGI(TAG, <span class="string">&quot;uart event type: %d&quot;</span>, event.type);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(pTempBuf);</span><br><span class="line">    pTempBuf = <span class="literal">NULL</span>;</span><br><span class="line">    vTaskDelete(<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************************END OF FILE****************************************************/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h2><p><strong>①串口初始化</strong><br><code>UART_Init(); // 设置串口0</code><br><strong>②串口中断处理</strong><br><code>uartEventTask(void *pvParameters); // 串口事件处理函数</code></p><p>主要修改下面这个函数<br><code>在 case UART_DATA 中使用 uart_read_bytes 读出数据然后进行处理</code></p><h1 id="UART0发送"><a href="#UART0发送" class="headerlink" title="UART0发送"></a>UART0发送</h1><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><img src="/posts/2903904808/a8cd36f4ce079dc7271d7de7b63026f0.png" class="" title="img"><h2 id="使用流程-1"><a href="#使用流程-1" class="headerlink" title="使用流程"></a>使用流程</h2><p><strong>①串口初始化</strong><br><code>UART_Init(); // 设置串口0</code><br><strong>②串口发送数据</strong><br><code>uart_write_bytes(uart_port_t uart_num, const char *src, size_t size); // UART0 发送数据函数</code></p><h1 id="UART1打印日志"><a href="#UART1打印日志" class="headerlink" title="UART1打印日志"></a>UART1打印日志</h1><p>在 ESP8266_RTOS_SDK-3.2 中任何例程中输入make menuconfig<br>选择 Component config</p><img src="/posts/2903904808/bbe7b1824f204485bfa58a2eead9ece2.png" class="" title="img"><p>选择 <code>Common ESP-related</code></p><img src="/posts/2903904808/40205e9f607987fced5eeb9f959c2c2e.png" class="" title="img"><p>选择 <code>UART for console output</code></p><img src="/posts/2903904808/4e4c9d8b2367f03774635ef538ee1f0d.png" class="" title="img"><p>从默认串口0改为 <code>Customon</code></p><img src="/posts/2903904808/7b2e928f1858f46a77c6ec840b2ce24f.png" class="" title="img"><p>选择 <code>UART peripheral to use for console output</code> 改为 <code>UART1</code> 输出</p><img src="/posts/2903904808/22e69e10b8e47b64533a32a9db3d22e8.png" class="" title="img"><h1 id="基本使用说明"><a href="#基本使用说明" class="headerlink" title="基本使用说明"></a>基本使用说明</h1><h2 id="ESP8266-下载串口（UART）"><a href="#ESP8266-下载串口（UART）" class="headerlink" title="ESP8266 下载串口（UART）"></a>ESP8266 下载串口（UART）</h2><ul><li><strong>ESP8266 只能通过 UART0（GPIO1 和 GPIO3）来下载固件，下载管脚不可更改。</strong></li><li><strong>请参见“<a href="https://blog.csdn.net/Marchtwentytwo/article/details/117302312">ESP8266 固件烧录需满足的硬件环境</a>” 说明。</strong></li></ul><h2 id="2-ESP8266-日志输出串口（UART）"><a href="#2-ESP8266-日志输出串口（UART）" class="headerlink" title="2 ESP8266 日志输出串口（UART）"></a>2 ESP8266 日志输出串口（UART）</h2><ul><li><strong>ESP8266 软件中默认使用的是 UART0 来输出程序日志。</strong></li><li><strong>ESP8266 芯片上电启动的 一级 bootloader 的输出日志的串口波特率为 <code>74880 bps</code> （此波特率不可更改），使用的是外部 <code>26MHz</code> 的芯片启振晶振。请参考 “<a href="https://github.com/espressif/ESP8266_RTOS_SDK/blob/e9516e4c106fb6888e2ce4a15c027f13b650e1b0/components/bootloader_support/src/bootloader_init.c#L559">ESP8266_RTOS_SDK&#x2F;components&#x2F;bootloader_support&#x2F;src&#x2F;bootloader_init.c</a>” 说明。</strong></li><li><strong>ESP8266 的程序运行输出日志默认使用的串口波特率为 <code>74480 bps</code>，使用的是 SPI Speed 的 <code>40MHz</code> 的晶振，与 CPU 主频有关。可在 menuconfig 中进行修改，如下：</strong><br><strong><code>menuconfig —&gt; Component config —&gt; Common ESP-related —&gt; UART console baud rate</code></strong></li></ul><img src="/posts/2903904808/301d2b9b1e578f211ca1479588444821.png" class="" title="在这里插入图片描述"><p><strong>默认设置范围是 <code>1200 bps ~ 4M bps</code> ，如下：</strong></p><img src="/posts/2903904808/39b5062994946505835c13dd8a22c218.png" class="" title="在这里插入图片描述"><h2 id="目前屏蔽-UART0-的日志输出方式有两种："><a href="#目前屏蔽-UART0-的日志输出方式有两种：" class="headerlink" title="目前屏蔽 UART0 的日志输出方式有两种："></a>目前屏蔽 UART0 的日志输出方式有两种：</h2><h3 id="①-通过调用相关-API-来屏蔽-UART0-的日志输出："><a href="#①-通过调用相关-API-来屏蔽-UART0-的日志输出：" class="headerlink" title="① 通过调用相关 API 来屏蔽 UART0 的日志输出："></a>① <strong>通过调用相关 API 来屏蔽 UART0 的日志输出：</strong></h3><ul><li><strong>只屏蔽应用层的打印，调用 UART_SetPrintPort(UART1) 或者 system_uart_swap() 函数就可以了。</strong></li><li><strong>屏蔽掉所有信息（从 boot 启动阶段就开始屏蔽掉），调用system_uart_swap() 函数，同时要在硬件上做修改，具体的原理可参考<a href="https://www.espressif.com/sites/default/files/documentation/esp8266-technical_reference_cn.pdf">《ESP8266 技术参考手册》</a> <code>page 88~89</code>。注意：<code>system_uart_swap()</code> 函数屏蔽的是通过 GPIO13 和 GPIO15 来作为串口输出的 log 。</strong></li></ul><img src="/posts/2903904808/94e733d097b3c1538c0264070d800a4f.png" class="" title="在这里插入图片描述"><h3 id="②-通过-menuconfig-配置端可关闭的日志如下："><a href="#②-通过-menuconfig-配置端可关闭的日志如下：" class="headerlink" title="② 通过 menuconfig 配置端可关闭的日志如下："></a>② 通过 menuconfig 配置端可关闭的日志如下：</h3><ul><li><p><strong>关闭 Bootloader 日志：</strong></p><blockquote><p><strong>menuconfig -&gt; bootloader config –&gt; bootloader log verbosity 选定为 No output 。</strong></p></blockquote></li><li><p><strong>关闭程序运行日志：</strong></p><blockquote><p><strong>menuconfig -&gt; Component config –&gt; log output –&gt; Default log verbosity 选定为 No output 。</strong></p></blockquote></li><li><p><strong>关闭其他日志输出：</strong></p><blockquote><p><strong>menuconfig -&gt; Component Config -&gt;Common ESP-related -&gt; Channel for console output -&gt; None 。</strong></p></blockquote></li></ul><p><strong>更换程序日志输出串口为 UART1：</strong></p><blockquote><p><strong>menuconfig -&gt; Component Config -&gt;Common ESP-related -&gt; Channel for console output -&gt; Custom UART -&gt; UART peripheral to use for console output(0-1) -&gt; UART1。</strong></p></blockquote><h2 id="3-ESP8266-串口（UART）通信（这里解决了接收发送问题）"><a href="#3-ESP8266-串口（UART）通信（这里解决了接收发送问题）" class="headerlink" title="3 ESP8266 串口（UART）通信（这里解决了接收发送问题）"></a>3 ESP8266 串口（UART）通信（这里解决了接收发送问题）</h2><p><strong>参考资料：</strong></p><ul><li><p><strong><a href="https://www.espressif.com/sites/default/files/documentation/esp8266-technical_reference_cn.pdf">《ESP8266 技术参考手册》</a> 中的 “<code>UART 接⼝说明</code>” 章节：描述 UART 的功能、硬件资源、参数配置、配置中断、中断处理函数示例流程、屏蔽上电打印。</strong></p></li><li><p><strong><a href="https://espressif-docs.readthedocs-hosted.com/projects/esp8266-rtos-sdk/en/release-v3.4/api-reference/peripherals/uart.html?highlight=uart#uart">ESP8266 UART API Reference</a></strong></p></li><li><p><strong>ESP8266 在上电时候，UART0 默认会输出⼀些打印信息，如果对此敏感的应⽤，可以使用 UART 的内部引脚交换功能，在初始化的时候，将 U0TXD、U0RXD 分别与 U<code>0RTS（GPIO15）、 U0CTS（GPIO13）</code> 交换来与 MCU 进行 UART 通信。可参考<a href="https://www.espressif.com/sites/default/files/documentation/esp8266-technical_reference_cn.pdf">《ESP8266 技术参考手册》</a> &#96;page 88~89</strong></p></li><li><p><strong>通过 UART0 的 U0RTS（GPIO15）、 U0CTS（GPIO13） 管脚交换来实现 ESP8266 与其他芯片的 UART 通信时，交换管脚 MTDO（GPIO15）作为 TXD 、MTCK（GPIO13）作为 RXD 。</strong></p></li></ul><img src="/posts/2903904808/685ed71072d57c93398f4e75b62ded5d.png" class="" title="在这里插入图片描述"><ul><li><strong>ESP8266 通过 UART0 的 U0RTS（GPIO15）、 U0CTS（GPIO13） 管脚交换与另一个芯片的 UART 通讯时，可调用 <a href="https://docs.espressif.com/projects/esp8266-rtos-sdk/en/latest/api-reference/peripherals/uart.html?highlight=uart_enable_swap#_CPPv416uart_enable_swapv">uart_enable_swap()</a> API 来实现。参考 “<a href="https://github.com/espressif/ESP8266_RTOS_SDK/blob/911e2d7aa7eca8192e11e9525932ceec52f5662c/components/esp8266/driver/uart.c#L317">ESP8266_RTOS_SDK&#x2F;components&#x2F;esp8266&#x2F;driver&#x2F;uart.c</a>”</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">esp_err_t</span> <span class="title">uart_enable_swap</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// wait for tx done.</span></span><br><span class="line">    uart_wait_tx_done(UART_NUM_0, portMAX_DELAY);</span><br><span class="line"></span><br><span class="line">    UART_ENTER_CRITICAL();</span><br><span class="line">    <span class="comment">// MTCK -&gt; UART0_CTS -&gt; U0RXD</span></span><br><span class="line">    PIN_FUNC_SELECT(PERIPHS_IO_MUX_MTCK_U, FUNC_UART0_CTS);</span><br><span class="line">    <span class="comment">// MTD0 -&gt; UART0_RTS -&gt; U0TXD</span></span><br><span class="line">    PIN_FUNC_SELECT(PERIPHS_IO_MUX_MTDO_U, FUNC_UART0_RTS);</span><br><span class="line">    <span class="comment">// enable swap U0TXD &lt;-&gt; UART0_RTS and U0RXD &lt;-&gt; UART0_CTS</span></span><br><span class="line">    SET_PERI_REG_MASK(UART_SWAP_REG, <span class="number">0x4</span>);</span><br><span class="line">    UART_EXIT_CRITICAL();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ESP_OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>ESP8266 的 UART0 例程参考：<a href="https://github.com/espressif/ESP8266_RTOS_SDK/tree/release/v3.4/examples/peripherals">ESP8266_RTOS_SDK&#x2F;examples&#x2F;peripherals</a></strong></li></ul><p><strong>包含如下测试例程：</strong></p><ul><li><strong>通过 UART 接口将接收到的数据回传给对端设备：<a href="https://github.com/espressif/ESP8266_RTOS_SDK/tree/release/v3.4/examples/peripherals/uart_echo">peripherals&#x2F;uart_echo</a></strong></li><li><strong>通过 UART 检测接收到的不同的指令来触发对应的事件：<a href="https://github.com/espressif/ESP8266_RTOS_SDK/tree/release/v3.4/examples/peripherals/uart_events">peripherals&#x2F;uart_events</a></strong></li><li><strong>在 UART 接口上使用同步 I&#x2F;O 多路复用。UART 可作为 Monitor 打印日志，又可读写数据：<a href="https://github.com/espressif/ESP8266_RTOS_SDK/tree/release/v3.4/examples/peripherals/uart_select">peripherals&#x2F;uart_select</a></strong></li></ul><h3 id="【ESP8266-UART-通信常见应用问题】"><a href="#【ESP8266-UART-通信常见应用问题】" class="headerlink" title="【ESP8266 UART 通信常见应用问题】"></a>【ESP8266 UART 通信常见应用问题】</h3><ul><li><p><strong>ESP8266 的串⼝波特率范围是多大？</strong><br><strong>ESP8266 的串⼝波特率范围从 300 到 115200*40 都可以⽀持。参见 <a href="https://www.espressif.com/sites/default/files/documentation/esp8266-technical_reference_cn.pdf">《ESP8266 技术参考手册》</a>中的 <code>“ 11.3.1. 波特率 ”</code>章节说明。</strong></p></li><li><p><strong>ESP8266 UART 的硬件 FIFO 是多大？</strong><br><strong>ESP8266 的 UART0 和 UART1 各有⼀个⻓度为 <code>128 Bytes</code> 的硬件 FIFO，读写 FIFO 都在同⼀个地址操作。参见 <a href="https://www.espressif.com/sites/default/files/documentation/esp8266-technical_reference_cn.pdf">《ESP8266 技术参考手册》</a>中的 <code>“ 11.2. 硬件资源 ”</code>章节说明。</strong></p></li></ul><h2 id="4-ESP8266-AT-传输串口"><a href="#4-ESP8266-AT-传输串口" class="headerlink" title="4 ESP8266 AT 传输串口"></a>4 ESP8266 AT 传输串口</h2><blockquote><p><strong>参考资料：<a href="https://espressif-docs.readthedocs-hosted.com/projects/esp-at/en/release-v2.2.0.0_esp8266/index.html#esp-at-user-guide">ESP8266 ESP-AT User Guide</a></strong></p></blockquote><ul><li><strong><code>【不推荐】</code>ESP8266 V2.0.0.0 以下版本的 AT 固件默认使用的 AT 串口是 UART0 （即 GPIO1 和 GPIO3），流控引脚是 GPIO13 和 GPIO15 。可参见 <a href="https://www.espressif.com/sites/default/files/documentation/0a-esp8266ex_datasheet_cn.pdf">《ESP8266 Datasheet》</a></strong></li></ul><img src="/posts/2903904808/34be9180eecfe66a61ac039ae97844c1.png" class="" title="在这里插入图片描述"><ul><li><p><strong><code>【推荐】</code><a href="https://docs.espressif.com/projects/esp-at/en/release-v2.2.0.0_esp8266/AT_Binary_Lists/ESP8266_AT_binaries.html#esp-wroom-02-series">ESP8266 V2.0.0.0 及以上版本的 AT 固件</a>默认使用的 AT 指令传输串口是 GPIO15 和 GPIO13，流控引脚是 GPIO3 和 GPIO1 。可参见 <a href="https://github.com/espressif/esp-at/blob/release/v2.0.0.0_esp8266/components/customized_partitions/raw_data/factory_param/factory_param_data.csv">ESP-AT 出厂配置参数</a>。</strong></p></li><li><p><strong><a href="https://docs.espressif.com/projects/esp-at/en/release-v2.2.0.0_esp8266/AT_Binary_Lists/ESP8266_AT_binaries.html#esp-wroom-02-series">ESP8266 V2.0.0.0 及以上版本的 AT 固件</a>默认的串口波特率分别为：</strong></p></li></ul><p>  <strong>1. UART0 打印芯片上电启动日志，波特率为 <code>74880 bps</code>，使用的是 <code>26 MHz</code> 的芯片启振晶振；</strong></p><p>  <strong>2. GPIO15（TXD） 和 GPIO13（RXD） 为 AT 传输串口，默认波特率为 <code>115200 bps</code>，使用的是 SPI Speed 的 <code>40 MHz</code> 的晶振，与 CPU 主频有关。</strong></p><ul><li><strong>ESP8266 的 AT 指令传输串口和波特率可通过自行编译 ESP-AT 固件来修改 <a href="https://github.com/espressif/esp-at/blob/release/v2.0.0.0_esp8266/components/customized_partitions/raw_data/factory_param/factory_param_data.csv">ESP-AT 出厂配置参数</a>，可参考“<a href="https://blog.csdn.net/Marchtwentytwo/article/details/119360042">Ubuntu18.04 上 ESP8266（ESP-WROOM-02） 的 esp-at release_v2.2.0.0 编译环境搭建</a>” 说明。</strong></li></ul><h2 id="5-ESP8266-串口（UART）-性能"><a href="#5-ESP8266-串口（UART）-性能" class="headerlink" title="5 ESP8266 串口（UART） 性能"></a>5 ESP8266 串口（UART） 性能</h2><p><strong>ESP8266 的波特率硬件是可以支持到 <code>4.5 Mbps</code>, 但是不建议软件使用这么高的波特率, 原因有两点:</strong></p><ul><li><strong>接收模式下，波特率太高，大量数据传输软件可能无法及时取走硬件 FIFO 中的数据从而导致数据丢失。ESP8266 的硬件 <code>UART FIFO</code> 是 <code>128 Bytes</code> ,ESP8266 的 UART 说明你可以阅读 <a href="https://www.espressif.com/sites/default/files/documentation/esp8266-technical_reference_cn.pdf">《ESP8266 技术参考手册》</a> ，建议波特率不要超过 <code>2 Mbps</code>。如果系统有很多中断或有使用 Wi-Fi，该值需要低一点，以证数据不会丢失。</strong></li><li><strong>有些串口芯片无法支持这么高的波特率，或者 ESP8266 波特率误差超过串口芯片允许的误差范围，因为当波特率不能被 ESP8266 串口模块时钟(<code>80 MHz</code>)整除的时候，就存在误差。</strong></li></ul><p><strong>当 UART 波特率过高导致接收数据丢失时，我们的建议：</strong></p><ul><li><strong>增加 UART 硬件流控</strong></li><li><strong>降低 UART 波特率</strong></li></ul><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_36347513/article/details/105864939">ESP8266学习笔记（21）——UART串口使用（RTOS SDK）</a></li><li><a href="https://blog.csdn.net/Marchtwentytwo/article/details/122776296">ESP8266 的串口（UART）使用</a></li><li><a href="https://blog.csdn.net/qq_38410730/article/details/86538288">【常用模块】ESP8266 WIFI串口通信模块使用详解（实例：附STM32详细代码）</a></li><li><a href="https://gitcode.com/gh_mirrors/es/ESP8266_RTOS_SDK/tree/911e2d7aa7eca8192e11e9525932ceec52f5662c">ESP8266_RTOS_SDK</a></li><li><a href="https://blog.csdn.net/qq_34877257/article/details/133962332">ESP8266串口的使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP8266如何使用内部的UART0实现串口通讯</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="UART" scheme="https://zml3589110.github.io/categories/UART/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="UART" scheme="https://zml3589110.github.io/tags/UART/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP01S" scheme="https://zml3589110.github.io/tags/ESP01S/"/>
    
    <category term="串口通讯" scheme="https://zml3589110.github.io/tags/%E4%B8%B2%E5%8F%A3%E9%80%9A%E8%AE%AF/"/>
    
    <category term="管脚交换" scheme="https://zml3589110.github.io/tags/%E7%AE%A1%E8%84%9A%E4%BA%A4%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>合并hex文件</title>
    <link href="https://zml3589110.github.io/posts/1164397684.html"/>
    <id>https://zml3589110.github.io/posts/1164397684.html</id>
    <published>2024-11-02T08:49:20.000Z</published>
    <updated>2024-11-02T09:10:06.861Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>最近研究 STM32 芯片的 IAP 升级，这个能将在第一次下载完整 BootLoader 和 app 的 bin 文件</p><h1 id="合并步骤"><a href="#合并步骤" class="headerlink" title="合并步骤"></a>合并步骤</h1><p>福利来了 — 合并hex文件。以前在网上找了好久都没有可以合并hex好用的工具。这次我分享给大家个好用的。<br>工具是百度手环开源的东东。<br>经过修改，可以完美的把两个hex文件合并成一个了！<br>将app和bootloader合并后再烧录真是方便啊。</p><p>双击merge_hex.bat文件，合并后的文件是firmware.hex。<br>需要合并的hex文件放在hex文件夹下：分别命名为：<br>app.hex<br>sn.hex<br>名字可以自行修改（merge_hex.bat里的要随着修改就行了）<br>拿走，不谢。</p><p>解释下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">::关<span class="built_in">echo</span></span><br><span class="line">merge\mergehex.exe --merge hex\app.hex         hex\sn.hex         --output firmware.hex</span><br><span class="line">::合并hex文件，可以合并超大的hex文件。亲试300k合并没有问题。</span><br><span class="line">del hex\withoutsn.hex/s</span><br><span class="line">::删除中间临时文件</span><br><span class="line"><span class="comment">#pause</span></span><br><span class="line"></span><br><span class="line">::任意键退出，加<span class="comment">#屏蔽了这句，如果不能生成hex文件，那么可以打开这句看看有无错误提示。</span></span><br></pre></td></tr></table></figure><p><a href="http://www.openedv.com/forum.php?mod=attachment&aid=NDgwMzl8MDk3NmNmOTV8MTczMDUzNjc5MXwzMTU4MjR8NzAxNjI=">hex合并.rar</a></p><hr><p>注意app.hex和sn.hex编译生成时的起始地址不能一样。<br>比如app–0x8000000开始，<br>sn–0x800C000开始。<br>如果是bootloader和app的话。建议：<br>bootloader—0x8000000<br>app—0x8002000<br>merge\mergehex.exe –merge hex\bootloader.hex         hex\app.hex         –output firmware.hex<br>以上是STM32F10x为例。（M3内核）</p><hr><p>我是用JFLASH合并的，先用JFLASH将bootloader和APP的bin文件合并，然后用JFLASH将合并后的bin文件另存为hex文件，不需要手动修改hex合并文件的地址</p><hr><p>我以前也是用jflash来进行合并，感觉太麻烦了还容易出错。<br>还是用批处理方便，这个是傻瓜式的哦。^_^</p><h1 id="升级版处理–-合并hex文件-IAP专用工具"><a href="#升级版处理–-合并hex文件-IAP专用工具" class="headerlink" title="升级版处理– 合并hex文件 IAP专用工具"></a>升级版处理– 合并hex文件 IAP专用工具</h1><p>这次整理了下，比之前的好用些。<br>批处理文件是我自己写的</p><p>工程地址说明</p><p><strong>STM32</strong></p><blockquote><p>app</p></blockquote><img src="/posts/1164397684/app.jpg" class="" title="app"><blockquote><p>bootloader</p></blockquote><img src="/posts/1164397684/bootloader.jpg" class="" title="bootloader"><p><strong>STM8</strong></p><blockquote><p>app</p></blockquote><img src="/posts/1164397684/app.png" class="" title="app"><blockquote><p>bootloader</p></blockquote><img src="/posts/1164397684/bootloader.png" class="" title="bootloader"><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="http://www.openedv.com/thread-70162-1-1.html">福利来了 — 合并hex文件</a></li><li><a href="http://www.openedv.com/forum.php?mod=viewthread&tid=76644">合并hex文件 IAP专用工具</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">合并hex文件-将 BootLoader 和 app 的 hex 合并起来，方便第一次下载</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="hex" scheme="https://zml3589110.github.io/categories/hex/"/>
    
    <category term="IAP" scheme="https://zml3589110.github.io/categories/IAP/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="IAP" scheme="https://zml3589110.github.io/tags/IAP/"/>
    
    <category term="YMODEM" scheme="https://zml3589110.github.io/tags/YMODEM/"/>
    
    <category term="hex" scheme="https://zml3589110.github.io/tags/hex/"/>
    
    <category term="bin" scheme="https://zml3589110.github.io/tags/bin/"/>
    
    <category term="BootLoader" scheme="https://zml3589110.github.io/tags/BootLoader/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>IAP+YMODEM+CRC16+AES256+PC端软件+hex合并</title>
    <link href="https://zml3589110.github.io/posts/1432338086.html"/>
    <id>https://zml3589110.github.io/posts/1432338086.html</id>
    <published>2024-11-02T08:14:20.000Z</published>
    <updated>2024-11-02T09:10:07.261Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>最近研究 STM32 芯片的 IAP 升级，找到这文章，</p><p>后边 PC端软件设置的时候根据自己文章 <strong>“1. Csharp算法之AES实现”</strong> 补充即可得到 bin<br>其他IAP还没测验–20241102</p><h1 id="需求及基础"><a href="#需求及基础" class="headerlink" title="需求及基础"></a>需求及基础</h1><p>由于项目需要，花时间研究了一下有关IAP的知识，虽然在原子哥的教程中有讲到关于IAP，但是实际项目中并不会那样使用，也不会使用串口直接不通过协议传输文件，但是原子哥的教程很好的讲明白了IAP的思路以及实现的方法，至于细节部分就是我开贴的原因，希望能多把这种实际项目一定会用到的知识为大家所知，一下代码使用的平台是STM32F0，改成F1&#x2F;F4也很简单，可根据自己情况修改</p><h2 id="IAP："><a href="#IAP：" class="headerlink" title="IAP："></a>IAP：</h2><p>学习IAP之前建议大家先看看原子哥的教程了解一下大概，知道IAP的作用以及实现，下面提供一个网址( <a href="http://www.openedv.com/posts/list/11494.htm">http://www.openedv.com/posts/list/11494.htm</a>) ，是原子哥的IAP文字教程，看完后起码按照教程顺序下来实现串口升级代码了，但是教程中有个跳转至中断向量表的知识点我觉得可能存在问题，我也发帖询问过，但是没有得到解答，以下是我的提问帖，希望能得到答复<br>( <a href="http://www.openedv.com/forum.php?mod=viewthread&amp;tid=75843">http://www.openedv.com/forum.php?mod=viewthread&amp;tid=75843</a>)</p><h2 id="YMODEM："><a href="#YMODEM：" class="headerlink" title="YMODEM："></a>YMODEM：</h2><p>Ymodem的知识简介自己百度一下吧，<br><a href="http://baike.baidu.com/link?url=Z7sLoTcGJjKH580EUmlnqTFIZnPYUM4IH-Tj-TMYVOy7vOmp7L_J5E5ADX8O97rHLvjX-AVM6LAPkslPUvV6qK">传送门</a></p><p>原子哥采用的是串口直传升级文件，显然在实际项目我们一般不会那么做，因为可能传输出现错误，需要采取些容错、重发和校验等一些措施来避免传输错误，原本有考虑自己写这个协议来实现文件传输，但是上ST官网一查，已经有了现成的YMODEM+CRC16的代码，所以没多想，直接移植过来好了，也许就是所谓的傻瓜式编程了。但是我觉得去了解YMODEM协议是如何实现的对自己技术水平的提高有很大的帮助，在遇到移植出错时起码知道从哪里下手修改代码，官方找来的IAP+Ymodem的代码在附件中，需要的可以自行下载查看。</p><p>这里主要讲解一下几个重要的函数，其中主要有menu.c &#x2F;ymodem.c &#x2F; flash_if.c &#x2F; common.c 这几个头文件，<br>menu.c主要实现的是调用ymodem协议的接口然后对传输是否成功以及传输文件的大小名字做一些显示，<br>最关键还是ymodem.c，实现通过ymodem协议发送和接收文件，<br>其中作为接收一方，我们只用到</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ymodem_Receive(<span class="keyword">uint8_t</span> *buf)</span><br></pre></td></tr></table></figure><p>这个函数，其中buf是将接收到的1024字节通过ymodem协议接收下来存到缓存buf里面，每传送完成1024字节就写入一次FLASH，这样只需要开辟一个1024字节的缓存就可以实现升级了，而不需要开辟一个很大的数组存储所有代码，没必要浪费那么大一片存储空间，这就是边写边存的好处，</p><p>在源码中flash_if.c主要就是对flash的操作了，里面有个FLASH_If_Write函数很好的实现了这个功能，<br>而common.c里面就是现实些整数和字符串的转换和串口发送。把这个协议移植到自己代码中的时候还是跳了不少坑的，官方的东西有时候也不一定靠谱，</p><p>我发现我ymodem接收数据后写入flash的时候总是写入错误，写入flash指定地址后从同个地址读出那个值做二次判断的时候居然不同，我使用的是电脑的超级终端，win7网上可以随便下载得到，XP有自带。</p><p>这个软件我也会添加到下面的附件当中，里面集成了各种文件传输协议，其中就有ymodem，只要将代码生成bin文件后直接通过ymodem发送出去，然后串口收到的数据通过官方的这段代码就直接能用了。回到话题，写入flash总是出错，后面经过debug发现官方在写flash之前居然不解锁和上锁！不解锁和上锁！！！后面我在写入前加了解锁，写入后上锁，写入错误这个bug就没了，但是还有个问题官方处理的不太严谨，<br>就是代码文件是否写入完成不是按照文件的大小来判断的，而是通过设定的代码区flash大小来决定的，所以我修改了一些代码，在往flash写入数据的时候判断是否已经把整个文件写完了，</p><p>由于ymodem协议传输文件时首先会传递文件的大小的一些信息，所以这个文件的大小通过第一个包就可以获取到了，<br>修改的是“FLASH_If_Write”这个函数，可以对比查看，另外官方在写入前会将要写入的那个flash地址先擦除一遍，但是也没有先解锁再上锁的操作，这个地方我也加上了，我会将我修改后ymodem协议添加到附件中，官方的我也会给在附件中，需要的可以自己查看这个函数的区别。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ymodem_Receive (<span class="keyword">uint8_t</span> *buf)</span><br></pre></td></tr></table></figure><p>在官方例程中还需要修改一个串口发送和接收函数(在commo.h中)，官方的代码的串口发送这样的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SerialPutChar</span><span class="params">(<span class="keyword">uint8_t</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  USART_SendData(EVAL_COM1, c);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">while</span> (USART_GetFlagStatus(EVAL_COM1, USART_FLAG_TXE) == RESET)</span><br><span class="line">  &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//改成如下：串口几可以根据自己的情况修改</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SerialPutChar</span><span class="params">(<span class="keyword">uint8_t</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  USART_SendData(USART1, c);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">while</span> (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET)</span><br><span class="line">  &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//官方的串口接收如下：</span></span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">SerialKeyPressed</span><span class="params">(<span class="keyword">uint8_t</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( USART_GetFlagStatus(EVAL_COM1, USART_FLAG_RXNE) != RESET)</span><br><span class="line">  &#123;</span><br><span class="line">    *key = USART_ReceiveData(EVAL_COM1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//改成：</span></span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">SerialKeyPressed</span><span class="params">(<span class="keyword">uint8_t</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( USART_GetFlagStatus(USART1, USART_FLAG_RXNE) != RESET)</span><br><span class="line">  &#123;</span><br><span class="line">    *key = USART_ReceiveData(USART1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在程序中我使用的升级方式是通过串口发送字符‘1’(可自行修改)，<br>串口收到字符‘1’后，向指定的地址写入0xAAAA，然后使用软复位回到bootloader，bootloader中判断那个地址是不是0xAAAA，<br>如果是则升级，升级完成后擦除这个地址的flash内容跳到APP，<br>如果不是则跳直接回到APP执行，由于升级不可能频繁升，所以这里不用担心把falsh擦写坏。</p><h2 id="AES256-PC软件："><a href="#AES256-PC软件：" class="headerlink" title="AES256+PC软件："></a>AES256+PC软件：</h2><p>完成ymodem协议传输代码后紧接着又有一个问题了，以往的代码中如果不需要用到升级功能我们会加上读保护，保证有一层明锁，不至于能直接读出代码，但是一旦有了APP和bootloader，虽然你代码还是能加上读保护，但是当APP变成一个bin文件给到客户升级的时候如果你不进行加密，很容易就给别人读出来，所以APP就要想办法再给到客户的时候又不至于那么容易让他破解，因此需要采用代码加密，AES是目前最流行的加密算法之一，破解也有一定的难度，<br>关于AES的介绍看<a href="https://blog.csdn.net/weixin_44565944/article/details/108679381">传送门</a></p><p>对代码加密有更加严格需求，想加暗锁的可以看下坛友写的一些方法<br>传送门-》<a href="http://www.openedv.com/thread-64685-1-1.html">关于暗锁</a></p><p>一开始也是想自己写AES来着，研究了网上的很多资料，偏理论性的东西实在太多了，后面找到了一个动图，可以很清晰的了解每个加密过程，看了后感觉茅塞顿开，动图贴附件中，需要自己写AES的可以根据这个动图来写。AES分加密和解密两个步奏，了解了原理以后偷懒上网查了一下有没现成的可以用，几次查找后发现了个好东西，如果自己写的话首先需要写解密到MCU上，然后PC需要自己写个软件来对bin进行加密，这份资料已经做完了这些，我只需要直接拿来用就好了，使用的是AES256，</p><p>想想也没那么简单，拿来就能直接用？作者提供MCU端AES算法倒是没问题，问题在PC端软件根本用不了，下载了他的软件后用VS编译器调试了下，发现作者不是纯用C#，界面用C#写的，AES的实现用C写的，用C代码生成dll给C#调用，问题就出现这个dll，不知道什么原因总之调用这个dll就报错，后面我重新将这部分C代码重新生成一个dll软件把平台改成X86后就可以正常使用了，接着只要将生成的hex文件导入这个软件，写入AES密匙后会自动生成一个加密后的代码，接着通过Ymodem传输给MCU，MCU边接收别解密，解密后写入flash，<br>这个作者的<a href="(http://www.amobbs.com/thread-5069186-1-1.html)">原网址</a></p><p><strong>注意：这个问题自己解决了（放在文章 “Csharp算法之AES实现” 里）</strong></p><p>他给的文件包无法直接用，我给的文件包估计也没法在你们的电脑上上直接用，所以只能用你们自己用电脑将C代码生成dll才能正常用了，怎么把C代码生成dll给C#调用，这个百度一大把，很容易(底下有教程，需要VS环境)。</p><p>下面是我加了AES的yemodem接收代码，由于是之前写的，现在只加了一些关键备注，附件中的源代码都有注释，这里截取关键的发出来</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int32_t</span> <span class="title">Ymodem_Receive</span> <span class="params">(<span class="keyword">uint8_t</span> *buf)</span></span></span><br><span class="line"><span class="function"></span>&#123;                    <span class="comment">//1024 + 5</span></span><br><span class="line">        <span class="keyword">uint8_t</span> bufferOut[<span class="number">16</span>]=&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;;</span><br><span class="line">  <span class="keyword">uint8_t</span> packet_data[PACKET_1K_SIZE + PACKET_OVERHEAD], file_size[FILE_SIZE_LENGTH], *file_ptr, *buf_ptr;</span><br><span class="line">  <span class="keyword">uint8_t</span> *BufferIn;</span><br><span class="line">        <span class="keyword">int32_t</span> i, j, packet_length, session_done, file_done, packets_received, errors, session_begin, size = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">uint32_t</span> flashdestination, ramsource;</span><br><span class="line"> </span><br><span class="line">        aesDecInit();<span class="comment">//AES解密初始化</span></span><br><span class="line">        </span><br><span class="line">  <span class="comment">/* Initialize flashdestination variable */</span></span><br><span class="line">  flashdestination = APPLICATION_ADDRESS; <span class="comment">//APP代码的起始地址,APPLICATION_ADDRESS = 0x8005000,可在target界面根据情况设置</span></span><br><span class="line">                                           <span class="comment">//这些都在ymodem.h里面的宏进行设置</span></span><br><span class="line"> </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (session_done = <span class="number">0</span>, errors = <span class="number">0</span>, session_begin = <span class="number">0</span>; ;)<span class="comment">//死循环直至文件数据包全部发送完成</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (packets_received = <span class="number">0</span>, file_done = <span class="number">0</span>, buf_ptr = buf; ;)</span><br><span class="line">    &#123;</span><br><span class="line">                        </span><br><span class="line">      <span class="keyword">switch</span> (Receive_Packet(packet_data, &amp;packet_length, NAK_TIMEOUT))</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//成功接收到1K</span></span><br><span class="line">          errors = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">switch</span> (packet_length)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="comment">/* Abort by sender */</span></span><br><span class="line">            <span class="keyword">case</span> - <span class="number">1</span>:  <span class="comment">//接收失败</span></span><br><span class="line">              Send_Byte(ACK);  <span class="comment">//回复</span></span><br><span class="line">              <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="comment">/* End of transmission */</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">              Send_Byte(ACK);<span class="comment">//回复</span></span><br><span class="line">              file_done = <span class="number">1</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">/* Normal packet */</span></span><br><span class="line">            <span class="keyword">default</span>:   <span class="comment">//接收成功</span></span><br><span class="line">              <span class="keyword">if</span> ((packet_data[PACKET_SEQNO_INDEX] &amp; <span class="number">0xff</span>) != (packets_received &amp; <span class="number">0xff</span>))</span><br><span class="line">              &#123;<span class="comment">//序号00(文件名)</span></span><br><span class="line">                Send_Byte(NAK);</span><br><span class="line">                                                                </span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">if</span> (packets_received == <span class="number">0</span>)<span class="comment">//文件名(首包)</span></span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="comment">/* Filename packet */</span></span><br><span class="line">                  <span class="keyword">if</span> (packet_data[PACKET_HEADER] != <span class="number">0</span>)<span class="comment">//文件名字</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="comment">/* Filename packet has valid data */</span></span><br><span class="line">                    <span class="keyword">for</span> (i = <span class="number">0</span>, file_ptr = packet_data + PACKET_HEADER; (*file_ptr != <span class="number">0</span>) &amp;&amp; (i &lt; FILE_NAME_LENGTH);)</span><br><span class="line">                    &#123;</span><br><span class="line">                      FileName[i++] = *file_ptr++;<span class="comment">//保存文件名</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    FileName[i++] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//字符串形式</span></span><br><span class="line">                    <span class="keyword">for</span> (i = <span class="number">0</span>, file_ptr ++; (*file_ptr != <span class="string">&#x27; &#x27;</span>) &amp;&amp; (i &lt; (FILE_SIZE_LENGTH - <span class="number">1</span>));)</span><br><span class="line">                    &#123;</span><br><span class="line">                      file_size[i++] = *file_ptr++;<span class="comment">//文件大小</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    file_size[i++] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                    Str2Int(file_size, &amp;size);<span class="comment">//Convert a string to an integer</span></span><br><span class="line"> </span><br><span class="line">                    <span class="comment">/* Test the size of the image to be sent */</span></span><br><span class="line">                    <span class="comment">/* Image size is greater than Flash size */</span></span><br><span class="line">                    <span class="keyword">if</span> (size &gt; (USER_FLASH_SIZE + <span class="number">1</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="comment">/* End session */</span></span><br><span class="line">                      Send_Byte(CA);</span><br><span class="line">                      Send_Byte(CA);</span><br><span class="line">                      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">/* erase user application area */</span></span><br><span class="line">                                                                                FLASH_Unlock();                                                <span class="comment">//解锁</span></span><br><span class="line">                    FLASH_If_Erase(APPLICATION_ADDRESS);<span class="comment">//This function does an erase of all user flash area</span></span><br><span class="line">                                                                                FLASH_Lock();             <span class="comment">//上锁</span></span><br><span class="line">                                                                                </span><br><span class="line">                                                                                Send_Byte(ACK);</span><br><span class="line">                                                                                Send_Byte(CRC16);</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="comment">/* Filename packet is empty, end session */</span></span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    Send_Byte(ACK);</span><br><span class="line">                    file_done = <span class="number">1</span>;</span><br><span class="line">                    session_done = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">/* Data packet */</span></span><br><span class="line">                <span class="keyword">else</span>  <span class="comment">//文件信息保存完后开始接收数据</span></span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="built_in">memcpy</span>(buf_ptr, packet_data + PACKET_HEADER, packet_length);</span><br><span class="line">                                                                        </span><br><span class="line">                                                                        <span class="comment">/*----------------------------------------------------------------------------------------------*/</span></span><br><span class="line">                                                                        BufferIn=buf;</span><br><span class="line">                                                                        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; packet_length; j += <span class="number">16</span>) <span class="comment">//每次解密16字节</span></span><br><span class="line">                                                                        &#123;</span><br><span class="line">                                                                                <span class="comment">//解密数据包</span></span><br><span class="line">                                                                                aesDecrypt(BufferIn,bufferOut); <span class="comment">//由于参数使用的是指针,所以解密后依旧存在buf里面</span></span><br><span class="line">                                                                                BufferIn+=<span class="number">16</span>;</span><br><span class="line">                                                                        &#125;</span><br><span class="line">                                                                        <span class="comment">/*----------------------------------------------------------------------------------------------*/</span></span><br><span class="line">                                                                </span><br><span class="line">                  ramsource = (<span class="keyword">uint32_t</span>)buf;</span><br><span class="line">                  </span><br><span class="line">                  <span class="comment">/* Write received data in Flash */</span>                                   <span class="comment">//这个size参数是自己加进入的,便于判断文件传输完成 </span></span><br><span class="line">                  <span class="keyword">if</span> (FLASH_If_Write(&amp;flashdestination, (<span class="keyword">uint32_t</span>*) ramsource, (<span class="keyword">uint16_t</span>) packet_length/<span class="number">4</span>, size)  == <span class="number">0</span>)</span><br><span class="line">                  &#123;<span class="comment">//写入FLASH  </span></span><br><span class="line">                    Send_Byte(ACK);</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">else</span> <span class="comment">/* An error occurred while writing to Flash memory */</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="comment">/* End session */</span></span><br><span class="line">                    Send_Byte(CA);</span><br><span class="line">                    Send_Byte(CA);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                packets_received ++;</span><br><span class="line">                session_begin = <span class="number">1</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">          Send_Byte(CA);</span><br><span class="line">          Send_Byte(CA);</span><br><span class="line">          <span class="keyword">return</span> <span class="number">-3</span>;</span><br><span class="line">        <span class="keyword">default</span>:<span class="comment">//检验错误</span></span><br><span class="line">          <span class="keyword">if</span> (session_begin &gt; <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            errors ++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (errors &gt; MAX_ERRORS)</span><br><span class="line">          &#123;</span><br><span class="line">            Send_Byte(CA);</span><br><span class="line">            Send_Byte(CA);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          Send_Byte(CRC16); <span class="comment">//发送校验值</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">                        </span><br><span class="line">      <span class="keyword">if</span> (file_done != <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (session_done != <span class="number">0</span>) <span class="comment">//文件发送完成</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">int32_t</span>)size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Hex合并以及Hex转bin（文件在附件）"><a href="#Hex合并以及Hex转bin（文件在附件）" class="headerlink" title="Hex合并以及Hex转bin（文件在附件）"></a>Hex合并以及Hex转bin（文件在附件）</h2><p>首次下载代码时为了方便需要合并bootloader和APP的hex文件，Hex合并本论坛有人已经提供了一个很好的方法 (<a href="http://www.openedv.com/thread-70162-1-1.html">http://www.openedv.com/thread-70162-1-1.html</a>) 转成一个hex文件后通过上面那个PC软件，可以直接生成bin文件，之后通过超级终端接通串口传输过去就行了。</p><h2 id="无线方式传输"><a href="#无线方式传输" class="headerlink" title="无线方式传输"></a>无线方式传输</h2><p>我试过用电脑蓝牙传输(使用超级终端发送)，接收方也用蓝牙，可以实现升级文件的传输，<br>但是一般客户不会使用电脑蓝牙来发送，只有笔记本有，台式需要蓝牙适配器，当然使用USB转串口来实现升级也是不错的选择，但是需要个USB转串口芯片，也可以直接改修串口发送函数改成USB发送，加上USB驱动就行了。<br>综合考虑还是在产品的APP通过ymodem协议发送会比较符合现在客户的主流需求，安卓系统的我在网上有找到java现成的ymodem发送代码，但是苹果系统如果使用OC进行开发，我目前还没有找到，希望有资源的坛友能提供，下面需要java代码的ymodem协议的可以在这个网址搜  </p><p>(<a href="https://github.com/search?utf8=%E2%9C%93&q=ymodem">https://github.com/search?utf8=%E2%9C%93&q=ymodem</a>)</p><p>安卓手机也可以下载有些通用的串口助手，有些也有带ymodem协议。至于其他的无线方式也是一样的。</p><h2 id="整个升级过程分为以下步奏："><a href="#整个升级过程分为以下步奏：" class="headerlink" title="整个升级过程分为以下步奏："></a>整个升级过程分为以下步奏：</h2><ol><li><p>完成ymodem移植，修改官方ymodem串口发送以及修改flash的一些操作(操作前解锁，操作完上锁)，修改ymodem.h的宏配置，对应编译器的bootloader区和APP代码区的地址</p></li><li><p>移植aes.c的代码，添加到ymodem接收函数中</p></li><li><p>在target界面修改APP的代码区地址，写入跳回Bootloader的条件，接收到串口字符’1’后往指定地址写入0xAAAA，软复位在bootloader判断这个地址是否是0xAAAA(这个写入我是另外开辟了1Kflash专门用于存储掉电不丢失数据区，比如0xAAAA就是)，是则升级后跳回APP</p></li><li><p>修改附件提供的PC端AES256加密软件，用VS编译器重新将环境改为X86，C代码(.c文件)生成DLL供C#调用，C#代码中替换下关键字即可，如果我附件中的软件能直接用则不需要做任何修改(直接能用的概率不高)</p></li><li><p>合并两个hex文件后，通过PC软件加上16字节的密匙后自动生成bin</p></li><li><p>下载超级终端，设置为ymodem发送文件，首先发送两个字符‘1’，进入bootloader后发送文件完成升级</p></li></ol><h2 id="PC软件（参考-“Csharp算法之AES实现”-来修改）"><a href="#PC软件（参考-“Csharp算法之AES实现”-来修改）" class="headerlink" title="PC软件（参考 “Csharp算法之AES实现” 来修改）"></a>PC软件（参考 “Csharp算法之AES实现” 来修改）</h2><p><strong>刚拿到这个软件的作者(网址在上面有提到)时会出现如下报警，经修改后可以正常使用。</strong></p><img src="/posts/1432338086/eb841fbe9b67da47be5281f356d9f6bf.png" class="" title="img"><p>VS如何生成DLL文件让PC端软件能够正常使用，先根据下面这个网址操作一遍生成dll工程</p><p><a href="http://jingyan.baidu.com/article/ff411625ad116612e48237a4.html">http://jingyan.baidu.com/article/ff411625ad116612e48237a4.html</a></p><img src="/posts/1432338086/4c1081f01d790a8f006bd703c95b619b.png" class="" title="img"><img src="/posts/1432338086/e4ab66cccdafa4ffa40b43d32cf5f6d2.png" class="" title="img"><img src="/posts/1432338086/111e412fa6a540e17399dad7722d45d5.png" class="" title="img"><p><strong>注意：其实这里不用复制那么多，主要只是用到了 DLL 动态库而已</strong></p><p>接着先打开项目工程</p><img src="/posts/1432338086/2894121745846d98cff956c90ba81412.png" class="" title="img"><p>先将平台修改为X86</p><img src="/posts/1432338086/a6d957b7f9df9d12f960b7ec84dbe083.png" class="" title="img"><img src="/posts/1432338086/86979ecc3a1888a5c8d9b437dac1eb5e.png" class="" title="img"><img src="/posts/1432338086/65df58091ff285f21deae8b44b7487c3.png" class="" title="img"><p>修改完后编译一遍，可以看到多了一个x86的文件夹</p><img src="/posts/1432338086/e1e82f029bdaa77a44d2dc53ffc1c0e0.png" class="" title="img"><p>之后将Debug里面有关MYAES256的5个文件都copy到x86-&gt;debug里面，如下</p><img src="/posts/1432338086/226f687c80d7817af2c01d30e433146a.png" class="" title="img"><p>接下来要做的就是用这个“MYAES256.dl”替代作者的那个“AES256.dll”了，替换关键字</p><img src="/posts/1432338086/342644b5768bbb307c5282af87341067.png" class="" title="img"><p>修改完后编译程序，PC软件就可以正常运行了，密匙根据自己的MCU解密匙来写，如下</p><img src="/posts/1432338086/b0b13acaa8c6dd58d5b141825b915665.png" class="" title="img"><p>生成一个bin在桌面，之后用“超级终端”发送这个bin文件就可以了</p><img src="/posts/1432338086/358ad8be482e0f3d00a19afede447347.png" class="" title="img"><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://javonpeng.blog.csdn.net/article/details/102680510">IAP+YMODEM+CRC16+AES256+PC端软件+hex合并</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">IAP+YMODEM+CRC16+AES256+PC端软件+hex合并升级</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="IAP" scheme="https://zml3589110.github.io/categories/IAP/"/>
    
    <category term="YMODEM" scheme="https://zml3589110.github.io/categories/YMODEM/"/>
    
    <category term="AES256" scheme="https://zml3589110.github.io/categories/AES256/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="IAP" scheme="https://zml3589110.github.io/tags/IAP/"/>
    
    <category term="YMODEM" scheme="https://zml3589110.github.io/tags/YMODEM/"/>
    
    <category term="hex" scheme="https://zml3589110.github.io/tags/hex/"/>
    
    <category term="bin" scheme="https://zml3589110.github.io/tags/bin/"/>
    
    <category term="BootLoader" scheme="https://zml3589110.github.io/tags/BootLoader/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="CRC16" scheme="https://zml3589110.github.io/tags/CRC16/"/>
    
    <category term="AES256" scheme="https://zml3589110.github.io/tags/AES256/"/>
    
  </entry>
  
  <entry>
    <title>暗锁程序加密思路</title>
    <link href="https://zml3589110.github.io/posts/1863846554.html"/>
    <id>https://zml3589110.github.io/posts/1863846554.html</id>
    <published>2024-11-02T07:50:20.000Z</published>
    <updated>2024-11-02T09:10:06.877Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>由于最近在研究 STM32 的 IAP 升级，因此就翻到这里学习<br>根据 <a href="https://javonpeng.blog.csdn.net/article/details/102680510">IAP+YMODEM+CRC16+AES256+PC端软件+hex合并</a>进行加密下载</p><h1 id="暗锁思路"><a href="#暗锁思路" class="headerlink" title="暗锁思路"></a>暗锁思路</h1><p>程序加密的最高手法 是加明锁+暗锁 首先 有明锁 让你copy了hex 要花钱找人破解加密方法 也就是上文说的注册码，<br>如果注册码被绕过，程序不要功能异常，要功能正常 ，给出破解成功的假象<br>其次，外加一段验证程序，如果注册码被破解或者失效，那么 运行一段时间后 自杀！ 这个时间设置长一点 例如机器激活3个月或者更久。<br>再来一段程序，验证上面的验证程序，自杀日期定位机器激活后6个月</p><p>以上3道防线 1明2暗</p><p>然后通过特殊参数 按键 设置隐藏的版权声明， 版权声明不要用文字，用图片的形式存储。最好和你的固定数组，字库等混在一起。<br>例如定义一个数组，前面 后面是字库或者重要信息 中间是图的数据 之类的。</p><p>这个是用来起诉的直接证据 呵呵。</p><p>最后理想的结果是 抄袭者花钱抄你的硬件 软件，发现不能用，找人破解验证。后测试正常，投入资金生产，销售。<br>销售一段时间，他的机器集中死亡，你再去采集证据 把他告上法庭 再赔一笔。</p><p>——————————————————写在我的机器被抄后 抄袭者被我整得很惨之后——————-</p><p>–小偷不怕复杂的锁 就怕锁找不到……………………</p><h2 id="楼主-发表于-2015-12-19-09-42-53-只看该作者"><a href="#楼主-发表于-2015-12-19-09-42-53-只看该作者" class="headerlink" title="楼主| 发表于 2015-12-19 09:42:53 | 只看该作者"></a>楼主| 发表于 2015-12-19 09:42:53 | 只看该作者</h2><p> 回复【15楼】FreeRTOS:<br>我现在是通过一张SD卡来激活的 SD里面存了一个文件 那个文件的特殊字节 是用SD卡的id号+剩余字节数+文件数目+某镞的32个字节+N9条公式 组成一个128字节的加密码。<br>这样做 sd卡的文件复制到另一张 也不可以用。 sd卡就一张 我自己保存。</p><p>机器判断sd卡的特殊字节 是否符合运算规则 ，然后在用某个特殊组合键 呼出激活页面后插入sd卡 认证。</p><p>我的机器无需远程通信 所以没有通信口 呵</p><p>关键是认证不成功 也不要影响功能 也不要做出提示 。开启计数就是，计数要设置足够大起码能用3个月以上 或者半年的。计数够了直接黑屏！！（外面收钱破解的是不会花时间去解这些暗锁的)</p><p>然后再机器的某个菜单 用一个字 显示是否已经成功激活 例如某个字 激活是 “住”  没激活是 “往” 这个只有你自己知道就行。</p><h2 id="楼主-发表于-2015-12-18-09-34-46-只看该作者"><a href="#楼主-发表于-2015-12-18-09-34-46-只看该作者" class="headerlink" title="楼主| 发表于 2015-12-18 09:34:46 | 只看该作者"></a>楼主| 发表于 2015-12-18 09:34:46 | 只看该作者</h2><p>我就是在stm32上面实现的 实际基本全部单片机都能实现。主要是灵活，明暗结合。</p><p>1.用stm32 的id + n条公式  生成一个 128位的注册码   《《&#x3D;明锁</p><p>2.新机需要特殊手法激活 否则程序设置激活失败暗记 但不影响功能，但会计数 计数一段时间后 自杀 《《&#x3D;&#x3D;暗锁1</p><p>3检测这个注册码1是否生成并记录在机器里面 如果没有 也不要影响功能 还是计数 计数到达n个后 自杀</p><p>4设置隐藏版权声明以及呼出方法 。《《&#x3D;&#x3D;这个简单 呵</p><p>重点是 明锁不要多 1个就可以 直接不能开机的明锁   暗锁要多  n个 特点是不马上影响功能  但会计数 例如开关机5000次后 自杀</p><p>发表于 2015-12-18 22:05:09 | 只看该作者<br>楼主，有个问题想请教下你，你所说的第二点：</p><p>2.新机需要特殊手法激活 否则程序设置激活失败暗记 但不影响功能，但会计数 计数一段时间后 自杀 《《&#x3D;&#x3D;暗锁1</p><p>不知道你具体是怎么来激活，例如你用串口线接到PC，然后在PC利用自己的激活软件激活，但问题是如果你的激活软件被别人得到了，那别人不也一样可以拿着你的激活工具去激活你的单片机么？其实我们公司也有考虑过，因为我们的机子焊接了CDMA模块，所以可以利用远程服务器来判断CDMA模块的IMEI码是否记录在后台服务器，进而决定是否授权激活，不知道你的方法是否也跟我们的类似</p><h2 id="楼主-发表于-2015-12-18-12-56-17-只看该作者"><a href="#楼主-发表于-2015-12-18-12-56-17-只看该作者" class="headerlink" title="楼主| 发表于 2015-12-18 12:56:17 | 只看该作者"></a>楼主| 发表于 2015-12-18 12:56:17 | 只看该作者</h2><p>抄袭 </p><p>1.找人抄PCB 在淘宝 双面板几百  4层几千<br>2.找人读程序  热门cpu便宜 冷门贵  例如stm32 5000 可以把程序 hex 读出来。</p><p>如果没有加密 找人1000 把hex的logo去掉  pcb做出来烧进去即可。</p><p>和你一模一样的电路一模一样的程序 一模一样的界面 呵</p><p> 楼主| 发表于 2015-12-18 13:26:51 | 只看该作者</p><p>低级的 换个stm32就可以解决 确实，我的不行 绑定了板上的多个芯片，呵 。需要全部换掉 再用特殊手法初始化。</p><p>但是 就如抄袭我的  同一时间 有200多台机器 挂了 ，应付得来么？<br>首先他搞不清楚状况，为什么不能开机，其次就算换stm32 可以解决 也要有那么多人短时间内去换，机器在客户那里不是在他家，再次，换完一定时间后 还会再死！</p><p>自杀只需要把stm32的flash 抹掉一部分或者 重要参数设置乱即可 。烧他板干啥？</p><p>还有 做程序的 不要给别人入口，就如我 发作自杀后 就是个开机黑屏，不要显示啥文字 提示之类的东西。</p><h2 id="mack13013-发表于-2016-5-31-21-01-48-只看该作者"><a href="#mack13013-发表于-2016-5-31-21-01-48-只看该作者" class="headerlink" title="mack13013  发表于 2016-5-31 21:01:48 | 只看该作者"></a>mack13013  发表于 2016-5-31 21:01:48 | 只看该作者</h2><p>楼主的办法没用的。</p><p>我们这里抄板，都是抄原理，抄程序逻辑，<br>然后制板，写程序。</p><p>原理还是你的那套原理，程序逻辑还是那套逻辑，</p><p>板子是新板，程序是重新编写的程序。</p><p>简单说就是仿制，山寨你。</p><p>比直接抄板，拷贝hex数据成本低。<br>而且，如果人家要逆向你的hex数据，比较通透的做法就是判断行为，像是SD卡读取之后判断某个数值，人家是要扫一眼的。<br>不太负责的逆向，大概就只是绕过注册码了。毕竟hex复制出来了，逆向过程很多情况下就是拖进IDA，然后F5一下之类的简单操作了。</p><p>当然水平有高低，有的逻辑没吃透，仿制不是太成功，但是人家软件会更新的，慢慢就补足了。</p><p>简单说，就是有高手在取代你，你会玩的，人家也会玩，玩的还不错。。。</p><hr><p>抄功能的，都算是抄袭的较高境界了，复杂的系统抄一遍功能有那么容易吗，时间和成本都海了去了，而且未必能抄全了</p><p>简单粗暴的还是原样复制，但是遇上楼主这种下暗桩的就悲催了</p><hr><p>我知道一个，原来的系统是DOS工控机+各种控制采集，</p><p>抄的人，不但把DOS逆向了，还新写了一个DOS，然后干脆不用DOS了，丢进去一个Linux版本。</p><p>然后出了新的PLC版本，不怎么成功，然后又实现了ARM版本。原先要几块板子插接起来，现在巴掌大的一个电路板就实现了。</p><p>不但抄了，还强化了，原先通讯只有232，现在232+Wifi（并不是232转Wifi模块，是TCP&#x2F;IP的Wifi）</p><p>上位机比较难抄（delphi写的，算法很难实现），人家也给他抄了，C++写的，先实现主要功能，然后一次次版本升级，最后功能完善，现在的版本比原先的版本功能多了不少，算法性能也强化了很多。</p><hr><p>首先 不管你愿意承认与否  离散的信息采集和控制系统都算是相对简单的  我不知道总共有多少点数  点数越少越容易  像这种山寨的  最终还是要破解控制逻辑 后来者比先行者理解的更细水平更高这很正常，但是你说他花在这上面的时间成本换算后会比简单暴力的抄袭成本低，我觉得可能性不太大</p><hr><p>那也就是个大概的说法。简单暴力的抄袭，成本当然最低。</p><p>其实我说的那个，面临新的情况：客户提出了新的要求，而原厂家拒绝提供。如果单纯的抄袭，<br>快是快，无法满足客户的新的要求（功能上的）。  只能仿制了。</p><p>如果抄袭，再扩展，原DOS逆向不好找，PE修改更难，而且，不断增多的客户伴随着不断增多的新的要求。</p><p>原厂家提供的话，我们直接出钱买是最简单容易的，但是原厂家傲气的很，不提供，也不怎么爱鸟客户，**商就山寨他了。</p><p>原厂家是国外的公司。</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="http://www.openedv.com/thread-64685-1-1.html">辛苦码的程序，如何实现自我保护–我的经验分享</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">暗锁程序加密思路</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="加密" scheme="https://zml3589110.github.io/categories/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="加密" scheme="https://zml3589110.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="暗锁" scheme="https://zml3589110.github.io/tags/%E6%9A%97%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>Csharp算法之AES实现</title>
    <link href="https://zml3589110.github.io/posts/1135562047.html"/>
    <id>https://zml3589110.github.io/posts/1135562047.html</id>
    <published>2024-11-02T06:49:20.000Z</published>
    <updated>2024-11-02T09:10:07.445Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>最近想研究STM32的 BootLoader 实现IAP升级，所以就有hex转bin且加密方面研究<br>这里主要是根据文章 **“STM32 IAP升级AES256加密 应用及源码” ** 来验证加密功能<br>最开始是看到 <a href="https://javonpeng.blog.csdn.net/article/details/102680510">IAP+YMODEM+CRC16+AES256+PC端软件+hex合并</a> 这里讲述的内容查询到方法<br>只是在这边加密步骤发现有些不一样，他们编译的 AES256.DLL 动态文件是 win32 ，而自己平台是 X64，简单调整一下即可！</p><h1 id="AES算法详解"><a href="#AES算法详解" class="headerlink" title="AES算法详解"></a>AES算法详解</h1><h2 id="一、什么是AES？"><a href="#一、什么是AES？" class="headerlink" title="一、什么是AES？"></a>一、什么是AES？</h2><p>AES（Advanced Encryption Standard）是一种对称加密算法，广泛应用于数据加密。它在2001年被美国国家标准与技术研究所（NIST）选为数据加密的标准，替代了之前的DES（Data Encryption Standard）。AES具有高效、安全和灵活的特点，适用于多种平台和环境。</p><h2 id="二、AES的工作原理"><a href="#二、AES的工作原理" class="headerlink" title="二、AES的工作原理"></a>二、AES的工作原理</h2><p>AES是一种对称密钥加密算法，这意味着加密和解密使用同一个密钥。AES算法可以处理128位的块大小，支持128、192和256位的密钥长度。</p><ol><li><p>加密过程<br> AES的加密过程包括多个步骤，主要分为以下几个阶段：</p> <img src="/posts/1135562047/154c1272904b4dbbb6a86e22910fba7b.png" class="" title="img"></li><li><p>解密过程<br> 解密过程与加密过程相似，但步骤的顺序和操作的内容会有所不同，具体步骤为：</p> <img src="/posts/1135562047/8fb5f09471c64f87a5a84a5fc0d284d1.png" class="" title="img"></li></ol><h2 id="三、AES的安全性"><a href="#三、AES的安全性" class="headerlink" title="三、AES的安全性"></a>三、AES的安全性</h2><p>AES被认为是非常安全的加密标准，主要原因如下：</p><blockquote><ol><li><strong>密钥长度</strong>：AES支持多种密钥长度，256位的密钥提供了极高的安全性。</li><li><strong>抵抗力</strong>：AES设计抵抗多种攻击（如暴力破解、差分攻击、线性攻击等）。</li><li><strong>标准化</strong>：作为NIST标准，AES得到了广泛的审查和验证。</li></ol></blockquote><h2 id="四、AES的应用"><a href="#四、AES的应用" class="headerlink" title="四、AES的应用"></a>四、AES的应用</h2><p>AES被广泛应用于各种领域，包括但不限于：</p><blockquote><ul><li><strong>数据保护</strong>：用于保护敏感数据，如金融信息、个人身份信息等。</li><li><strong>VPN和TLS</strong>：在虚拟私人网络和传输层安全（TLS）协议中用于数据加密。</li><li><strong>文件加密</strong>：用于加密文件和存储设备，保护数据隐私。</li><li><strong>电子商务</strong>：在在线支付和交易中保障数据安全。</li></ul></blockquote><h2 id="语言实现（后边的文章使用了C-自己实现-这里基本使用库实现）"><a href="#语言实现（后边的文章使用了C-自己实现-这里基本使用库实现）" class="headerlink" title="语言实现（后边的文章使用了C++自己实现-这里基本使用库实现）"></a>语言实现（后边的文章使用了C++自己实现-这里基本使用库实现）</h2><p><strong>Go语言实现</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;crypto/aes&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/cipher&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line">    <span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;io&quot;</span></span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"><span class="comment">// AES加密</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(plainText, key []<span class="keyword">byte</span>)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    block, err := aes.NewCipher(key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 填充明文</span></span><br><span class="line">    plainText = pad(plainText)</span><br><span class="line">    cipherText := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(plainText))</span><br><span class="line">    </span><br><span class="line">    iv := <span class="built_in">make</span>([]<span class="keyword">byte</span>, aes.BlockSize)</span><br><span class="line">    <span class="keyword">if</span> _, err := io.ReadFull(rand.Reader, iv); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    mode := cipher.NewCBCEncrypter(block, iv)</span><br><span class="line">    mode.CryptBlocks(cipherText, plainText)</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 返回IV + 密文</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">append</span>(iv, cipherText...), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// AES解密</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(cipherText, key []<span class="keyword">byte</span>)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    block, err := aes.NewCipher(key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 获取IV</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(cipherText) &lt; aes.BlockSize &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">&quot;ciphertext too short&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    iv := cipherText[:aes.BlockSize]</span><br><span class="line">    cipherText = cipherText[aes.BlockSize:]</span><br><span class="line"> </span><br><span class="line">    mode := cipher.NewCBCDecrypter(block, iv)</span><br><span class="line">    mode.CryptBlocks(cipherText, cipherText)</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 去除填充</span></span><br><span class="line">    <span class="keyword">return</span> unpad(cipherText), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 填充</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pad</span><span class="params">(src []<span class="keyword">byte</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">    padding := aes.BlockSize - <span class="built_in">len</span>(src)%aes.BlockSize</span><br><span class="line">    padtext := bytes.Repeat([]<span class="keyword">byte</span>&#123;<span class="keyword">byte</span>(padding)&#125;, padding)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">append</span>(src, padtext...)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 去除填充</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">unpad</span><span class="params">(src []<span class="keyword">byte</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">    length := <span class="built_in">len</span>(src)</span><br><span class="line">    unpadding := <span class="keyword">int</span>(src[length<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">return</span> src[:(length - unpadding)]</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    key := []<span class="keyword">byte</span>(<span class="string">&quot;thisisaverystrongkey1234&quot;</span>) <span class="comment">// 32字节密钥</span></span><br><span class="line">    plainText := []<span class="keyword">byte</span>(<span class="string">&quot;Hello, AES encryption!&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 加密</span></span><br><span class="line">    cipherText, err := encrypt(plainText, key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;Encryption error:&quot;</span>, err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Cipher Text:&quot;</span>, hex.EncodeToString(cipherText))</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 解密</span></span><br><span class="line">    decryptedText, err := decrypt(cipherText, key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;Decryption error:&quot;</span>, err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Decrypted Text:&quot;</span>, <span class="keyword">string</span>(decryptedText))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Python实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">plain_text, key</span>):</span></span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC)</span><br><span class="line">    iv = cipher.iv</span><br><span class="line">    cipher_text = cipher.encrypt(pad(plain_text.encode(), AES.block_size))</span><br><span class="line">    <span class="keyword">return</span> iv + cipher_text</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">cipher_text, key</span>):</span></span><br><span class="line">    iv = cipher_text[:AES.block_size]</span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    decrypted_text = unpad(cipher.decrypt(cipher_text[AES.block_size:]), AES.block_size)</span><br><span class="line">    <span class="keyword">return</span> decrypted_text.decode()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    key = <span class="string">b&#x27;thisisaverystrong&#x27;</span>  <span class="comment"># 16字节密钥</span></span><br><span class="line">    plain_text = <span class="string">&quot;Hello, AES encryption!&quot;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 加密</span></span><br><span class="line">    cipher_text = encrypt(plain_text, key)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Cipher Text:&quot;</span>, binascii.hexlify(cipher_text).decode())</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 解密</span></span><br><span class="line">    decrypted_text = decrypt(cipher_text, key)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Decrypted Text:&quot;</span>, decrypted_text)</span><br></pre></td></tr></table></figure><p><strong>Java实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AESExample</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ALGORITHM = <span class="string">&quot;AES&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TRANSFORMATION = <span class="string">&quot;AES/CBC/PKCS5Padding&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] encrypt(String plainText, <span class="keyword">byte</span>[] key) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        SecretKeySpec secretKey = <span class="keyword">new</span> SecretKeySpec(key, ALGORITHM);</span><br><span class="line">        Cipher cipher = Cipher.getInstance(TRANSFORMATION);</span><br><span class="line">        <span class="keyword">byte</span>[] iv = <span class="keyword">new</span> <span class="keyword">byte</span>[cipher.getBlockSize()];</span><br><span class="line">        System.arraycopy(key, <span class="number">0</span>, iv, <span class="number">0</span>, iv.length);</span><br><span class="line">        cipher.init(Cipher.ENCRYPT_MODE, secretKey, <span class="keyword">new</span> IvParameterSpec(iv));</span><br><span class="line">        <span class="keyword">return</span> cipher.doFinal(plainText.getBytes());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(<span class="keyword">byte</span>[] cipherText, <span class="keyword">byte</span>[] key)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SecretKeySpec secretKey = <span class="keyword">new</span> SecretKeySpec(key, ALGORITHM);</span><br><span class="line">        Cipher cipher = Cipher.getInstance(TRANSFORMATION);</span><br><span class="line">        <span class="keyword">byte</span>[] iv = <span class="keyword">new</span> <span class="keyword">byte</span>[cipher.getBlockSize()];</span><br><span class="line">        System.arraycopy(key, <span class="number">0</span>, iv, <span class="number">0</span>, iv.length);</span><br><span class="line">        cipher.init(Cipher.DECRYPT_MODE, secretKey, <span class="keyword">new</span> IvParameterSpec(iv));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(cipher.doFinal(cipherText));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] key = <span class="string">&quot;thisisaverystrong&quot;</span>.getBytes(); <span class="comment">// 16字节密钥</span></span><br><span class="line">            String plainText = <span class="string">&quot;Hello, AES encryption!&quot;</span>;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 加密</span></span><br><span class="line">            <span class="keyword">byte</span>[] cipherText = encrypt(plainText, key);</span><br><span class="line">            System.out.println(<span class="string">&quot;Cipher Text: &quot;</span> + Arrays.toString(cipherText));</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 解密</span></span><br><span class="line">            String decryptedText = decrypt(cipherText, key);</span><br><span class="line">            System.out.println(<span class="string">&quot;Decrypted Text: &quot;</span> + decryptedText);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="STM32-IAP升级AES256加密-应用及源码"><a href="#STM32-IAP升级AES256加密-应用及源码" class="headerlink" title="STM32 IAP升级AES256加密 应用及源码"></a>STM32 IAP升级AES256加密 应用及源码</h1><p>我用的万利199元的板。<br>AES256加密算法，用的是shaoziyang的源码，由于不会用C++，上位机用了C#开发，搞了一个多星期，C#加密出来的，老是和shaoziyang的AVRUB加密出来的不一样，就干脆用C++做了DLL,用C#调用。<br>不多说了，直接上源码。</p><p><strong>上位机效果图</strong></p><img src="/posts/1135562047/ourdev_678829H4ADHA.jpg" class="" title="img"><p>STM32下位机IAP升级里面，我把固件上传部分删掉了，既然加密，就是为了防破_解，读出来就没必要了。</p><p>C++里的DLL加密文件包<br>点击此处下载 <a href="http://cache.amobbs.com/bbs_upload782111/files_46/ourdev_678831FMG4A4.zip">ourdev_678831FMG4A4.zip(文件大小:11K)</a> (原文件名:DLLTest.zip)</p><p>C#写的调用DLL加密的HEX转Bin文件包<br>点击此处下载 <a href="http://cache.amobbs.com/bbs_upload782111/files_46/ourdev_678832NPWI4U.zip">ourdev_678832NPWI4U.zip(文件大小:45K)</a> (原文件名:Hex2Bin.zip)</p><p>MDK下的万利199元开发板的IAP源码<br>点击此处下载 <a href="http://cache.amobbs.com/bbs_upload782111/files_46/ourdev_678833DAXD3A.zip">ourdev_678833DAXD3A.zip(文件大小:521K)</a> (原文件名:Usart.zip)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">好像有问题把?</span><br><span class="line"></span><br><span class="line">这是你写的程序：</span><br><span class="line">&#x2F;*----------------------------------------------------------------------------------------------*&#x2F;</span><br><span class="line">        BufferIn&#x3D;buf;</span><br><span class="line">        for (j &#x3D; 0; j &lt; packet_length; j +&#x3D; 16)</span><br><span class="line">        &#123;</span><br><span class="line">                &#x2F;&#x2F;解密数据包</span><br><span class="line">                aesDecrypt(BufferIn,bufferOut);</span><br><span class="line">                BufferIn+&#x3D;16;</span><br><span class="line">        &#125;</span><br><span class="line">&#x2F;*----------------------------------------------------------------------------------------------*&#x2F;</span><br><span class="line">        RamSource &#x3D; (uint32_t)buf;</span><br><span class="line"></span><br><span class="line">你最后的赋值又是没解密的内容啊?</span><br><span class="line"></span><br><span class="line">是不是应该是RamSource &#x3D; (uint32_t)bufferOut;</span><br><span class="line"></span><br><span class="line">没搞过AES，你的函数也没什么仔细的说明，求解？</span><br><span class="line"></span><br><span class="line">谢谢指导。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  楼主| 发表于 2011-9-23 11:13:25 | 只看该作者</span><br><span class="line">这个源码是从shaoziyang的AVR单片机通用BootLoader里提取出来的。</span><br><span class="line"></span><br><span class="line">当时我也是你这种理解，参数1为输入，参数2为输出。但实际不是的，解密后的数据，实际还是在参数1的位置。</span><br><span class="line"></span><br><span class="line">你仔细试试就知道了。</span><br></pre></td></tr></table></figure><p>忘记说明了，加密Key设置如图。<br>Key字符串可用空格分隔，也可以不用。</p><img src="/posts/1135562047/ourdev_678988SH63Z3.jpg" class="" title="img"><p>注意: 最后使用的是  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9D D2 00 24 84 60 2E DA 0C DD 52 7B 05 C1 6B 01 FF 17 CD 6F 8C 1E 3E 09 CF 1F 0C 78 87 EF 8A EC</span><br></pre></td></tr></table></figure><h2 id="编译出现的问题–调用DLL时-报“-试图加载格式不正确的程序“"><a href="#编译出现的问题–调用DLL时-报“-试图加载格式不正确的程序“" class="headerlink" title="编译出现的问题–调用DLL时 报“ 试图加载格式不正确的程序“"></a>编译出现的问题–调用DLL时 报“ 试图加载格式不正确的程序“</h2><p><strong>运行时报“试图加载格式不正确的程序。 (0x8007000B)”</strong></p><img src="/posts/1135562047/87146bf71c2ce327f85b2e198608ee5e.png" class="" title="img"><blockquote><p>主要是因为在 x64 架构上运行了 win32 的DLL导致</p></blockquote><p><a href="https://blog.csdn.net/songyi160/article/details/51354660">C#调用dll提示”试图加载格式不正确的程序”原因及解决方法</a></p><p>程序在32位操作系统上运行正常，在64位操作系统上运行读卡功能提示”试图加载格式不正确“。</p><p><strong>出错原因：</strong>因为’任何 CPU’编译运行的程序在64位的机器上就会用运行为64位，而64位程序是不能加载32位dll的</p><p><strong>解决方法：</strong>项目右键属性-&gt;项目设计器-&gt;生成-&gt;平台-&gt;把’默认设置(任何 CPU)’改为x86。</p><img src="/posts/1135562047/20160509173339272" class="" title="img"><blockquote><p><strong>当将 DLL 库程序设置成 X86 之后编译会报错，主要还是因为使用了 C 语言编写</strong></p></blockquote><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&gt;LINK : fatal error LNK1561: 必须定义入口点</span><br></pre></td></tr></table></figure><h2 id="解决64位dll“error-LNK1561-必须定义入口点”"><a href="#解决64位dll“error-LNK1561-必须定义入口点”" class="headerlink" title="解决64位dll“error LNK1561: 必须定义入口点”"></a>解决64位dll“error LNK1561: 必须定义入口点”</h2><p>在很多的时候需要生成一个64位的dll，但是明显在32位平台编译正确的代码，改成64位系统就不准确了，报“error LNK1561: 必须定义入口点”的错误。</p><ul><li><strong>一、右键项目–&gt;属性</strong></li></ul><img src="/posts/1135562047/fab31cb375d7997b306068ecf9dade49600fd928.jpg" class="" title="解决64位dll“error LNK1561: 必须定义入口点”"><ul><li><strong>二、选择“常规”–&gt;“配置类型”</strong></li></ul><img src="/posts/1135562047/8a17b3042e6817e9c575bc4cd356d53da924ce28.jpg" class="" title="解决64位dll“error LNK1561: 必须定义入口点”"><ul><li><strong>三、选择“动态连接库”</strong></li></ul><img src="/posts/1135562047/a965c6e9ccd2bb66cdcd37f49b2a04e23fa2c628.jpg" class="" title="解决64位dll“error LNK1561: 必须定义入口点”"><ul><li><strong>四、重新生成。右键项目“重新生成”</strong></li></ul><img src="/posts/1135562047/3b03be7aa010bc3349ac860f92efa25f0d143f29.jpg" class="" title="解决64位dll“error LNK1561: 必须定义入口点”"><ul><li><strong>五、然后到项目所在单位的win64目录下就可以找到生成的dll文件。</strong></li></ul><img src="/posts/1135562047/87c8bf46b7b1eef9cf29fec8bfb33c4132ba3229.jpg" class="" title="解决64位dll“error LNK1561: 必须定义入口点”"><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>根据文章得到了加密的 bin 文件了</p><h1 id="C-中实现AES算法加密解读-直接使用库方式"><a href="#C-中实现AES算法加密解读-直接使用库方式" class="headerlink" title="C#中实现AES算法加密解读(直接使用库方式)"></a>C#中实现AES算法加密解读(直接使用库方式)</h1><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>文件和加密文件之间的转换。</p><img src="/posts/1135562047/2023022614311518.png" class="" title="img"><h2 id="添加辅助类"><a href="#添加辅助类" class="headerlink" title="添加辅助类"></a>添加辅助类</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AES_EnorDecrypt</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">//定义默认密钥</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] _aesKeyByte = &#123; <span class="number">0x12</span>, <span class="number">0x34</span>, <span class="number">0x56</span>, <span class="number">0x78</span>, <span class="number">0x90</span>, <span class="number">0xAB</span>, <span class="number">0xCD</span>, <span class="number">0xEF</span>, <span class="number">0x12</span>, <span class="number">0x34</span>, <span class="number">0x56</span>, <span class="number">0x78</span>, <span class="number">0x90</span>, <span class="number">0xAB</span>, <span class="number">0xCD</span>, <span class="number">0xEF</span> &#125;;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> _aesKeyStr = Encoding.UTF8.GetString(_aesKeyByte);</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 随机生成密钥，默认密钥长度为32，不足在加密时自动填充空格</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;n&quot;&gt;</span>密钥长度<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetIv</span>(<span class="params"><span class="built_in">int</span> n</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="built_in">string</span> s = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line">           <span class="built_in">char</span>[] arrChar = <span class="keyword">new</span> <span class="built_in">char</span>[s.Length];</span><br><span class="line">           <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; s.Length; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               arrChar[i] = Convert.ToChar(s.Substring(i, <span class="number">1</span>));</span><br><span class="line">           &#125;</span><br><span class="line">           StringBuilder num = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">           Random rnd = <span class="keyword">new</span> Random(DateTime.Now.Millisecond);</span><br><span class="line">           <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               num.Append(arrChar[rnd.Next(<span class="number">0</span>, arrChar.Length)].ToString());</span><br><span class="line">           &#125;</span><br><span class="line">           _aesKeyByte = Encoding.UTF8.GetBytes(num.ToString());</span><br><span class="line">           <span class="keyword">return</span> _aesKeyStr = Encoding.UTF8.GetString(_aesKeyByte);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> AES加密，针对文本类文件</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Data&quot;&gt;</span>被加密的明文<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Key&quot;&gt;</span>密钥<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Vector&quot;&gt;</span>密钥向量<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>密文<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">AESEncrypt</span>(<span class="params"><span class="built_in">string</span> Data, <span class="built_in">string</span> Key, <span class="built_in">string</span> Vector</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="built_in">byte</span>[] plainBytes = Encoding.UTF8.GetBytes(Data);</span><br><span class="line">           <span class="built_in">byte</span>[] bKey = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">32</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Key.PadRight(bKey.Length)), bKey, bKey.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] bVector = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Vector.PadRight(bVector.Length)), bVector, bVector.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] Cryptograph = <span class="literal">null</span>;<span class="comment">//加密后的密文</span></span><br><span class="line">           Rijndael Aes = Rijndael.Create();</span><br><span class="line">           <span class="keyword">try</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">using</span> (MemoryStream Memory = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="comment">//把内存流对象包装成加密流对象</span></span><br><span class="line">                   <span class="keyword">using</span> (CryptoStream Encryptor = <span class="keyword">new</span> CryptoStream(Memory, Aes.CreateEncryptor(bKey, bVector), CryptoStreamMode.Write))</span><br><span class="line">                   &#123;</span><br><span class="line">                       Encryptor.Write(plainBytes, <span class="number">0</span>, plainBytes.Length);</span><br><span class="line">                       Encryptor.FlushFinalBlock();</span><br><span class="line">                       Cryptograph = Memory.ToArray();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           catch</span><br><span class="line">           &#123;</span><br><span class="line">               Cryptograph = <span class="literal">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> Convert.ToBase64String(Cryptograph);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> AES加密，任意文件</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Data&quot;&gt;</span>被加密的明文<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Key&quot;&gt;</span>密钥<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Vector&quot;&gt;</span>密钥向量<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>密文<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] <span class="title">AESEncrypt</span>(<span class="params"><span class="built_in">byte</span>[] Data, <span class="built_in">string</span> Key, <span class="built_in">string</span> Vector</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="built_in">byte</span>[] bKey = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">32</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Key.PadRight(bKey.Length)), bKey, bKey.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] bVector = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Vector.PadRight(bVector.Length)), bVector, bVector.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] Cryptograph = <span class="literal">null</span>;<span class="comment">//加密后的密文</span></span><br><span class="line">           Rijndael Aes = Rijndael.Create();</span><br><span class="line">           <span class="keyword">try</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">using</span> (MemoryStream Memory = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="comment">//把内存流对象包装成加密流对象</span></span><br><span class="line">                   <span class="keyword">using</span> (CryptoStream Encryptor = <span class="keyword">new</span> CryptoStream(Memory, Aes.CreateEncryptor(bKey, bVector), CryptoStreamMode.Write))</span><br><span class="line">                   &#123;</span><br><span class="line">                       Encryptor.Write(Data, <span class="number">0</span>, Data.Length);</span><br><span class="line">                       Encryptor.FlushFinalBlock();</span><br><span class="line">                       Cryptograph = Memory.ToArray();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           catch</span><br><span class="line">           &#123;</span><br><span class="line">               Cryptograph = <span class="literal">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> Cryptograph;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> AES解密，针对文本文件</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Data&quot;&gt;</span>被解密的密文<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Key&quot;&gt;</span>密钥<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Vector&quot;&gt;</span>密钥向量<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>明文<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">AESDecrypt</span>(<span class="params"><span class="built_in">string</span> Data, <span class="built_in">string</span> Key, <span class="built_in">string</span> Vector</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="built_in">byte</span>[] encryptedBytes = Convert.FromBase64String(Data);</span><br><span class="line">           <span class="built_in">byte</span>[] bKey = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">32</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Key.PadRight(bKey.Length)), bKey, bKey.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] bVector = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Vector.PadRight(bVector.Length)), bVector, bVector.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] original = <span class="literal">null</span>;<span class="comment">//解密后的明文</span></span><br><span class="line">           Rijndael Aes = Rijndael.Create();</span><br><span class="line">           <span class="keyword">try</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">using</span> (MemoryStream Memory = <span class="keyword">new</span> MemoryStream(encryptedBytes))</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="comment">//把内存流对象包装成加密对象</span></span><br><span class="line">                   <span class="keyword">using</span> (CryptoStream Decryptor = <span class="keyword">new</span> CryptoStream(Memory, Aes.CreateDecryptor(bKey, bVector), CryptoStreamMode.Read))</span><br><span class="line">                   &#123;</span><br><span class="line">                       <span class="comment">//明文存储区</span></span><br><span class="line">                       <span class="keyword">using</span> (MemoryStream originalMemory = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">                       &#123;</span><br><span class="line">                           <span class="built_in">byte</span>[] Buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                           <span class="built_in">int</span> readBytes = <span class="number">0</span>;</span><br><span class="line">                           <span class="keyword">while</span> ((readBytes = Decryptor.Read(Buffer, <span class="number">0</span>, Buffer.Length)) &gt; <span class="number">0</span>)</span><br><span class="line">                           &#123;</span><br><span class="line">                               originalMemory.Write(Buffer, <span class="number">0</span>, readBytes);</span><br><span class="line">                           &#125;</span><br><span class="line">                           original = originalMemory.ToArray();</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           catch</span><br><span class="line">           &#123;</span><br><span class="line">               original = <span class="literal">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> Encoding.UTF8.GetString(original);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> AES解密，任意文件</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Data&quot;&gt;</span>被解密的密文<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Key&quot;&gt;</span>密钥<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Vector&quot;&gt;</span>密钥向量<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>明文<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] <span class="title">AESDecrypt</span>(<span class="params"><span class="built_in">byte</span>[] Data, <span class="built_in">string</span> Key, <span class="built_in">string</span> Vector</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="built_in">byte</span>[] bKey = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">32</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Key.PadRight(bKey.Length)), bKey, bKey.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] bVector = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>];</span><br><span class="line">           Array.Copy(Encoding.UTF8.GetBytes(Vector.PadRight(bVector.Length)), bVector, bVector.Length);</span><br><span class="line">           <span class="built_in">byte</span>[] original = <span class="literal">null</span>;<span class="comment">//解密后的明文</span></span><br><span class="line">           Rijndael Aes = Rijndael.Create();</span><br><span class="line">           <span class="keyword">try</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">using</span> (MemoryStream Memory = <span class="keyword">new</span> MemoryStream(Data))</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="comment">//把内存流对象包装成加密对象</span></span><br><span class="line">                   <span class="keyword">using</span> (CryptoStream Decryptor = <span class="keyword">new</span> CryptoStream(Memory, Aes.CreateDecryptor(bKey, bVector), CryptoStreamMode.Read))</span><br><span class="line">                   &#123;</span><br><span class="line">                       <span class="comment">//明文存储区</span></span><br><span class="line">                       <span class="keyword">using</span> (MemoryStream originalMemory = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">                       &#123;</span><br><span class="line">                           <span class="built_in">byte</span>[] Buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                           <span class="built_in">int</span> readBytes = <span class="number">0</span>;</span><br><span class="line">                           <span class="keyword">while</span> ((readBytes = Decryptor.Read(Buffer, <span class="number">0</span>, Buffer.Length)) &gt; <span class="number">0</span>)</span><br><span class="line">                           &#123;</span><br><span class="line">                               originalMemory.Write(Buffer, <span class="number">0</span>, readBytes);</span><br><span class="line">                           &#125;</span><br><span class="line">                           original = originalMemory.ToArray();</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           catch</span><br><span class="line">           &#123;</span><br><span class="line">               original = <span class="literal">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> original;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>AES是块加密，块的长度是16字节，如果原文不到16的字节，就会进行填充至16个字节。</strong></p><h2 id="开始实现"><a href="#开始实现" class="headerlink" title="开始实现"></a>开始实现</h2><p>界面布局</p><img src="/posts/1135562047/2023022614311519.png" class="" title="img"><p>textbox1为文件位置，textbox2为密码。</p><img src="/posts/1135562047/2023022614311520.png" class="" title="img"><img src="/posts/1135562047/2023022614311521.png" class="" title="img"><img src="/posts/1135562047/2023022614311522.png" class="" title="img"><p><strong>backgroundWorker2</strong>也需要设置一样才行</p><p>设置好后</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">FormAes</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> 属性</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> _aesKeyVector = <span class="string">&quot;q2T_=R/*33vc&quot;</span>;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">FormAes</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 选择文件</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">textBox1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            OpenFileDialog dialog = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line">            dialog.Multiselect = <span class="literal">true</span>;<span class="comment">//该值确定是否可以选择多个文件</span></span><br><span class="line">            dialog.Title = <span class="string">&quot;请选择文件夹&quot;</span>;</span><br><span class="line">            dialog.Filter = <span class="string">&quot;所有文件(*.*)|*.*&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (dialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                textBox1.Text = dialog.FileName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 加密</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(textBox1.Text.Trim()) || <span class="built_in">string</span>.IsNullOrWhiteSpace(textBox2.Text.Trim()))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            backgroundWorker1.RunWorkerAsync();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 解密</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(textBox1.Text.Trim()) || <span class="built_in">string</span>.IsNullOrWhiteSpace(textBox2.Text.Trim()))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            backgroundWorker2.RunWorkerAsync();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 后台线程执行的方法</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_DoWork</span>(<span class="params"><span class="built_in">object</span> sender, DoWorkEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           </span><br><span class="line">            <span class="built_in">string</span> KeyVector = _aesKeyVector;<span class="comment">//密钥向量</span></span><br><span class="line">            <span class="built_in">string</span> path = Path.GetDirectoryName(textBox1.Text);</span><br><span class="line">            <span class="built_in">string</span> name = Path.GetFileName(textBox1.Text);</span><br><span class="line">            name += <span class="string">&quot;.En&quot;</span>;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span>   加密</span></span><br><span class="line">            FileStream sr = <span class="keyword">new</span> FileStream(textBox1.Text, FileMode.Open, FileAccess.Read);</span><br><span class="line">            FileStream sw = <span class="keyword">new</span> FileStream(path + <span class="string">&quot;\\&quot;</span> + name, FileMode.Create, FileAccess.Write);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sr.Length &gt; <span class="number">50</span> * <span class="number">1024</span> * <span class="number">1024</span>)<span class="comment">//如果文件大于50M，采取分块加密，按50MB读写</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] mybyte = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">52428800</span>];<span class="comment">//每50MB加密一次                  </span></span><br><span class="line">                <span class="built_in">int</span> numBytesRead = <span class="number">52428800</span>;<span class="comment">//每次加密的流大小</span></span><br><span class="line">                <span class="built_in">long</span> leftBytes = sr.Length;<span class="comment">//剩余需要加密的流大小</span></span><br><span class="line">                <span class="built_in">long</span> readBytes = <span class="number">0</span>;<span class="comment">//已经读取的流大小</span></span><br><span class="line">                <span class="comment">//每50MB加密后会变成50MB+16B</span></span><br><span class="line">                <span class="built_in">byte</span>[] encrpy = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">52428816</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (leftBytes &gt; numBytesRead)</span><br><span class="line">                    &#123;</span><br><span class="line">                        sr.Read(mybyte, <span class="number">0</span>, mybyte.Length);</span><br><span class="line">                        encrpy = AES_EnorDecrypt.AESEncrypt(mybyte, textBox2.Text, KeyVector);</span><br><span class="line">                        sw.Write(encrpy, <span class="number">0</span>, encrpy.Length);</span><br><span class="line">                        leftBytes -= numBytesRead;</span><br><span class="line">                        readBytes += numBytesRead;</span><br><span class="line">                        backgroundWorker1.ReportProgress((<span class="built_in">int</span>)(readBytes * <span class="number">100</span> / sr.Length));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span><span class="comment">//重新设定读取流大小，避免最后多余空值</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">byte</span>[] newByte = <span class="keyword">new</span> <span class="built_in">byte</span>[leftBytes];</span><br><span class="line">                        sr.Read(newByte, <span class="number">0</span>, newByte.Length);</span><br><span class="line">                        <span class="built_in">byte</span>[] newWriteByte;</span><br><span class="line">                        newWriteByte = AES_EnorDecrypt.AESEncrypt(newByte, textBox2.Text, KeyVector);</span><br><span class="line">                        sw.Write(newWriteByte, <span class="number">0</span>, newWriteByte.Length);</span><br><span class="line">                        readBytes += leftBytes;</span><br><span class="line">                        backgroundWorker1.ReportProgress((<span class="built_in">int</span>)(readBytes * <span class="number">100</span> / sr.Length));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] mybyte = <span class="keyword">new</span> <span class="built_in">byte</span>[sr.Length];</span><br><span class="line">                sr.Read(mybyte, <span class="number">0</span>, (<span class="built_in">int</span>)sr.Length);</span><br><span class="line">                mybyte = AES_EnorDecrypt.AESEncrypt(mybyte, textBox2.Text, KeyVector);</span><br><span class="line">                sw.Write(mybyte, <span class="number">0</span>, mybyte.Length);</span><br><span class="line">                backgroundWorker1.ReportProgress(<span class="number">100</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            sr.Close();</span><br><span class="line">            sw.Close();</span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_ProgressChanged</span>(<span class="params"><span class="built_in">object</span> sender, ProgressChangedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            progressBar1.Value = e.ProgressPercentage;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 执行完成时触发</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_RunWorkerCompleted</span>(<span class="params"><span class="built_in">object</span> sender, RunWorkerCompletedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;加密成功!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 后台线程执行的方法</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker2_DoWork</span>(<span class="params"><span class="built_in">object</span> sender, DoWorkEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> KeyVector = _aesKeyVector;<span class="comment">//密钥向量</span></span><br><span class="line">                <span class="built_in">string</span> path = Path.GetDirectoryName(textBox1.Text);</span><br><span class="line">                <span class="built_in">string</span> name = Path.GetFileName(textBox1.Text);</span><br><span class="line">                <span class="keyword">if</span> (name.EndsWith(<span class="string">&quot;.En&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    name = name.Remove(name.Length - <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">#<span class="meta-keyword">region</span>  解密</span></span><br><span class="line">                FileStream sr = <span class="keyword">new</span> FileStream(textBox1.Text, FileMode.Open, FileAccess.Read);</span><br><span class="line">                FileStream sw = <span class="keyword">new</span> FileStream(path + <span class="string">&quot;\\&quot;</span> + name, FileMode.Create, FileAccess.Write);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (sr.Length &gt; <span class="number">50</span> * <span class="number">1024</span> * <span class="number">1024</span>)<span class="comment">//如果文件大于50M，采取分块解密，按50MB读写</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] mybyte = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">52428816</span>];<span class="comment">//解密缓冲区50MB+16B</span></span><br><span class="line">                    <span class="built_in">byte</span>[] decrpt = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">52428800</span>];<span class="comment">//解密后的50MB</span></span><br><span class="line">                    <span class="built_in">int</span> numBytesRead = <span class="number">52428816</span>;<span class="comment">//每次解密的流大小</span></span><br><span class="line">                    <span class="built_in">long</span> leftBytes = sr.Length;<span class="comment">//剩余需要解密的流大小</span></span><br><span class="line">                    <span class="built_in">long</span> readBytes = <span class="number">0</span>;<span class="comment">//已经读取的流大小</span></span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (leftBytes &gt; numBytesRead)</span><br><span class="line">                            &#123;</span><br><span class="line">                                sr.Read(mybyte, <span class="number">0</span>, mybyte.Length);</span><br><span class="line">                                decrpt = AES_EnorDecrypt.AESDecrypt(mybyte, textBox2.Text, KeyVector);</span><br><span class="line">                                sw.Write(decrpt, <span class="number">0</span>, decrpt.Length);</span><br><span class="line">                                leftBytes -= numBytesRead;</span><br><span class="line">                                readBytes += numBytesRead;</span><br><span class="line">                                backgroundWorker2.ReportProgress((<span class="built_in">int</span>)(readBytes * <span class="number">100</span> / sr.Length));</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span><span class="comment">//重新设定读取流大小，避免最后多余空值</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="built_in">byte</span>[] newByte = <span class="keyword">new</span> <span class="built_in">byte</span>[leftBytes];</span><br><span class="line">                                sr.Read(newByte, <span class="number">0</span>, newByte.Length);</span><br><span class="line">                                <span class="built_in">byte</span>[] newWriteByte;</span><br><span class="line">                                newWriteByte = AES_EnorDecrypt.AESDecrypt(newByte, textBox2.Text, KeyVector);</span><br><span class="line">                                sw.Write(newWriteByte, <span class="number">0</span>, newWriteByte.Length);</span><br><span class="line">                                readBytes += leftBytes;</span><br><span class="line">                                backgroundWorker2.ReportProgress((<span class="built_in">int</span>)(readBytes * <span class="number">100</span> / sr.Length));</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    catch</span><br><span class="line">                    &#123;</span><br><span class="line">                        sr.Close();</span><br><span class="line">                        sw.Close();</span><br><span class="line">                        File.Delete(path + <span class="string">&quot;\\&quot;</span> + name);</span><br><span class="line">                        e.Cancel = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    sr.Close();</span><br><span class="line">                    sw.Close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] mybyte = <span class="keyword">new</span> <span class="built_in">byte</span>[(<span class="built_in">int</span>)sr.Length];</span><br><span class="line">                    sr.Read(mybyte, <span class="number">0</span>, (<span class="built_in">int</span>)sr.Length);</span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        mybyte = AES_EnorDecrypt.AESDecrypt(mybyte, textBox2.Text, KeyVector);</span><br><span class="line">                        sw.Write(mybyte, <span class="number">0</span>, mybyte.Length);</span><br><span class="line">                        backgroundWorker2.ReportProgress(<span class="number">100</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    catch</span><br><span class="line">                    &#123;</span><br><span class="line">                        sr.Close();</span><br><span class="line">                        sw.Close();</span><br><span class="line">                        File.Delete(path + <span class="string">&quot;\\&quot;</span> + name);</span><br><span class="line">                        e.Cancel = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    sr.Close();</span><br><span class="line">                    sw.Close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker2_ProgressChanged</span>(<span class="params"><span class="built_in">object</span> sender, ProgressChangedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           progressBar1.Value = e.ProgressPercentage;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 执行完成时触发</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker2_RunWorkerCompleted</span>(<span class="params"><span class="built_in">object</span> sender, RunWorkerCompletedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.Cancelled)</span><br><span class="line">            &#123;</span><br><span class="line">               MessageBox.Show(<span class="string">&quot;解密失败\n密码错误或加密文件被篡改，无法解密&quot;</span>);                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;解密成功!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="用C-实现AES加密和解密（库引用-没测试过）"><a href="#用C-实现AES加密和解密（库引用-没测试过）" class="headerlink" title="用C#实现AES加密和解密（库引用-没测试过）"></a>用C#实现AES加密和解密（库引用-没测试过）</h1><p>  AES 是一个新的可以用于保护电子数据的加密算法。明确地说，AES 是一个迭代的、对称密钥分组的密码，它可以使用128、192 和 256 位密钥，并且用 128 位（16字节）分组加密和解密数据。与公共密钥密码使用密钥对不同，对称密钥密码使用相同的密钥加密和解密数据。通过分组密码返回的加密数据 的位数与输入数据相同。迭代加密使用一个循环结构，在该循环中重复置换（permutations ）和替换(substitutions）输入数据。</p><p>需要加入引用   using System.Security.Cryptography;</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 有密码的AES加密 </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;text&quot;&gt;</span>加密字符<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;password&quot;&gt;</span>加密的密码<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;iv&quot;&gt;</span>密钥<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">AESEncrypt</span>(<span class="params"><span class="built_in">string</span> text, <span class="built_in">string</span> password, <span class="built_in">string</span> iv</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            RijndaelManaged rijndaelCipher = <span class="keyword">new</span> RijndaelManaged();</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.Mode = CipherMode.CBC;</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.Padding = PaddingMode.PKCS7;</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.KeySize = <span class="number">128</span>;</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.BlockSize = <span class="number">128</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] pwdBytes = System.Text.Encoding.UTF8.GetBytes(password);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] keyBytes = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>];</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> len = pwdBytes.Length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (len &gt; keyBytes.Length) len = keyBytes.Length;</span><br><span class="line"></span><br><span class="line">            System.Array.Copy(pwdBytes, keyBytes, len);</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.Key = keyBytes;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] ivBytes = System.Text.Encoding.UTF8.GetBytes(iv);</span><br><span class="line">            rijndaelCipher.IV = ivBytes;</span><br><span class="line"></span><br><span class="line">            ICryptoTransform transform = rijndaelCipher.CreateEncryptor();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] plainText = Encoding.UTF8.GetBytes(text);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] cipherBytes = transform.TransformFinalBlock(plainText, <span class="number">0</span>, plainText.Length);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> Convert.ToBase64String(cipherBytes);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 随机生成密钥</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetIv</span>(<span class="params"><span class="built_in">int</span> n</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">char</span>[] arrChar = <span class="keyword">new</span> <span class="built_in">char</span>[]&#123;</span><br><span class="line">           <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;I&#x27;</span>,<span class="string">&#x27;J&#x27;</span>,<span class="string">&#x27;K&#x27;</span>,<span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>,<span class="string">&#x27;P&#x27;</span>,<span class="string">&#x27;R&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;S&#x27;</span>,<span class="string">&#x27;V&#x27;</span>,<span class="string">&#x27;U&#x27;</span>,<span class="string">&#x27;W&#x27;</span>,<span class="string">&#x27;X&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>,<span class="string">&#x27;Z&#x27;</span></span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line">            StringBuilder num = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            Random rnd = <span class="keyword">new</span> Random(DateTime.Now.Millisecond);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                num.Append(arrChar[rnd.Next(<span class="number">0</span>, arrChar.Length)].ToString());</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> num.ToString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> AES解密</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;text&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;password&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;iv&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">AESDecrypt</span>(<span class="params"><span class="built_in">string</span> text, <span class="built_in">string</span> password, <span class="built_in">string</span> iv</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            RijndaelManaged rijndaelCipher = <span class="keyword">new</span> RijndaelManaged();</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.Mode = CipherMode.CBC;</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.Padding = PaddingMode.PKCS7;</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.KeySize = <span class="number">128</span>;</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.BlockSize = <span class="number">128</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] encryptedData = Convert.FromBase64String(text);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] pwdBytes = System.Text.Encoding.UTF8.GetBytes(password);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] keyBytes = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>];</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> len = pwdBytes.Length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (len &gt; keyBytes.Length) len = keyBytes.Length;</span><br><span class="line"></span><br><span class="line">            System.Array.Copy(pwdBytes, keyBytes, len);</span><br><span class="line"></span><br><span class="line">            rijndaelCipher.Key = keyBytes;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] ivBytes = System.Text.Encoding.UTF8.GetBytes(iv);</span><br><span class="line">            rijndaelCipher.IV = ivBytes;</span><br><span class="line"></span><br><span class="line">            ICryptoTransform transform = rijndaelCipher.CreateDecryptor();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] plainText = transform.TransformFinalBlock(encryptedData, <span class="number">0</span>, encryptedData.Length);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> Encoding.UTF8.GetString(plainText);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="AES加密算法详解（图文解释）"><a href="#AES加密算法详解（图文解释）" class="headerlink" title="AES加密算法详解（图文解释）"></a>AES加密算法详解（图文解释）</h1><p>由于DES加密算法被破解了，3DES加密算法虽然没有被破解，但是3DES算法的加解密效率低，所有现在都使用AES算法。<br>AES加密算法是密码学中的高级加密标准，AES为分组加密法，把明文分成一组一组的，每组长度相等，每次加密一组数据，直到加密完整个明文，在AES标准规范中，分组长度只能是128位，AES是按照字节进行加密的，也就是说每个分组为16个字节（每个字节8位）。密钥的长度可以使用128位、192位或256位。这导致密钥长度不同，推荐加密的轮数也不同。</p><p>AES算法思想：<br>1）设计简单；<br>2）在多个平台上速度快，编码紧凑；<br>3）抵抗所有已知攻击；<br>4）没有采用Feistel结构，轮函数由3个不同的可逆均匀变换构成：非线性层、线性混合层和密钥加层。</p><p>明文P需要分组，称为状态，状态用以字节为元素的矩阵阵列表示，如图所示：</p><img src="/posts/1135562047/39d840e0e5edf233b1c2244c6850ca05.png" class="" title="在这里插入图片描述"><p>16字节明文按照此顺序放入矩阵，规则为：从上到下，从左到右，依次进行。</p><p>同样的，密钥K也需要分组，原理与明文P相同，下图为128位密钥矩阵：</p><img src="/posts/1135562047/1c4ffee442ea6ae73707248cdb748aed.png" class="" title="在这里插入图片描述"><p><strong>下图为AES加密流程：</strong></p><img src="/posts/1135562047/6a1f112dc0e866b7101d459b77a1b473.png" class="" title="在这里插入图片描述"><p>加密过程：C&#x3D;E（K，P），其中C为加密后的密文，K为密钥，P为明文，E为加密函数。<br>解密过程：P&#x3D;D（K，P），其中D为解密函数，解密过程为加密过程的逆运算。<br>AES的具体加密流程如下图所示：</p><img src="/posts/1135562047/22b3a421a223b8096d8b296fd41512f2.png" class="" title="在这里插入图片描述"><p>AES加密过程通过四个步骤实现：字节替换、行移位、列混淆和轮密钥加。<br><strong>注意：</strong> 根据密钥长度不同，加密的轮数也不同，在第一轮之前要进行轮密钥加，最后一轮没有进行列混淆操作。</p><p>我们来解释一下这四个步骤的具体含义：<br><strong>字节替换：</strong> 属于非线性替换，具体原理就是通过一个替换表（S盒）对每个字节进行替换，实际上就是一个查表操作，并且此过程可逆，将每一个字节的前4位作为行值，后4位作为列值，去S盒查找，进行输出。</p><p>下图为S盒（x表示行，y表示列），例如字节为0x14，那么前四位的16进制为1，后四位的16进制为4，去查找s盒中的第1行第4列的值，可以看出为0xfa，就把原先的字节0x14替换为0xfa。</p><img src="/posts/1135562047/26d28a1050bcb10acc3e441b0bd5deb5.png" class="" title="在这里插入图片描述"><p>解密过程与此相同，唯一就是采用的是逆S盒。</p><p>接下来是<strong>行位移</strong>操作<br>对于4*4的矩阵，操作为：<br>第0行：保持不动；<br>第1行：循环左移1个字节；<br>第2行：循环左移2个字节；<br>第3行：循环左移3个字节。</p><p>解密过程变为循环右移，每行移动字节数与加密过程相同，下图为列位移示意图。</p><img src="/posts/1135562047/6a5586d97785583468e13f1c360042b4.png" class="" title="在这里插入图片描述"><p>接下来是<strong>列混淆</strong>操作<br>实际上为4<em>4的矩阵与另一个4</em>4矩阵异或相乘（注意为右乘操作），重新得到一个4*4的矩阵，如下图所示。<br>解密过程为重新与此矩阵异或，因为两次异或得到的值为原数据本身。</p><img src="/posts/1135562047/5860e0a3d7d9068c49a95c76c40b1fa2.png" class="" title="在这里插入图片描述"><p>最后为<strong>轮密钥</strong>加操作<br>轮密钥与状态矩阵进行逐比特异或操作。<br>这个轮密钥是由种子密钥通过密钥编排算法得到的，并且轮密钥长度与分组长度相同。<br>解密过程与之相同，两次异或得到原始数据。</p><p><strong>密钥编排算法基本原则</strong><br>1）轮密钥的比特数等于分组长度乘以轮数加1；<br>例如：将128位比特明文进行加密，总共需要（10+1）*128&#x3D;1408比特密钥。<br>2）种子密钥扩展为扩展密钥；<br>3）轮密钥从扩展密钥中取，第一轮取扩展密钥的第0~3列，依次类推。</p><p>过程为：<br>定义：w[0]~w[3]为初始密钥</p><p><strong>如果i&#x3D;4的倍数</strong>，即i为每组的第一列，则执行以下3个步骤<br>1）将w[i-1]循环左移一个字节：</p><table><thead><tr><th align="center">w[0]</th><th align="center">w[1]</th><th align="center">w[2]</th><th align="center">w[3]</th><th align="center">w[4]</th></tr></thead><tbody><tr><td align="center">2b</td><td align="center">28</td><td align="center">ab</td><td align="center">09</td><td align="center">cf</td></tr><tr><td align="center">7e</td><td align="center">ae</td><td align="center">f7</td><td align="center">cf</td><td align="center">4f</td></tr><tr><td align="center">15</td><td align="center">d2</td><td align="center">15</td><td align="center">4f</td><td align="center">3c</td></tr><tr><td align="center">16</td><td align="center">a6</td><td align="center">88</td><td align="center">3c</td><td align="center">09</td></tr></tbody></table><p>w’[i]&#x3D;w[i-1]左移一个字节得到。<br>w’[4]&#x3D;w[3]左移一个字节得到&#x3D;{09,cf,4f,3c}左移一个字节&#x3D;{cf,4f,3c,09}</p><p>2）分别对w’[i]的每个字节进行S盒替换，本质上就是查表，再替换为另一个字节。<br>即查表后为w’‘[i]。<br>例如，w’[4]查表后的w’’[4]&#x3D;{8a,84,eb,01}，需s盒的自行查看。</p><p>3）将前两步的结果同轮常量Rcon[j]进行异或，j表示轮数，Rcon[j]如下图所示</p><table><thead><tr><th align="center">j</th><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th></tr></thead><tbody><tr><td align="center">Rcon[j]</td><td align="center">01 00 00 00</td><td align="center">02 00 00 00</td><td align="center">04 00 00 00</td><td align="center">08 00 00 00</td><td align="center">10 00 00 00</td></tr><tr><td align="center">j</td><td align="center">6</td><td align="center">7</td><td align="center">8</td><td align="center">9</td><td align="center">10</td></tr><tr><td align="center">Rcon[j]</td><td align="center">20 00 00 00</td><td align="center">40 00 00 00</td><td align="center">80 00 00 00</td><td align="center">1B 00 00 00</td><td align="center">36 00 00 00</td></tr></tbody></table><p>那么w[i]&#x3D;w[i-4]⊕w’[i]⊕Rcon[j]，此时j&#x3D;1，因为为第一轮。<br>即w[4]&#x3D;w[0]⊕w’‘[4]⊕Rcon[1]，<br>那么w[8]&#x3D;w[4]⊕w’’[8]⊕Rcon[2],……</p><p><strong>如果i≠4的倍数</strong>，即i为每组的第二、三、四列，则执行以下一个步骤<br>即w[i]&#x3D;w[i-4]⊕w[i-1]<br>例如w[5]&#x3D;w[1]⊕w[4]，w[6]&#x3D;w[2]⊕[5]，……</p><p>最终的到一个扩展密钥：{w[4]，w[5]，w[6]，w[7]}，之后的每一轮密钥都是在前一轮基础上形成的。</p><p>可能说的不是很明白，后续将会补充。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/xuliangxing/p/7987282.html">STM32 IAP升级AES256加密 应用及源码</a></li><li><a href="https://blog.csdn.net/jhgj56/article/details/143113170">【算法】【AES】加密算法详解</a></li><li><a href="https://www.cnblogs.com/uftwkb24/p/9712374.html">C#调用dll提示”试图加载格式不正确的程序”原因及解决方法</a></li><li><a href="https://blog.csdn.net/yangbingnew/article/details/135091784">解决 C# 调用DLL时 报“ 试图加载格式不正确的程序“（亲自验证）</a></li><li><a href="https://jingyan.baidu.com/article/ad310e80bda0861849f49e9e.html">解决64位dll“error LNK1561: 必须定义入口点”</a></li><li><a href="https://blog.csdn.net/hfeizi/article/details/7289868">1&gt;LINK : fatal error LNK1561: 必须定义入口点</a></li><li><a href="https://www.jb51.net/article/276463.htm">C#中实现AES算法加密解读</a></li><li><a href="https://www.cnblogs.com/linzheng/archive/2011/02/20/1959110.html">用C#实现AES加密和解密</a></li><li><a href="https://blog.csdn.net/weixin_44565944/article/details/108679381">AES加密算法详解（图文解释）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Csharp算法之AES实现</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="AES" scheme="https://zml3589110.github.io/categories/AES/"/>
    
    <category term="算法" scheme="https://zml3589110.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="IAP" scheme="https://zml3589110.github.io/tags/IAP/"/>
    
    <category term="hex" scheme="https://zml3589110.github.io/tags/hex/"/>
    
    <category term="bin" scheme="https://zml3589110.github.io/tags/bin/"/>
    
    <category term="BootLoader" scheme="https://zml3589110.github.io/tags/BootLoader/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="OTA" scheme="https://zml3589110.github.io/tags/OTA/"/>
    
    <category term="算法" scheme="https://zml3589110.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="AES" scheme="https://zml3589110.github.io/tags/AES/"/>
    
    <category term="对称算法" scheme="https://zml3589110.github.io/tags/%E5%AF%B9%E7%A7%B0%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://zml3589110.github.io/posts/22.html"/>
    <id>https://zml3589110.github.io/posts/22.html</id>
    <published>2024-09-16T02:34:42.779Z</published>
    <updated>2024-11-02T09:10:07.777Z</updated>
    
    <content type="html"><![CDATA[<!doctype html><html data-n-head-ssr lang="zh_CN" data-n-head="%7B%22lang%22:%7B%22ssr%22:%22zh_CN%22%7D%7D">  <head >    <title>求助用UC3879做感应加热电源的频率跟踪问题！！-电源网</title><meta data-n-head="ssr" charset="utf-8"><meta data-n-head="ssr" name="viewport" content="width=device-width, initial-scale=1"><meta data-n-head="ssr" name="format-detection" content="telephone=no"><meta data-n-head="ssr" data-hid="description" name="description" content="我想用UC3879（或3875）做感应加热电源，现在在频率跟踪上一直找不好好的方法，请各位前辈指明一个方向，如果用4046，又该是怎样的一个方案。谢谢了！"><meta data-n-head="ssr" data-hid="keywords" name="keywords" content="求助用UC3879做感应加热电源的频率跟踪问题！！"><base href="/"><link data-n-head="ssr" rel="icon" type="image/x-icon" href="https://www.dianyuan.com/statics/image/dianyuan.ico"><link data-n-head="ssr" rel="stylesheet" href="https://g.alicdn.com/de/prismplayer/2.8.2/skins/default/aliplayer-min.css"><script data-n-head="ssr" src="https://g.alicdn.com/de/prismplayer/2.8.2/aliplayer-min.js"></script><script data-n-head="ssr" type="text/javascript" src="https://hm.baidu.com/hm.js?dd2486feb652190c6d492457baf80d7b"></script><link rel="preload" href="https://static.dianyuan.com/f34f517.js" as="script"><link rel="preload" href="https://static.dianyuan.com/40.616671c5f50bb562b0d6.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/e3a2156.css" as="style"><link rel="preload" href="https://static.dianyuan.com/192.b3a6c12e2f180fd7475f.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/d47ad41.css" as="style"><link rel="preload" href="https://static.dianyuan.com/39.698ad46ce51d0cb77c8c.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/9f0ca9a.css" as="style"><link rel="preload" href="https://static.dianyuan.com/233.c9127c92456b6d496a5a.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/61c8455.css" as="style"><link rel="preload" href="https://static.dianyuan.com/194.8cbde047d3db9a0a41a9.1725334704076.js" as="script"><link rel="stylesheet" href="https://static.dianyuan.com/css/e3a2156.css"><link rel="stylesheet" href="https://static.dianyuan.com/css/d47ad41.css"><link rel="stylesheet" href="https://static.dianyuan.com/css/9f0ca9a.css"><link rel="stylesheet" href="https://static.dianyuan.com/css/61c8455.css">  </head>  <body >    <div data-server-rendered="true" id="__nuxt"><!----><div id="__layout"><div id="app" data-v-9dccfc04><div data-v-0dc4e231 data-v-9dccfc04><div data-v-7ad05fe6 data-v-0dc4e231><!----> <section class="el-container container" data-v-3789a8ff data-v-7ad05fe6><!----> <div class="container-content main-container" data-v-3789a8ff><!----> <div class="topic-container" data-v-7ad05fe6><div class="exist-box" data-v-7ad05fe6><ul class="fixed-btn-box" data-v-7ad05fe6><li class="btn-item m-b-20" data-v-7ad05fe6><div class="num" style="display:none;" data-v-7ad05fe6>              0            </div> <div class="icon-box m-b-8" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>回复</div></li> <li class="btn-item m-b-20" data-v-7ad05fe6><div class="icon-box m-b-8" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>收藏</div></li> <li class="btn-item m-b-20" data-v-7ad05fe6><div class="icon-box m-b-8" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>点赞</div></li> <li class="btn-item m-b-20 qrcode-container" data-v-7ad05fe6><div class="icon-box m-b-8 transparent-bg" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>分享</div> <div class="qrcode-box" data-v-7ad05fe6><div id="qrcode1726453824054" class="img" data-v-2c858015 data-v-7ad05fe6></div></div></li> <li class="btn-item m-b-20" data-v-7ad05fe6><div class="line" data-v-7ad05fe6></div></li> <li class="btn-item" data-v-7ad05fe6><div class="icon-box m-b-8 transparent-bg" data-v-7ad05fe6><a href="/bbs/editor?fid=15" target="_blank" data-v-7ad05fe6><svg aria-hidden="true" class="svg-icon" data-v-78ce89ca data-v-7ad05fe6><use xlink:href="#icon-bbs-newtopic" data-v-78ce89ca></use></svg></a></div> <div class="icon-text" data-v-7ad05fe6>发新帖</div></li></ul> <div class="crumb-search-container" data-v-7ad05fe6><ul class="crumbs-container clearfix topic-crubms m-t-31 m-b-30" style="width:auto;margin-left:0;margin-top:2px;" data-v-8f394a1c data-v-7ad05fe6><li class="crumbs-item fl" data-v-8f394a1c><span data-v-8f394a1c><a href="/bbs" class="nuxt-link-active" data-v-8f394a1c>论坛首页</a> <i class="el-icon-arrow-right" data-v-8f394a1c></i></span></li><li class="crumbs-item fl" data-v-8f394a1c><span data-v-8f394a1c><a href="/bbs/hanjie" data-v-8f394a1c>焊接/电磁感应</a> <i class="el-icon-arrow-right" data-v-8f394a1c></i></span></li><li class="crumbs-item fl" data-v-8f394a1c><span data-v-8f394a1c>求助用UC3879做感应加热电源的频率跟踪问题！！</span></li></ul> <div class="search-container right-search" style="margin-bottom:15px;" data-v-171769a1 data-v-7ad05fe6><img src="https://dianyuan-public.oss-cn-shenzhen.aliyuncs.com/static/dianyuanwang/BBS/PC/allsearch.png" class="searchicon" data-v-171769a1> <form class="el-form form-box" style="width:300px;" data-v-171769a1><div class="el-form-item el-form-item--medium" data-v-171769a1><!----><div class="el-form-item__content"><div class="title-ipt el-input el-input--medium primary" style="width:300px;" data-v-171769a1><!----><input type="text" autocomplete="off" placeholder="请输入关键词" class="el-input__inner"><!----><!----><!----><!----></div> <!----><!----></div></div></form></div></div> <div class="main" data-v-7ad05fe6><div class="content-container" style="width:800px;" data-v-7ad05fe6><div class="main-body m-b-15" data-v-7ad05fe6><h1 class="topic-title m-b-20" data-v-7ad05fe6>求助用UC3879做感应加热电源的频率跟踪问题！！</h1> <!----><!----><!----> <div id="contentBody" class="content m-b-60" data-v-7ad05fe6>我想用UC3879（或3875）做感应加热电源，现在在频率跟踪上一直找不好好的方法，请各位前辈指明一个方向，如果用4046，又该是怎样的一个方案。谢谢了！</div> <!----> <!----> <!----> <!----></div> <!----> <!----> <!----> <!----> <!----> <!----> <div class="reply-container" data-v-ae389e34 data-v-7ad05fe6><div id="replyTop" class="header" data-v-ae389e34><div class="title" data-v-ae389e34>全部回复(26)</div> <div class="owner font-sm" data-v-ae389e34><label class="el-checkbox" data-v-ae389e34><span class="el-checkbox__input"><span class="el-checkbox__inner"></span><input type="checkbox" aria-hidden="false" class="el-checkbox__original"></span><span class="el-checkbox__label"><span data-v-ae389e34>只看楼主</span><!----></span></label></div> <div class="forward font-sm m-l-40 color-de" data-v-ae389e34>      正序查看    </div> <div class="line" data-v-ae389e34></div> <div class="inverted font-sm m-r-25" data-v-ae389e34>      倒序查看    </div></div> <div class="empty" style="display:none;" data-v-ae389e34><svg aria-hidden="true" class="empty-icon svg-icon" data-v-78ce89ca data-v-ae389e34><use xlink:href="#icon-comment-union" data-v-78ce89ca></use></svg> <div class="empty-tip" data-v-ae389e34>现在还没有回复呢，说说你的想法</div></div> <div id="replyBody" class="m-b-30" data-v-ae389e34><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/370948#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/370948#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            led公子</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>2</span></div> <div class="time" data-v-0ac9a365>2013-09-20 09:13</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><!----> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>3879用的BUCK看下</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>3</span></div> <div class="time" data-v-0ac9a365>2013-09-20 09:34</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@led公子</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>3879用的BUCK看下</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>你说在我不理解，能稍祥细一点吗,谢谢！</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>4</span></div> <div class="time" data-v-0ac9a365>2013-09-27 20:04</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>你说在我不理解，能稍祥细一点吗,谢谢！</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>我想用UC3879（或3875）做感应加热电源，现在在频率跟踪上一直找不好好的方法，请各位前辈指明一个方向，如果用4046，又该是怎样的一个方案。谢谢了！</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/134089#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/134089#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            firefox886</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>5</span></div> <div class="time" data-v-0ac9a365>2013-09-28 12:55</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>我想用UC3879（或3875）做感应加热电源，现在在频率跟踪上一直找不好好的方法，请各位前辈指明一个方向，如果用4046，又该是怎样的一个方案。谢谢了！</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><img src="http://www.dianyuan.com/statics/js/kindeditor/plugins/emoticons/images/13.gif" /></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>6</span></div> <div class="time" data-v-0ac9a365>2013-09-28 16:26</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@firefox886</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>[图片]</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>别笑呀，请指导一下吧，多谢了！</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/134089#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/134089#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            firefox886</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>7</span></div> <div class="time" data-v-0ac9a365>2013-09-28 18:48</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>别笑呀，请指导一下吧，多谢了！</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>你这个好像搞了好几年了吧？</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>8</span></div> <div class="time" data-v-0ac9a365>2013-09-29 09:53</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@firefox886</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>你这个好像搞了好几年了吧？</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>是的，前年就开始了，中间身体不好，停了一年多，现在又开始了，能指导一下，我非常感激！</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>9</span></div> <div class="time" data-v-0ac9a365>2013-09-30 18:16</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>是的，前年就开始了，中间身体不好，停了一年多，现在又开始了，能指导一下，我非常感激！</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>移相比频率跟踪难做好，难的能做容易的不能做？</p><p>频率跟踪就是保持你移相的零相位或者是设定的一个小的相位差，但是频率是变化的，对做了移相的不是很简单的吗？</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>10</span></div> <div class="time" data-v-0ac9a365>2013-09-30 21:33</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>移相比频率跟踪难做好，难的能做容易的不能做？频率跟踪就是保持你移相的零相位或者是设定的一个小的相位差，但是频率是变化的，对做了移相的不是很简单的吗？</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>这是我做的试验，大家帮我看看<img src="http://www.dianyuan.com/statics/image/icon/zip.gif" /><a title="附件" href="http://u.dianyuan.com/upload/space/2013/09/30/1380547763-899868.zip">Camera_20111203_201513电流滞后</a>&nbsp;<img src="http://www.dianyuan.com/statics/image/icon/zip.gif" /><a title="附件" href="http://u.dianyuan.com/upload/space/2013/09/30/1380547763-899868.zip">电流与电压同相</a>&nbsp;是不是频率跟踪了，还有，那一个波形是稍好一点的。方波是UC3879的A相输入波，正弦波，是串联电感电容的上磁环上的波形。</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>11</span></div> <div class="time" data-v-0ac9a365>2013-10-02 12:24</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>这是我做的试验，大家帮我看看[图片]Camera_20111203_201513电流滞后&nbsp;[图片]电流与电压同相&nbsp;是不是频率跟踪了，还有，那一个波形是稍好一点的。方波是UC3879的A相输入波，正弦波，是串联电感电容的上磁环上的波形。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>怎么没人回贴呀！</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/98353#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/98353#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            王秋冬</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.5</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>12</span></div> <div class="time" data-v-0ac9a365>2013-10-04 21:33</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>怎么没人回贴呀！</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>你发的附件打不开</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>13</span></div> <div class="time" data-v-0ac9a365>2013-10-05 08:50</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@王秋冬</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>你发的附件打不开</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>你好QQ号，我用QQ发给你！</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>14</span></div> <div class="time" data-v-0ac9a365>2013-10-07 14:17</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>这是我做的试验，大家帮我看看[图片]Camera_20111203_201513电流滞后&nbsp;[图片]电流与电压同相&nbsp;是不是频率跟踪了，还有，那一个波形是稍好一点的。方波是UC3879的A相输入波，正弦波，是串联电感电容的上磁环上的波形。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>你把没有经过移相的半边桥臂的上管或下管的UCE波形图发上来，要用模拟示波器测的，数字式示波器测出的UCE&nbsp;波形就不要发了，那是看不出电流相位的，也就无法判别是否跟踪。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>15</span></div> <div class="time" data-v-0ac9a365>2013-10-08 19:49</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>你把没有经过移相的半边桥臂的上管或下管的UCE波形图发上来，要用模拟示波器测的，数字式示波器测出的UCE&nbsp;波形就不要发了，那是看不出电流相位的，也就无法判别是否跟踪。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>我想先用全桥做个实验，就是做个小的几百瓦的振荡电路，电感，与电容选用什么样的，参数是多少？谢谢大家。</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>16</span></div> <div class="time" data-v-0ac9a365>2013-10-08 20:42</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>我想先用全桥做个实验，就是做个小的几百瓦的振荡电路，电感，与电容选用什么样的，参数是多少？谢谢大家。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>功率与线圈尺寸及负载有关，光说个几百瓦的功率无从下手。还是任意选个负载，任意绕个线圈。工作在谐振状态，看实际功率，然后再来修正线圈达到你要求的功率。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>17</span></div> <div class="time" data-v-0ac9a365>2013-10-08 21:21</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>功率与线圈尺寸及负载有关，光说个几百瓦的功率无从下手。还是任意选个负载，任意绕个线圈。工作在谐振状态，看实际功率，然后再来修正线圈达到你要求的功率。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>好好！我发个图，这是胡老师，两年前给的电路，我改了一下，看我这样可行不！</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>18</span></div> <div class="time" data-v-0ac9a365>2013-10-08 21:33</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>好好！我发个图，这是胡老师，两年前给的电路，我改了一下，看我这样可行不！</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>就是那个频率跟踪电路，多谢指点！<img src="http://www.dianyuan.com/statics/image/icon/zip.gif" /><a title="附件" href="http://u.dianyuan.com/upload/space/2013/10/08/1381239204-902067.zip">Previous Backup of 频率跟踪电路</a>&nbsp;</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>19</span></div> <div class="time" data-v-0ac9a365>2013-10-08 21:42</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>就是那个频率跟踪电路，多谢指点！[图片]PreviousBackupof频率跟踪电路&nbsp;</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>打开没有东西</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>20</span></div> <div class="time" data-v-0ac9a365>2013-10-09 11:05</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>打开没有东西</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>怎么上传不上去呀</p><p>&nbsp;</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>21</span></div> <div class="time" data-v-0ac9a365>2013-10-09 11:34</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>怎么上传不上去呀&nbsp;</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><img src="http://www.dianyuan.com/statics/image/icon/zip.gif" /><a title="附件" href="http://u.dianyuan.com/upload/space/2013/10/09/1381289636-902368.zip">Previous Backup of 频率跟踪电路</a>&nbsp;</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>22</span></div> <div class="time" data-v-0ac9a365>2013-10-09 11:40</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>[图片]PreviousBackupof频率跟踪电路&nbsp;</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>这次打印出来，扫描一下<a title="点击看大图" href="http://u.dianyuan.com/upload/space/2013/10/09/1381290011-902401.jpg" target="_blank"><img src="http://u.dianyuan.com/upload/t/space/2013/10/09/1381290011-902401.jpg?x-oss-process=image/format,webp" /></a>&nbsp;</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>23</span></div> <div class="time" data-v-0ac9a365>2013-10-10 16:24</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>这次打印出来，扫描一下[图片]&nbsp;</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>这图太小，看不清，用protel原图发我邮箱吧。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/462116#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/462116#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            kfzyly</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.4</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>24</span></div> <div class="time" data-v-0ac9a365>2013-10-11 09:06</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>这图太小，看不清，用protel原图发我邮箱吧。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>沈工，你的邮箱是？麻烦告诉我一下.</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>25</span></div> <div class="time" data-v-0ac9a365>2013-10-11 11:29</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>沈工，你的邮箱是？麻烦告诉我一下.</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>发QQ邮箱，你有我的号的。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/459681#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/459681#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            ny747359828</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.3</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>26</span></div> <div class="time" data-v-0ac9a365>2017-10-29 23:28</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@kfzyly</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>这次打印出来，扫描一下[图片]&nbsp;</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>电路图有问题</p><p></p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/359635#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/359635#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            飘飘飘</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.6</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>27</span></div> <div class="time" data-v-0ac9a365>2017-11-01 08:23</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@ny747359828</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>电路图有问题</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>哪有问题？</p><p></p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div></div> <!----> <!----></div></div> <div class="side-right" data-v-7ad05fe6><!----> <div class="topic-read" data-v-59aca5a0 data-v-7ad05fe6><div class="head" data-v-59aca5a0>工程师都在看</div> <div class="body" data-v-59aca5a0><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2739836.html" target="_blank" data-v-59aca5a0>          共模电感需要测试饱和电流吗?        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/821964#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/821964#topic" target="_blank" class="username" data-v-59aca5a0>            大头oO          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2739996.html" target="_blank" data-v-59aca5a0>           NXP联网解决方案，助您轻松打造自动化应用        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/488528#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/488528#topic" target="_blank" class="username" data-v-59aca5a0>            电源网-fqd          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740067.html" target="_blank" data-v-59aca5a0>          副边LLC是什么原理        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/738763#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/738763#topic" target="_blank" class="username" data-v-59aca5a0>            ThreeBody          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740217.html" target="_blank" data-v-59aca5a0>          TEA2017调试遇到大小波 请教各位大神应该怎么解决        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/747281#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/747281#topic" target="_blank" class="username" data-v-59aca5a0>            爱学习的负豪          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740351.html" target="_blank" data-v-59aca5a0>          Littelfuse精选保护产品，检测并防止过热及过流等状况        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/488528#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/488528#topic" target="_blank" class="username" data-v-59aca5a0>            电源网-fqd          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div></div></div> <div class="topic-jh" style="display:none;" data-v-0882bfd0 data-v-7ad05fe6><div class="head" data-v-0882bfd0><span class="title" data-v-0882bfd0>精华推荐</span> <span class="btn" data-v-0882bfd0><i class="el-icon-refresh m-r-8" data-v-0882bfd0></i>换一换</span></div> <div class="body" data-v-0882bfd0></div></div></div></div></div></div> <div class="up-btn-box" style="margin-left:610px;" data-v-02ef3126 data-v-3789a8ff><div class="iconbutton" data-v-02ef3126><i class="el-icon-edit" data-v-02ef3126></i></div> <div data-v-02ef3126>立</div> <div data-v-02ef3126>即</div> <div data-v-02ef3126>发</div> <div data-v-02ef3126>帖</div></div> <div class="up-btn-box" style="margin-left:610px;display:none;" data-v-43a93d98 data-v-3789a8ff><i class="el-icon-arrow-up" data-v-43a93d98></i></div> <div class="qrcode-box" data-v-3789a8ff><img src="https://dianyuan-public.oss-cn-shenzhen.aliyuncs.com/static/dianyuanwang/BBS/PC/app-dowload-qrcode.png?x-oss-process=image/format,webp" class="qrcode-img" style="display:none;" data-v-3789a8ff></div></div> <!----> <!----></section> <!----></div></div> <!----></div></div></div><script>window.__NUXT__={serverRendered:true,routePath:"\"\u002Fbbs\u002F1453618.html\""};</script><script src="https://static.dianyuan.com/f34f517.js" defer></script><script src="https://static.dianyuan.com/233.c9127c92456b6d496a5a.1725334704076.js" defer></script><script src="https://static.dianyuan.com/194.8cbde047d3db9a0a41a9.1725334704076.js" defer></script><script src="https://static.dianyuan.com/40.616671c5f50bb562b0d6.1725334704076.js" defer></script><script src="https://static.dianyuan.com/192.b3a6c12e2f180fd7475f.1725334704076.js" defer></script><script src="https://static.dianyuan.com/39.698ad46ce51d0cb77c8c.1725334704076.js" defer></script>  </body></html>]]></content>
    
    
      
      
    <summary type="html">&lt;!doctype html&gt;
&lt;html data-n-head-ssr lang=&quot;zh_CN&quot; data-n-head=&quot;%7B%22lang%22:%7B%22ssr%22:%22zh_CN%22%7D%7D&quot;&gt;
  &lt;head &gt;
    &lt;title&gt;求助用UC387</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>求助用UC3879做感应加热电源的频率跟踪问题</title>
    <link href="https://zml3589110.github.io/posts/2071891534.html"/>
    <id>https://zml3589110.github.io/posts/2071891534.html</id>
    <published>2024-09-16T02:32:20.000Z</published>
    <updated>2025-01-08T06:50:49.967Z</updated>
    
    <content type="html"><![CDATA[<iframe src="求助用UC3879做感应加热电源的频率跟踪问题！！\求助用UC3879做感应加热电源的频率跟踪问题！！-电源网.html" width="100%" height="1000px"></iframe><p>kfzyly<br>LV.4</p><ul><li>关注+ 私信<br>我想用UC3879（或3875）做感应加热电源，现在在频率跟踪上一直找不好好的方法，请各位前辈指明一个方向，如果用4046，又该是怎样的一个方案。谢谢了！</li></ul><p>led公子<br>LV.9<br>2<br>2013-09-20 09:13<br>3879用的BUCK看下</p><p>kfzyly<br>LV.4<br>3<br>2013-09-20 09:34<br>@led公子<br>3879用的BUCK看下<br>你说在我不理解，能稍祥细一点吗,谢谢！</p><p>kfzyly<br>LV.4<br>4<br>2013-09-27 20:04<br>@kfzyly<br>你说在我不理解，能稍祥细一点吗,谢谢！<br>我想用UC3879（或3875）做感应加热电源，现在在频率跟踪上一直找不好好的方法，请各位前辈指明一个方向，如果用4046，又该是怎样的一个方案。谢谢了！</p><p>firefox886<br>LV.9<br>5<br>2013-09-28 12:55<br>@kfzyly<br>我想用UC3879（或3875）做感应加热电源，现在在频率跟踪上一直找不好好的方法，请各位前辈指明一个方向，如果用4046，又该是怎样的一个方案。谢谢了！</p><p>kfzyly<br>LV.4<br>6<br>2013-09-28 16:26<br>@firefox886<br>[图片]<br>别笑呀，请指导一下吧，多谢了！</p><p>firefox886<br>LV.9<br>7<br>2013-09-28 18:48<br>@kfzyly<br>别笑呀，请指导一下吧，多谢了！<br>你这个好像搞了好几年了吧？</p><p>kfzyly<br>LV.4<br>8<br>2013-09-29 09:53<br>@firefox886<br>你这个好像搞了好几年了吧？<br>是的，前年就开始了，中间身体不好，停了一年多，现在又开始了，能指导一下，我非常感激！</p><p>igbtsy<br>LV.9<br>9<br>2013-09-30 18:16<br>@kfzyly<br>是的，前年就开始了，中间身体不好，停了一年多，现在又开始了，能指导一下，我非常感激！<br>移相比频率跟踪难做好，难的能做容易的不能做？</p><p>频率跟踪就是保持你移相的零相位或者是设定的一个小的相位差，但是频率是变化的，对做了移相的不是很简单的吗？</p><p>kfzyly<br>LV.4<br>10<br>2013-09-30 21:33<br>@igbtsy<br>移相比频率跟踪难做好，难的能做容易的不能做？频率跟踪就是保持你移相的零相位或者是设定的一个小的相位差，但是频率是变化的，对做了移相的不是很简单的吗？<br>这是我做的试验，大家帮我看看<a href="%E6%B1%82%E5%8A%A9%E7%94%A8UC3879%E5%81%9A%E6%84%9F%E5%BA%94%E5%8A%A0%E7%83%AD%E7%94%B5%E6%BA%90%E7%9A%84%E9%A2%91%E7%8E%87%E8%B7%9F%E8%B8%AA%E9%97%AE%E9%A2%98%EF%BC%81%EF%BC%81%5C1380547763-899868.zip">Camera_20111203_201513</a>电流滞后 电流与电压同相 是不是频率跟踪了，还有，那一个波形是稍好一点的。方波是UC3879的A相输入波，正弦波，是串联电感电容的上磁环上的波形。</p><p>kfzyly<br>LV.4<br>11<br>2013-10-02 12:24<br>@kfzyly<br>这是我做的试验，大家帮我看看[图片]Camera_20111203_201513电流滞后 [图片]电流与电压同相 是不是频率跟踪了，还有，那一个波形是稍好一点的。方波是UC3879的A相输入波，正弦波，是串联电感电容的上磁环上的波形。<br>怎么没人回贴呀！</p><p>王秋冬<br>LV.5<br>12<br>2013-10-04 21:33<br>@kfzyly<br>怎么没人回贴呀！<br>你发的附件打不开</p><p>kfzyly<br>LV.4<br>13<br>2013-10-05 08:50<br>@王秋冬<br>你发的附件打不开<br>你好QQ号，我用QQ发给你！</p><p>igbtsy<br>LV.9<br>14<br>2013-10-07 14:17<br>@kfzyly<br>这是我做的试验，大家帮我看看[图片]Camera_20111203_201513电流滞后 [图片]电流与电压同相 是不是频率跟踪了，还有，那一个波形是稍好一点的。方波是UC3879的A相输入波，正弦波，是串联电感电容的上磁环上的波形。<br>你把没有经过移相的半边桥臂的上管或下管的UCE波形图发上来，要用模拟示波器测的，数字式示波器测出的UCE 波形就不要发了，那是看不出电流相位的，也就无法判别是否跟踪。</p><p>kfzyly<br>LV.4<br>15<br>2013-10-08 19:49<br>@igbtsy<br>你把没有经过移相的半边桥臂的上管或下管的UCE波形图发上来，要用模拟示波器测的，数字式示波器测出的UCE 波形就不要发了，那是看不出电流相位的，也就无法判别是否跟踪。<br>我想先用全桥做个实验，就是做个小的几百瓦的振荡电路，电感，与电容选用什么样的，参数是多少？谢谢大家。</p><p>igbtsy<br>LV.9<br>16<br>2013-10-08 20:42<br>@kfzyly<br>我想先用全桥做个实验，就是做个小的几百瓦的振荡电路，电感，与电容选用什么样的，参数是多少？谢谢大家。<br>功率与线圈尺寸及负载有关，光说个几百瓦的功率无从下手。还是任意选个负载，任意绕个线圈。工作在谐振状态，看实际功率，然后再来修正线圈达到你要求的功率。</p><p>kfzyly<br>LV.4<br>17<br>2013-10-08 21:21<br>@igbtsy<br>功率与线圈尺寸及负载有关，光说个几百瓦的功率无从下手。还是任意选个负载，任意绕个线圈。工作在谐振状态，看实际功率，然后再来修正线圈达到你要求的功率。<br>好好！我发个图，这是胡老师，两年前给的电路，我改了一下，看我这样可行不！</p><p>kfzyly<br>LV.4<br>18<br>2013-10-08 21:33<br>@kfzyly<br>好好！我发个图，这是胡老师，两年前给的电路，我改了一下，看我这样可行不！<br>就是那个频率跟踪电路，多谢指点！<a href="%E6%B1%82%E5%8A%A9%E7%94%A8UC3879%E5%81%9A%E6%84%9F%E5%BA%94%E5%8A%A0%E7%83%AD%E7%94%B5%E6%BA%90%E7%9A%84%E9%A2%91%E7%8E%87%E8%B7%9F%E8%B8%AA%E9%97%AE%E9%A2%98%EF%BC%81%EF%BC%81%5C1381239204-902067%E9%A2%91%E7%8E%87%E8%B7%9F%E8%B8%AA%E7%94%B5%E8%B7%AF.zip">Previous Backup of 频率跟踪电路 </a></p><p>igbtsy<br>LV.9<br>19<br>2013-10-08 21:42<br>@kfzyly<br>就是那个频率跟踪电路，多谢指点！[图片]PreviousBackupof频率跟踪电路<br>打开没有东西</p><p>kfzyly<br>LV.4<br>20<br>2013-10-09 11:05<br>@igbtsy<br>打开没有东西<br>怎么上传不上去呀</p><p>kfzyly<br>LV.4<br>21<br>2013-10-09 11:34<br>@kfzyly<br>怎么上传不上去呀<br>Previous Backup of 频率跟踪电路 </p><p>kfzyly<br>LV.4<br>22<br>2013-10-09 11:40<br>@kfzyly<br>[图片]PreviousBackupof频率跟踪电路<br>这次打印出来，扫描一下 </p> <img src="/posts/2071891534/1381290011-902401.jpg" class="" title="img"><p>igbtsy<br>LV.9<br>23<br>2013-10-10 16:24<br>@kfzyly<br>这次打印出来，扫描一下[图片]<br>这图太小，看不清，用protel原图发我邮箱吧。</p><p>kfzyly<br>LV.4<br>24<br>2013-10-11 09:06<br>@igbtsy<br>这图太小，看不清，用protel原图发我邮箱吧。<br>沈工，你的邮箱是？麻烦告诉我一下.</p><p>igbtsy<br>LV.9<br>25<br>2013-10-11 11:29<br>@kfzyly<br>沈工，你的邮箱是？麻烦告诉我一下.<br>发QQ邮箱，你有我的号的。</p><p>ny747359828<br>LV.3<br>26<br>2017-10-29 23:28<br>@kfzyly<br>这次打印出来，扫描一下[图片]<br>电路图有问题</p><p>飘飘飘<br>LV.6<br>27<br>2017-11-01 08:23<br>@ny747359828<br>电路图有问题<br>哪有问题？</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.dianyuan.com/bbs/1453618.html">求助用UC3879做感应加热电源的频率跟踪问题！！</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">求助用UC3879做感应加热电源的频率跟踪问题！！</summary>
    
    
    
    <category term="电磁炉" scheme="https://zml3589110.github.io/categories/%E7%94%B5%E7%A3%81%E7%82%89/"/>
    
    <category term="波形" scheme="https://zml3589110.github.io/categories/%E6%B3%A2%E5%BD%A2/"/>
    
    
    <category term="电磁炉" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E7%A3%81%E7%82%89/"/>
    
    <category term="半桥" scheme="https://zml3589110.github.io/tags/%E5%8D%8A%E6%A1%A5/"/>
    
    <category term="CE波形" scheme="https://zml3589110.github.io/tags/CE%E6%B3%A2%E5%BD%A2/"/>
    
    <category term="波形查看" scheme="https://zml3589110.github.io/tags/%E6%B3%A2%E5%BD%A2%E6%9F%A5%E7%9C%8B/"/>
    
    <category term="电压" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E5%8E%8B/"/>
    
    <category term="电流" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E6%B5%81/"/>
    
    <category term="电容" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E5%AE%B9/"/>
    
    <category term="IGBT" scheme="https://zml3589110.github.io/tags/IGBT/"/>
    
    <category term="igbtsy" scheme="https://zml3589110.github.io/tags/igbtsy/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://zml3589110.github.io/posts/15.html"/>
    <id>https://zml3589110.github.io/posts/15.html</id>
    <published>2024-09-16T02:28:48.245Z</published>
    <updated>2024-11-02T09:10:07.613Z</updated>
    
    <content type="html"><![CDATA[<!doctype html><html data-n-head-ssr lang="zh_CN" data-n-head="%7B%22lang%22:%7B%22ssr%22:%22zh_CN%22%7D%7D">  <head >    <title>理论和实际不符合！电磁炉加锅后电感量的变化情况！-电源网</title><meta data-n-head="ssr" charset="utf-8"><meta data-n-head="ssr" name="viewport" content="width=device-width, initial-scale=1"><meta data-n-head="ssr" name="format-detection" content="telephone=no"><meta data-n-head="ssr" data-hid="description" name="description" content="理论上，电磁炉加锅后相当于电感线圈加上了一个u值较大的物质，总体等效u值应该变大，电感量变大！我查了网上一些资料说，电磁炉检锅用脉冲检锅，其原理也是电感变大啊！但是我加锅以后电感量却是减小了！我拿来磁芯加在上面是电感变大，而加锅子后却变小！求大shen么解释a!"><meta data-n-head="ssr" data-hid="keywords" name="keywords" content="理论和实际不符合！电磁炉加锅后电感量的变化情况！"><base href="/"><link data-n-head="ssr" rel="icon" type="image/x-icon" href="https://www.dianyuan.com/statics/image/dianyuan.ico"><link data-n-head="ssr" rel="stylesheet" href="https://g.alicdn.com/de/prismplayer/2.8.2/skins/default/aliplayer-min.css"><script data-n-head="ssr" src="https://g.alicdn.com/de/prismplayer/2.8.2/aliplayer-min.js"></script><script data-n-head="ssr" type="text/javascript" src="https://hm.baidu.com/hm.js?dd2486feb652190c6d492457baf80d7b"></script><link rel="preload" href="https://static.dianyuan.com/f34f517.js" as="script"><link rel="preload" href="https://static.dianyuan.com/40.616671c5f50bb562b0d6.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/e3a2156.css" as="style"><link rel="preload" href="https://static.dianyuan.com/192.b3a6c12e2f180fd7475f.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/d47ad41.css" as="style"><link rel="preload" href="https://static.dianyuan.com/39.698ad46ce51d0cb77c8c.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/9f0ca9a.css" as="style"><link rel="preload" href="https://static.dianyuan.com/233.c9127c92456b6d496a5a.1725334704076.js" as="script"><link rel="preload" href="https://static.dianyuan.com/css/61c8455.css" as="style"><link rel="preload" href="https://static.dianyuan.com/194.8cbde047d3db9a0a41a9.1725334704076.js" as="script"><link rel="stylesheet" href="https://static.dianyuan.com/css/e3a2156.css"><link rel="stylesheet" href="https://static.dianyuan.com/css/d47ad41.css"><link rel="stylesheet" href="https://static.dianyuan.com/css/9f0ca9a.css"><link rel="stylesheet" href="https://static.dianyuan.com/css/61c8455.css">  </head>  <body >    <div data-server-rendered="true" id="__nuxt"><!----><div id="__layout"><div id="app" data-v-9dccfc04><div data-v-0dc4e231 data-v-9dccfc04><div data-v-7ad05fe6 data-v-0dc4e231><!----> <section class="el-container container" data-v-3789a8ff data-v-7ad05fe6><!----> <div class="container-content main-container" data-v-3789a8ff><!----> <div class="topic-container" data-v-7ad05fe6><div class="exist-box" data-v-7ad05fe6><ul class="fixed-btn-box" data-v-7ad05fe6><li class="btn-item m-b-20" data-v-7ad05fe6><div class="num" style="display:none;" data-v-7ad05fe6>              0            </div> <div class="icon-box m-b-8" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>回复</div></li> <li class="btn-item m-b-20" data-v-7ad05fe6><div class="icon-box m-b-8" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>收藏</div></li> <li class="btn-item m-b-20" data-v-7ad05fe6><div class="icon-box m-b-8" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>点赞</div></li> <li class="btn-item m-b-20 qrcode-container" data-v-7ad05fe6><div class="icon-box m-b-8 transparent-bg" data-v-7ad05fe6><!----></div> <div class="icon-text" data-v-7ad05fe6>分享</div> <div class="qrcode-box" data-v-7ad05fe6><div id="qrcode1726453132625" class="img" data-v-2c858015 data-v-7ad05fe6></div></div></li> <li class="btn-item m-b-20" data-v-7ad05fe6><div class="line" data-v-7ad05fe6></div></li> <li class="btn-item" data-v-7ad05fe6><div class="icon-box m-b-8 transparent-bg" data-v-7ad05fe6><a href="/bbs/editor?fid=15" target="_blank" data-v-7ad05fe6><svg aria-hidden="true" class="svg-icon" data-v-78ce89ca data-v-7ad05fe6><use xlink:href="#icon-bbs-newtopic" data-v-78ce89ca></use></svg></a></div> <div class="icon-text" data-v-7ad05fe6>发新帖</div></li></ul> <div class="crumb-search-container" data-v-7ad05fe6><ul class="crumbs-container clearfix topic-crubms m-t-31 m-b-30" style="width:auto;margin-left:0;margin-top:2px;" data-v-8f394a1c data-v-7ad05fe6><li class="crumbs-item fl" data-v-8f394a1c><span data-v-8f394a1c><a href="/bbs" class="nuxt-link-active" data-v-8f394a1c>论坛首页</a> <i class="el-icon-arrow-right" data-v-8f394a1c></i></span></li><li class="crumbs-item fl" data-v-8f394a1c><span data-v-8f394a1c><a href="/bbs/hanjie" data-v-8f394a1c>焊接/电磁感应</a> <i class="el-icon-arrow-right" data-v-8f394a1c></i></span></li><li class="crumbs-item fl" data-v-8f394a1c><span data-v-8f394a1c>理论和实际不符合！电磁炉加锅后电感量的变化情况！</span></li></ul> <div class="search-container right-search" style="margin-bottom:15px;" data-v-171769a1 data-v-7ad05fe6><img src="https://dianyuan-public.oss-cn-shenzhen.aliyuncs.com/static/dianyuanwang/BBS/PC/allsearch.png" class="searchicon" data-v-171769a1> <form class="el-form form-box" style="width:300px;" data-v-171769a1><div class="el-form-item el-form-item--medium" data-v-171769a1><!----><div class="el-form-item__content"><div class="title-ipt el-input el-input--medium primary" style="width:300px;" data-v-171769a1><!----><input type="text" autocomplete="off" placeholder="请输入关键词" class="el-input__inner"><!----><!----><!----><!----></div> <!----><!----></div></div></form></div></div> <div class="main" data-v-7ad05fe6><div class="content-container" style="width:800px;" data-v-7ad05fe6><div class="main-body m-b-15" data-v-7ad05fe6><h1 class="topic-title m-b-20" data-v-7ad05fe6>理论和实际不符合！电磁炉加锅后电感量的变化情况！</h1> <!----><!----><!----> <div id="contentBody" class="content m-b-60" data-v-7ad05fe6>理论上，电磁炉加锅后相当于电感线圈加上了一个u值较大的物质，总体等效u值应该变大，电感量变大！我查了网上一些资料说，电磁炉检锅用脉冲检锅，其原理也是电感变大啊！但是我加锅以后电感量却是减小了！我拿来磁芯加在上面是电感变大，而加锅子后却变小！求大shen么解释a!</div> <!----> <!----> <!----> <!----></div> <!----> <!----> <!----> <!----> <!----> <!----> <div class="reply-container" data-v-ae389e34 data-v-7ad05fe6><div id="replyTop" class="header" data-v-ae389e34><div class="title" data-v-ae389e34>全部回复(13)</div> <div class="owner font-sm" data-v-ae389e34><label class="el-checkbox" data-v-ae389e34><span class="el-checkbox__input"><span class="el-checkbox__inner"></span><input type="checkbox" aria-hidden="false" class="el-checkbox__original"></span><span class="el-checkbox__label"><span data-v-ae389e34>只看楼主</span><!----></span></label></div> <div class="forward font-sm m-l-40 color-de" data-v-ae389e34>      正序查看    </div> <div class="line" data-v-ae389e34></div> <div class="inverted font-sm m-r-25" data-v-ae389e34>      倒序查看    </div></div> <div class="empty" style="display:none;" data-v-ae389e34><svg aria-hidden="true" class="empty-icon svg-icon" data-v-78ce89ca data-v-ae389e34><use xlink:href="#icon-comment-union" data-v-78ce89ca></use></svg> <div class="empty-tip" data-v-ae389e34>现在还没有回复呢，说说你的想法</div></div> <div id="replyBody" class="m-b-30" data-v-ae389e34><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/477202#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/477202#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            新月GG</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.10</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>2</span></div> <div class="time" data-v-0ac9a365>2013-08-19 08:58</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><!----> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>锅应该不算磁芯吧。变小的可能，也要考虑分布电容的影响。还有就是要注意下工作频率（测试频率）。</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/490680#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/490680#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            卡卡狄明阳</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.1</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>3</span></div> <div class="time" data-v-0ac9a365>2013-08-19 09:56</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@新月GG</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>锅应该不算磁芯吧。变小的可能，也要考虑分布电容的影响。还有就是要注意下工作频率（测试频率）。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>不算磁芯，但是都是有u值得物质啊。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/27882#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/27882#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            szprime</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.3</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>4</span></div> <div class="time" data-v-0ac9a365>2013-10-10 14:03</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@卡卡狄明阳</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>不算磁芯，但是都是有u值得物质啊。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>锅是磁芯物质，只是有涡流，极端比喻就像有无数个感应线路短路，所以电感量减少，就好像你测试变压器电感，短路了输出，只测试到了漏感。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>5</span></div> <div class="time" data-v-0ac9a365>2013-10-10 16:15</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@szprime</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>锅是磁芯物质，只是有涡流，极端比喻就像有无数个感应线路短路，所以电感量减少，就好像你测试变压器电感，短路了输出，只测试到了漏感。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>放上普通铁锅电感量变小，放上430等不锈铁锅，电感量变大。为了抛锅时的安全起见，有工厂把锅做成复底的凹锅，外面是普通铁皮锅的材料，里面是304材质的不锈钢。</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>6</span></div> <div class="time" data-v-0ac9a365>2013-10-11 11:33</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>放上普通铁锅电感量变小，放上430等不锈铁锅，电感量变大。为了抛锅时的安全起见，有工厂把锅做成复底的凹锅，外面是普通铁皮锅的材料，里面是304材质的不锈钢。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>为了传热效果与燃气炉相仿，大锅灶的锅也有用三层复合板压制的。最外面是430的，中间是铝板，内层是304的。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/134089#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/134089#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            firefox886</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>7</span></div> <div class="time" data-v-0ac9a365>2013-10-14 18:24</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@szprime</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>锅是磁芯物质，只是有涡流，极端比喻就像有无数个感应线路短路，所以电感量减少，就好像你测试变压器电感，短路了输出，只测试到了漏感。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>这个观点才是正确的！</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>8</span></div> <div class="time" data-v-0ac9a365>2013-10-14 20:51</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@firefox886</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>这个观点才是正确的！</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>直接用430锅做炒锅的，有些人不去解决电路的问题，直接把过流整定值放大到100多A，实在无法理解他们这样做的目的。应当按普通铁锅一样，过流整定值是超过额定最大功率电流的20%动作。这样做才是安全的。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/362294#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/362294#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            my.mai</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>9</span></div> <div class="time" data-v-0ac9a365>2013-10-15 08:32</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>直接用430锅做炒锅的，有些人不去解决电路的问题，直接把过流整定值放大到100多A，实在无法理解他们这样做的目的。应当按普通铁锅一样，过流整定值是超过额定最大功率电流的20%动作。这样做才是安全的。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365>这是矛和盾的故事。客户想用低价钱，买功率大的，抛锅要尽量大的功率，不允许老是关机。而企业限制于生产成本，销售价格，也不可能预留几倍的余量，功率元件都是刚好够用，甚至是超额使用了。一分价钱一分货，市场定律，市场决定了一切。再好的工程师，受制于老板给的成本指标，都只能妥协。30KW半桥的商用电磁炉机芯，有厂家卖1850元一台。</div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>10</span></div> <div class="time" data-v-0ac9a365>2013-10-15 15:08</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@my.mai</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>这是矛和盾的故事。客户想用低价钱，买功率大的，抛锅要尽量大的功率，不允许老是关机。而企业限制于生产成本，销售价格，也不可能预留几倍的余量，功率元件都是刚好够用，甚至是超额使用了。一分价钱一分货，市场定律，市场决定了一切。再好的工程师，受制于老板给的成本指标，都只能妥协。30KW半桥的商用电磁炉机芯，有厂家卖1850元一台。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><span>过流整定值设定在超过额定最大功率电流的20%动作，这样做抛锅时也从来没有出现过无故关机啊。那些放大到100多安培动作的简直是在冒险和碰运气了。</span></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/359394#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/359394#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            spt77</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.5</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>11</span></div> <div class="time" data-v-0ac9a365>2013-10-24 15:07</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><!----> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>理论没有错，实际当然更不会错，错在理论应用的条件。教科书上的u值都是在静态（直流）条件下的，而电磁炉频率约20K，所以才出现所谓的理论和实际不符的矛盾。</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/134089#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/134089#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            firefox886</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>12</span></div> <div class="time" data-v-0ac9a365>2013-10-24 18:44</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@spt77</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>理论没有错，实际当然更不会错，错在理论应用的条件。教科书上的u值都是在静态（直流）条件下的，而电磁炉频率约20K，所以才出现所谓的理论和实际不符的矛盾。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><img src="http://www.dianyuan.com/statics/js/kindeditor/plugins/emoticons/images/20.gif" /></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/60679#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/60679#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            igbtsy</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.9</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>13</span></div> <div class="time" data-v-0ac9a365>2013-10-26 09:30</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@spt77</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>理论没有错，实际当然更不会错，错在理论应用的条件。教科书上的u值都是在静态（直流）条件下的，而电磁炉频率约20K，所以才出现所谓的理论和实际不符的矛盾。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>连长：你自己亲自动手测一下就知道了，理论和实践都没错，错的是没有把理论活学活用。</p><p>应当是理论指导实践，实践充实理论。</p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div><div data-v-ae389e34><div class="content" data-v-0ac9a365 data-v-ae389e34><div class="reply-item p-t-20" data-v-0ac9a365><div class="top p-b-5" data-v-0ac9a365><a href="/people/359394#article" target="_blank" class="m-r-10 m-l-20" data-v-0ac9a365></a> <div class="author-name-box m-t-2" data-v-0ac9a365><div class="box" data-v-0ac9a365><a href="/people/359394#topic" target="_blank" class="name m-r-15" data-v-0ac9a365>            spt77</a> <div class="tag-con p-t-1" data-v-0ac9a365><div class="tag-container tag" style="width:57px;" data-v-1af9ed02 data-v-0ac9a365><svg aria-hidden="true" class="svg-icon" style="width:57px;" data-v-78ce89ca data-v-1af9ed02><use xlink:href="#icon-tag-userlev" data-v-78ce89ca></use></svg> <div class="lev-text" data-v-1af9ed02>LV.5</div></div></div> <span class="num p-l-6 p-r-6" data-v-0ac9a365>14</span></div> <div class="time" data-v-0ac9a365>2013-12-16 12:44</div></div></div> <!----> <!----> <!----> <div class="bottom with-border p-b-10 bottom-border" data-v-0ac9a365><div class="at m-b-10" data-v-0ac9a365><div data-v-0ac9a365><div class="name" data-v-0ac9a365>@igbtsy</div> <div class="text" data-v-0ac9a365><span data-v-0ac9a365>连长：你自己亲自动手测一下就知道了，理论和实践都没错，错的是没有把理论活学活用。应当是理论指导实践，实践充实理论。</span></div></div> <!----></div> <div class="main-text m-b-10" style="display:;" data-v-0ac9a365><p>不知道你在说啥，我和你说得一个意思啊！<img src="http://www.dianyuan.com/statics/js/kindeditor/plugins/emoticons/images/32.gif" /></p></div> <div class="btns" data-v-0ac9a365><div class="praise" data-v-0ac9a365><!----> <span class="num" data-v-0ac9a365>0</span></div> <!----> <div class="reply-btn m-l-15" data-v-0ac9a365>          回复        </div></div> <!----></div></div> <span class="report-container btn" data-v-42f3a156 data-v-0ac9a365><span data-v-42f3a156></span> <div class="el-dialog__wrapper" style="display:none;" data-v-42f3a156><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:400px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><div class="el-dialog__footer"><div class="dialog-footer" data-v-42f3a156><button type="button" class="el-button el-button--primary el-button--medium" data-v-42f3a156><!----><!----><span>提交</span></button></div></div></div></div></span> <div class="el-dialog__wrapper" style="display:none;z-index:3001;" data-v-5fb16e1c data-v-0ac9a365><div role="dialog" aria-modal="true" aria-label="提示" class="el-dialog" style="margin-top:15vh;"><div class="el-dialog__header"><span class="el-dialog__title">提示</span><!----></div><!----><!----></div></div></div></div></div> <!----> <!----></div></div> <div class="side-right" data-v-7ad05fe6><!----> <div class="topic-read" data-v-59aca5a0 data-v-7ad05fe6><div class="head" data-v-59aca5a0>工程师都在看</div> <div class="body" data-v-59aca5a0><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740030.html" target="_blank" data-v-59aca5a0>          求助！一台低频无鳞机，下水没有任何效果不知道什么问题！！！（内有图纸）        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/926684#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/926684#topic" target="_blank" class="username" data-v-59aca5a0>            小猪被骑          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740038.html" target="_blank" data-v-59aca5a0>          SG3525+LM358驱动小立板，接上驱动变压器波形不正常，不接变压器波形正常方波，请各位老师指点        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/927891#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/927891#topic" target="_blank" class="username" data-v-59aca5a0>            dy-MLnXjkI3          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740182.html" target="_blank" data-v-59aca5a0>          LLC集成变压器        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/800744#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/800744#topic" target="_blank" class="username" data-v-59aca5a0>            Liwis          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740278.html" target="_blank" data-v-59aca5a0>          VCC启动   三极管发热严重        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/929071#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/929071#topic" target="_blank" class="username" data-v-59aca5a0>            dy-XDTikNEE          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div><div class="item" data-v-59aca5a0><div class="title m-b-8" data-v-59aca5a0><a href="/bbs/2740430.html" target="_blank" data-v-59aca5a0>          NO Y EMC 小功率开关电源12W整改实例！        </a></div> <div class="bottom-box" data-v-59aca5a0><div class="author-box" data-v-59aca5a0><a href="/people/912752#topic" target="_blank" class="m-r-5" data-v-59aca5a0></a> <a href="/people/912752#topic" target="_blank" class="username" data-v-59aca5a0>            小功率反激开关电源          </a></div> <div class="icon-box m-t-4" data-v-59aca5a0><!----></div></div></div></div></div> <div class="topic-jh" style="display:none;" data-v-0882bfd0 data-v-7ad05fe6><div class="head" data-v-0882bfd0><span class="title" data-v-0882bfd0>精华推荐</span> <span class="btn" data-v-0882bfd0><i class="el-icon-refresh m-r-8" data-v-0882bfd0></i>换一换</span></div> <div class="body" data-v-0882bfd0></div></div></div></div></div></div> <div class="up-btn-box" style="margin-left:610px;" data-v-02ef3126 data-v-3789a8ff><div class="iconbutton" data-v-02ef3126><i class="el-icon-edit" data-v-02ef3126></i></div> <div data-v-02ef3126>立</div> <div data-v-02ef3126>即</div> <div data-v-02ef3126>发</div> <div data-v-02ef3126>帖</div></div> <div class="up-btn-box" style="margin-left:610px;display:none;" data-v-43a93d98 data-v-3789a8ff><i class="el-icon-arrow-up" data-v-43a93d98></i></div> <div class="qrcode-box" data-v-3789a8ff><img src="https://dianyuan-public.oss-cn-shenzhen.aliyuncs.com/static/dianyuanwang/BBS/PC/app-dowload-qrcode.png?x-oss-process=image/format,webp" class="qrcode-img" style="display:none;" data-v-3789a8ff></div></div> <!----> <!----></section> <!----></div></div> <!----></div></div></div><script>window.__NUXT__={serverRendered:true,routePath:"\"\u002Fbbs\u002F1450366.html\""};</script><script src="https://static.dianyuan.com/f34f517.js" defer></script><script src="https://static.dianyuan.com/233.c9127c92456b6d496a5a.1725334704076.js" defer></script><script src="https://static.dianyuan.com/194.8cbde047d3db9a0a41a9.1725334704076.js" defer></script><script src="https://static.dianyuan.com/40.616671c5f50bb562b0d6.1725334704076.js" defer></script><script src="https://static.dianyuan.com/192.b3a6c12e2f180fd7475f.1725334704076.js" defer></script><script src="https://static.dianyuan.com/39.698ad46ce51d0cb77c8c.1725334704076.js" defer></script>  </body></html>]]></content>
    
    
      
      
    <summary type="html">&lt;!doctype html&gt;
&lt;html data-n-head-ssr lang=&quot;zh_CN&quot; data-n-head=&quot;%7B%22lang%22:%7B%22ssr%22:%22zh_CN%22%7D%7D&quot;&gt;
  &lt;head &gt;
    &lt;title&gt;理论和实际不符合</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>理论和实际不符合电磁炉加锅后电感量的变化情况</title>
    <link href="https://zml3589110.github.io/posts/4028901733.html"/>
    <id>https://zml3589110.github.io/posts/4028901733.html</id>
    <published>2024-09-16T02:21:20.000Z</published>
    <updated>2024-11-02T09:10:07.097Z</updated>
    
    <content type="html"><![CDATA[<iframe src="理论和实际不符合电磁炉加锅后电感量的变化情况\理论和实际不符合！电磁炉加锅后电感量的变化情况！-电源网.html" width="100%" height="1000px"></iframe><p>卡卡狄明阳<br>LV.1</p><ul><li>关注+ 私信<br>理论上，电磁炉加锅后相当于电感线圈加上了一个u值较大的物质，总体等效u值应该变大，电感量变大！我查了网上一些资料说，电磁炉检锅用脉冲检锅，其原理也是电感变大啊！但是我加锅以后电感量却是减小了！我拿来磁芯加在上面是电感变大，而加锅子后却变小！求大shen么解释a!</li></ul><p>新月GG<br>LV.10<br>2<br>2013-08-19 08:58<br>锅应该不算磁芯吧。变小的可能，也要考虑分布电容的影响。还有就是要注意下工作频率（测试频率）。</p><p>卡卡狄明阳<br>LV.1<br>3<br>2013-08-19 09:56<br>@新月GG<br>锅应该不算磁芯吧。变小的可能，也要考虑分布电容的影响。还有就是要注意下工作频率（测试频率）。<br>不算磁芯，但是都是有u值得物质啊。</p><p>szprime<br>LV.3<br>4<br>2013-10-10 14:03<br>@卡卡狄明阳<br>不算磁芯，但是都是有u值得物质啊。<br>锅是磁芯物质，只是有涡流，极端比喻就像有无数个感应线路短路，所以电感量减少，就好像你测试变压器电感，短路了输出，只测试到了漏感。</p><p>igbtsy<br>LV.9<br>5<br>2013-10-10 16:15<br>@szprime<br>锅是磁芯物质，只是有涡流，极端比喻就像有无数个感应线路短路，所以电感量减少，就好像你测试变压器电感，短路了输出，只测试到了漏感。<br>放上普通铁锅电感量变小，放上430等不锈铁锅，电感量变大。为了抛锅时的安全起见，有工厂把锅做成复底的凹锅，外面是普通铁皮锅的材料，里面是304材质的不锈钢。</p><p>igbtsy<br>LV.9<br>6<br>2013-10-11 11:33<br>@igbtsy<br>放上普通铁锅电感量变小，放上430等不锈铁锅，电感量变大。为了抛锅时的安全起见，有工厂把锅做成复底的凹锅，外面是普通铁皮锅的材料，里面是304材质的不锈钢。<br>为了传热效果与燃气炉相仿，大锅灶的锅也有用三层复合板压制的。最外面是430的，中间是铝板，内层是304的。</p><p>firefox886<br>LV.9<br>7<br>2013-10-14 18:24<br>@szprime<br>锅是磁芯物质，只是有涡流，极端比喻就像有无数个感应线路短路，所以电感量减少，就好像你测试变压器电感，短路了输出，只测试到了漏感。<br>这个观点才是正确的！</p><p>igbtsy<br>LV.9<br>8<br>2013-10-14 20:51<br>@firefox886<br>这个观点才是正确的！<br>直接用430锅做炒锅的，有些人不去解决电路的问题，直接把过流整定值放大到100多A，实在无法理解他们这样做的目的。应当按普通铁锅一样，过流整定值是超过额定最大功率电流的20%动作。这样做才是安全的。</p><p>my.mai<br>LV.9<br>9<br>2013-10-15 08:32<br>@igbtsy<br>直接用430锅做炒锅的，有些人不去解决电路的问题，直接把过流整定值放大到100多A，实在无法理解他们这样做的目的。应当按普通铁锅一样，过流整定值是超过额定最大功率电流的20%动作。这样做才是安全的。<br>这是矛和盾的故事。客户想用低价钱，买功率大的，抛锅要尽量大的功率，不允许老是关机。而企业限制于生产成本，销售价格，也不可能预留几倍的余量，功率元件都是刚好够用，甚至是超额使用了。一分价钱一分货，市场定律，市场决定了一切。再好的工程师，受制于老板给的成本指标，都只能妥协。30KW半桥的商用电磁炉机芯，有厂家卖1850元一台。</p><p>igbtsy<br>LV.9<br>10<br>2013-10-15 15:08<br>@my.mai<br>这是矛和盾的故事。客户想用低价钱，买功率大的，抛锅要尽量大的功率，不允许老是关机。而企业限制于生产成本，销售价格，也不可能预留几倍的余量，功率元件都是刚好够用，甚至是超额使用了。一分价钱一分货，市场定律，市场决定了一切。再好的工程师，受制于老板给的成本指标，都只能妥协。30KW半桥的商用电磁炉机芯，有厂家卖1850元一台。<br>过流整定值设定在超过额定最大功率电流的20%动作，这样做抛锅时也从来没有出现过无故关机啊。那些放大到100多安培动作的简直是在冒险和碰运气了。</p><p>spt77<br>LV.5<br>11<br>2013-10-24 15:07<br>理论没有错，实际当然更不会错，错在理论应用的条件。教科书上的u值都是在静态（直流）条件下的，而电磁炉频率约20K，所以才出现所谓的理论和实际不符的矛盾。</p><p>firefox886<br>LV.9<br>12<br>2013-10-24 18:44<br>@spt77<br>理论没有错，实际当然更不会错，错在理论应用的条件。教科书上的u值都是在静态（直流）条件下的，而电磁炉频率约20K，所以才出现所谓的理论和实际不符的矛盾。</p><p>igbtsy<br>LV.9<br>13<br>2013-10-26 09:30<br>@spt77<br>理论没有错，实际当然更不会错，错在理论应用的条件。教科书上的u值都是在静态（直流）条件下的，而电磁炉频率约20K，所以才出现所谓的理论和实际不符的矛盾。<br>连长：你自己亲自动手测一下就知道了，理论和实践都没错，错的是没有把理论活学活用。</p><p>应当是理论指导实践，实践充实理论。</p><p>spt77<br>LV.5<br>14<br>2013-12-16 12:44<br>@igbtsy<br>连长：你自己亲自动手测一下就知道了，理论和实践都没错，错的是没有把理论活学活用。应当是理论指导实践，实践充实理论。<br>不知道你在说啥，我和你说得一个意思啊！</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.dianyuan.com/bbs/1450366.html">理论和实际不符合电磁炉加锅后电感量的变化情况</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">理论和实际不符合电磁炉加锅后电感量的变化情况</summary>
    
    
    
    <category term="电磁炉" scheme="https://zml3589110.github.io/categories/%E7%94%B5%E7%A3%81%E7%82%89/"/>
    
    <category term="波形" scheme="https://zml3589110.github.io/categories/%E6%B3%A2%E5%BD%A2/"/>
    
    
    <category term="电磁炉" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E7%A3%81%E7%82%89/"/>
    
    <category term="半桥" scheme="https://zml3589110.github.io/tags/%E5%8D%8A%E6%A1%A5/"/>
    
    <category term="CE波形" scheme="https://zml3589110.github.io/tags/CE%E6%B3%A2%E5%BD%A2/"/>
    
    <category term="波形查看" scheme="https://zml3589110.github.io/tags/%E6%B3%A2%E5%BD%A2%E6%9F%A5%E7%9C%8B/"/>
    
    <category term="电压" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E5%8E%8B/"/>
    
    <category term="电流" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E6%B5%81/"/>
    
    <category term="电容" scheme="https://zml3589110.github.io/tags/%E7%94%B5%E5%AE%B9/"/>
    
    <category term="IGBT" scheme="https://zml3589110.github.io/tags/IGBT/"/>
    
    <category term="igbtsy" scheme="https://zml3589110.github.io/tags/igbtsy/"/>
    
  </entry>
  
</feed>
